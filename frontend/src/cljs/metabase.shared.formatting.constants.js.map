{"version":3,"sources":["metabase/shared/formatting/constants.cljc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;0DAAA,kEAAAA,5HAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;qBAAA,AAAAE,4CAAAF,eAAA,5EAEWI;AAFX,AAGE,mEAAA,5DAACC,6CAAED;;AAEL;;;;8DAAA,sEAAAE,pIAAME;AAAN,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAN,4BAAAM;qBAAA,AAAAL,4CAAAK,eAAA,5EAGWH;AAHX,AAIE,IAAAK,eAAA,iFAAA,eAAA;AAAA,AAAA,QAAAA,6CAAAA,6DAAAA,lBAA0BL,yCAAAA;;AAE5B;;;0DAAA,1DAAcM;AAId;;;0DAAA,1DAAcC;AAId;;;;;;yDAAA,2CAAA,WAAA,mFAAA,2DAAA,IAAA,yEAAA,IAAA,4DAAA,WAAA,mFAAA,yEAAA,IAAA,2DAAA,IAAA,4DAAA,WAAA,mFAAA,oDAAA,IAAA,2DAAA,IAAA,iFAAA,eAAA,mFAAA,iEAAA,IAAA,yEAAA,KAAA,4DAAA,eAAA,mFAAA,yEAAA,IAAA,iEAAA,KAAA,4DAAA,qBAAA,mFAAA,8EAAA,KAAA,iEAAA,IAAA,yEAAA,KAAA,t4DAAcC;AAYd;;;;;;yDAAA,2CAAA,SAAA,mFAAA,gEAAA,IAAA,8DAAA,IAAA,gEAAA,QAAA,mFAAA,gEAAA,IAAA,sEAAA,KAAA,mFAAA,nsBAAcC;AASd;;;;;;6DAAA,2CAAA,mBAAA,2CAAA,kLAAA,xVAAcC,yOAKsB,mGAAA,nGAACZ,4CAAIU,qIACL,mGAAA,nGAACV,4CAAIW;AAGtC,AACE,iDAAA,jDAAOE,0GAAWC;AAAlB,AACE,kDAAIA,tBAAE,AAACC,wBAAY,qBAAA,rBAACC,7CAAeC;;;AAErC;;;AAAcC,4DAEZ,AAACL,+CAAUH;;;AAEb;;;AAAcS,gEAEZ,AAACN,+CAAUD;;;AAEb;;;AAAcQ,4DAEZ,AAACP,+CAAUF;;;AAEb;;;AAAcU,yDAEZ,AAACR,+CAAUS","names":["p__81583","map__81584","cljs.core/--destructure-map","cljs.core.get","metabase.shared.formatting.constants/abbreviated?","output-density","cljs.core._EQ_","p__81585","map__81586","metabase.shared.formatting.constants/condense-ranges?","fexpr__81588","metabase.shared.formatting.constants/default-date-style","metabase.shared.formatting.constants/default-time-style","metabase.shared.formatting.constants/known-date-styles","metabase.shared.formatting.constants/known-time-styles","metabase.shared.formatting.constants/known-datetime-styles","metabase.shared.formatting.constants/basic-map","m","cljs.core/update-vals","cljs.core/constantly","cljs.core/clj->js","metabase.shared.formatting.constants/known-date-styles-js","metabase.shared.formatting.constants/known-datetime-styles-js","metabase.shared.formatting.constants/known-time-styles-js","metabase.shared.formatting.constants/format-strings-js","metabase.shared.formatting.internal.date-builder/format-strings"],"sourcesContent":["(ns metabase.shared.formatting.constants\n  #?(:cljs (:require\n            [metabase.shared.formatting.internal.date-builder :as builder])))\n\n(defn abbreviated?\n  \"Months and weekdays should be abbreviated for `compact` output.\"\n  [{:keys [output-density]}]\n  (= output-density \"compact\"))\n\n(defn condense-ranges?\n  \"For `compact` and `condensed` output, ranges should be shortened if they're in the same month or year.\n  Eg. `January 8 - 15, 2022`, or `January 28 - February 4, 2022`.\"\n  [{:keys [output-density]}]\n  (#{\"compact\" \"condensed\"} output-density))\n\n(def ^:export default-date-style\n  \"The default date style, used in a few places in the JS code as well as by this formatting library.\"\n  \"MMMM D, YYYY\")\n\n(def ^:export default-time-style\n  \"The default time style, used in a few places in the JS code as well as by this formatting library.\"\n  \"h:mm A\")\n\n(def ^:export known-date-styles\n  \"A map of string patterns for dates, to functions from options to the data structures consumed by\n  [[metabase.shared.formatting.internal.date-builder]].\n\n  Prefer passing the data structure directly, or use `:date_style`.\"\n  {\"M/D/YYYY\"           [:month-d \"/\" :day-of-month-d \"/\" :year]\n   \"D/M/YYYY\"           [:day-of-month-d \"/\" :month-d \"/\" :year]\n   \"YYYY/M/D\"           [:year \"/\" :month-d \"/\" :day-of-month-d]\n   \"MMMM D, YYYY\"       [:month-full \" \" :day-of-month-d \", \" :year]\n   \"D MMMM, YYYY\"       [:day-of-month-d \" \" :month-full \", \" :year]\n   \"dddd, MMMM D, YYYY\" [:day-of-week-full \", \" :month-full \" \" :day-of-month-d \", \" :year]})\n\n(def ^:export known-time-styles\n  \"A table of string patterns for dates to the data structures consumed by\n  [[metabase.shared.formatting.internal.date-builder]].\n\n  Don't rely on these - prefer passing the data structure directly, or use `:date_style`.\"\n  {\"h:mm A\" [:hour-12-d  \":\" :minute-dd \" \" :am-pm]\n   \"HH:mm\"  [:hour-24-dd \":\" :minute-dd]\n   \"HH\"     [:hour-24-dd]})\n\n(def ^:export known-datetime-styles\n  \"A table of string patterns for datetimes to the data structures consumed by\n  [[metabase.shared.formatting.internal.date-builder]].\n\n  Don't rely on these - prefer passing the data structure directly, or use `:date_style`.\"\n  {\"M/D/YYYY, h:mm A\" {:date-format (get known-date-styles \"M/D/YYYY\")\n                       :time-format (get known-time-styles \"h:mm A\")}})\n\n#?(:cljs\n   (do\n     (defn- basic-map [m]\n       (-> m (update-vals (constantly 1)) clj->js))\n\n     (def ^:export known-date-styles-js\n       \"Vanilla JS object version of [[known-date-styles]] that can be used with keyof in TS.\"\n       (basic-map known-date-styles))\n\n     (def ^:export known-datetime-styles-js\n       \"Vanilla JS object version of [[known-datetime-formats]] that can be used with keyof in TS.\"\n       (basic-map known-datetime-styles))\n\n     (def ^:export known-time-styles-js\n       \"Vanilla JS object version of [[known-time-formats]] that can be used with keyof in TS.\"\n       (basic-map known-time-styles))\n\n     (def ^:export format-strings-js\n       \"Vanilla JS object version of [[builder/format-strings]] that can be used with keyof in TS.\"\n       (basic-map builder/format-strings))))\n"]}