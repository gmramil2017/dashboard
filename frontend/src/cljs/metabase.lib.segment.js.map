{"version":3,"sources":["metabase/lib/segment.cljc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,AAAAA,kGAAA,2EAAA,WACGC,OAAOC,cAAcC,iBAAiBC;AADzC,AAEE,IAAAC,mBAAI,AAAC,gDAAA,oEAAA,pHAACC,0KAA6BH;AAAnC,AAAA,oBAAAE;AAAAA;;AACI,OAAAE,kCAAA;;;AAEN,AAAAP,kGAAA,2DAAA,8BAAAQ,nBACGG,MAAMC,sBAA6CI;AADtD,AAAA,IAAAP,aAAAD;WAAA,AAAAE,4CAAAD,WAAA,IAAA,lEACuBI;YADvB,AAAAH,4CAAAD,WAAA,IAAA,nEAC4BK;yBAD5B,AAAAJ,4CAAAD,WAAA,IAAA,hFACkCM;AADlC,AAEE,IAAAV,mBAAI,gDAAA,9CAAM,AAACY,yBAASF,qBACd,iBAAAG,qBAA4B,AAACC,8BAAqBR,MAAMI;AAAxD,AAAA,oBAAAG;AAAA,AAAA,uBAAAA,nBAAWf;AAAX,AACE,OAACiB,6EAAsCT,MAAMC,aAAaT,iBAAiBa;;AAD7E;;KADF;AAAJ,AAAA,oBAAAX;AAAAA;;AAGI,OAAAE,kCAAA","names":["metabase.lib.metadata.calculation/display-name-method","_query","_stage-number","segment-metadata","_style","or__5045__auto__","cljs.core.some_fn","metabase.shared.util.i18n/js-i18n","p__80924","vec__80927","cljs.core.nth","query","stage-number","_tag","_opts","segment-id-or-name","style","cljs.core/integer?","temp__5804__auto__","metabase.lib.metadata/segment","metabase.lib.metadata.calculation.display_name"],"sourcesContent":["(ns metabase.lib.segment\n  \"A Metric is a saved MBQL query stage snippet with `:filter`. Segments are always boolean expressions.\"\n  (:require\n   [metabase.lib.metadata :as lib.metadata]\n   [metabase.lib.metadata.calculation :as lib.metadata.calculation]\n   [metabase.shared.util.i18n :as i18n]))\n\n(defmethod lib.metadata.calculation/display-name-method :metadata/segment\n  [_query _stage-number segment-metadata _style]\n  (or ((some-fn :display-name :name) segment-metadata)\n      (i18n/tru \"[Unknown Segment]\")))\n\n(defmethod lib.metadata.calculation/display-name-method :segment\n  [query stage-number [_tag _opts segment-id-or-name] style]\n  (or (when (integer? segment-id-or-name)\n        (when-let [segment-metadata (lib.metadata/segment query segment-id-or-name)]\n          (lib.metadata.calculation/display-name query stage-number segment-metadata style)))\n      (i18n/tru \"[Unknown Segment]\")))\n"]}