{"version":3,"sources":["metabase/util/log.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,AAEA,AAACA;AACD,8BAAA,2CAAA,6DAAA,tIAACC;AAGD;;;uCAAA,vCAAMC,sFAEHC,YAAYC;AAFf,AAGE,OAACC,oBAAgB,AAACC,wDAAWH,aAAa,AAACI,yBAAUH;;AAGvD,AAAA;;;+BAAA,uCAAAI,tEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,kEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,oEAAA,pEAAME,+EAEHM,IAAMC;AAFT,AAGE,OAACC,8CAAMC,mBAAeH,IAAIC;;;AAH5B,CAAA,uDAAA,vDAAMP;;AAAN;AAAA,CAAA,iDAAA,WAAAC,5DAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAKA;;;gCAAA,hCAAMS,wEAEHpB;AAFH,AAGE,GAAI,mDAAA,nDAACqB,6CAAErB;AAAP;;AAEEA","names":["lambdaisland.glogi.console/install!","lambdaisland.glogi/set-levels","metabase.util.log/is-loggable?","logger-name","level","goog.log/isLoggable","lambdaisland.glogi.logger","lambdaisland.glogi/level","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","metabase.util.log/format-msg","seq53375","G__53376","cljs.core/first","cljs.core/next","self__5754__auto__","fmt","args","cljs.core.apply","goog.string/format","metabase.util.log/glogi-level","cljs.core._EQ_"],"sourcesContent":["(ns metabase.util.log\n  (:require\n   [goog.log :as glog]\n   [goog.string :as gstring]\n   [goog.string.format :as gstring.format]\n   [lambdaisland.glogi :as log]\n   [lambdaisland.glogi.console :as glogi-console])\n  (:require-macros\n   [metabase.util.log]))\n\n;; The formatting functionality is only loaded if you depend on goog.string.format.\n(comment gstring.format/keep-me)\n\n(glogi-console/install!)\n(log/set-levels {:glogi/root :info})\n\n#_{:clj-kondo/ignore [:clojure-lsp/unused-public-var]}\n(defn is-loggable?\n  \"Part of the internals of [[glogi-logp]] etc.\"\n  [logger-name level]\n  (glog/isLoggable (log/logger logger-name) (log/level level)))\n\n#_{:clj-kondo/ignore [:clojure-lsp/unused-public-var]}\n(defn format-msg\n  \"Part of the internals of [[logf]].\"\n  [fmt & args]\n  (apply gstring/format fmt args))\n\n(defn glogi-level\n  \"Converts our standard `metabase.util.log` levels to those understood by glogi.\"\n  [level]\n  (if (= level :fatal)\n    :shout\n    level))\n"]}