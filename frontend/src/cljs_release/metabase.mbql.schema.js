var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");require("./shadow.js.shim.module$moment.js");require("./shadow.js.shim.module$moment_timezone.js");require("./clojure.set.js");require("./metabase.mbql.schema.helpers.js");require("./metabase.mbql.schema.macros.js");require("./schema.core.js");
'use strict';var YM,Rha,aN,bN,cN,dN,fN,gN,hN,iN,lN,mN,nN,oN,pN,qN,rN,tN,uN,Sha,Tha,Uha,Vha,Wha,Xha,wN,Yha,Zha,$ha,aia,zN,AN,BN,CN,bia,DN,FN,cia,dia,eia,HN,IN,fia,JN,KN,gia,hia,LN,MN,iia,NN,ON,QN,RN,jia,SN,kia,UN,lia,mia,VN,XN,nia,oia,$N,aO,pia,qia,dO,ria,eO,sia,hO,iO,jO,tia,uia,via,kO,lO,mO,wia,xia,nO,yia,zia,Aia,oO,rO,sO,Bia,Cia,Dia,Eia,uO,vO,wO,Fia,xO,Gia,Hia,Iia,yO,Jia,Kia,Lia,Mia,zO,Nia,Oia,CO,DO,EO,FO,GO,Pia,JO,Qia,Ria,KO,LO,Sia,MO,NO,Tia,PO,QO,RO,TO,UO,Uia,VO,Via,Wia,Xia,WO,XO,YO,aP,Yia,cP,
dP,eP,fP,Zia,$ia,aja,bja,hP,iP,cja,jP,dja,eja,fja,gja,nP,hja,ija,oP,pP,qP,jja,rP,sP,tP,kja,uP,lja,mja,vP,wP,xP,zP,AP,nja,CP,DP,EP,FP,oja,IP,pja,JP,KP,LP,MP,NP,OP,qja,rja,sja,tja,uja,QP,vja,wja,RP,SP,TP,xja,UP,yja,VP,zja,Aja,WP,Bja,Cja,Dja,ZP,$P,Eja,Fja,Gja,cQ,Hja,Ija,dQ,Jja,eQ,Kja,gQ,hQ,Lja,iQ,jQ,kQ,lQ,mQ,Mja,nQ,Nja,oQ,Oja,Pja,pQ,qQ,rQ,Qja,Rja,sQ,Sja,Tja,tQ,Uja,Vja,Wja,Xja,wQ,Yja,Zja,$ja,aka,bka,cka,dka,BQ,CQ,DQ,EQ,FQ,eka,GQ,HQ,IQ,JQ,fka,gka,hka,ika,KQ,LQ,MQ,jka,NQ,OQ,kka,lka,PQ,mka,nka,RQ,oka,TQ,
UQ,pka,VQ,qka,WQ,XQ,rka,YQ,ZQ,ska,$Q,tka,aR,uka,cR,dR,eR,fR,vka,gR,wka,hR,xka,iR,jR,lR,yka,zka,Aka,nR,oR,Bka,pR,Cka,Dka,Eka,qR,Fka,rR,Gka,tR,uR,Hka,Ika,yR,zR,Jka,AR,BR,CR,DR,Kka,Lka;YM=function(a,b){if(null!=a&&null!=a.Nd)a=a.Nd(a,b);else{var c=YM[$CLJS.Na(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=YM._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $CLJS.Ob("CoreSpec.checker",a);}return a};
Rha=function(a,b){var c=new $CLJS.k(null,3,[$CLJS.vL,a,$CLJS.yL,!1,$CLJS.wL,$CLJS.ij.g($CLJS.P)],null);return a.h?a.h(b,c):a.call(null,b,c)};$CLJS.ZM=function(a,b){return $CLJS.Tb(function(c,d){var e=$CLJS.K(d,0,null);d=$CLJS.K(d,1,null);return $CLJS.Ie(a,e)?$CLJS.U.j(c,d,$CLJS.M.h(a,e)):c},$CLJS.Q.j($CLJS.Jm,a,$CLJS.mi(b)),b)};$CLJS.$M=function(a,b){return new $CLJS.qM(a,!1,b,null,null,null)};aN=function(a){return new $CLJS.hM(a,null,null,null)};
bN=function(a,b,c,d){this.Kc=a;this.F=b;this.m=c;this.G=d;this.D=2230716170;this.K=139264};cN=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return cN.l(0<b.length?new $CLJS.y(b.slice(0),0,null):null)};dN=function(a,b,c,d,e){this.fc=a;this.mc=b;this.F=c;this.m=d;this.G=e;this.D=2230716170;this.K=139264};fN=function(a,b,c){return eN.l($CLJS.J([a,b,$CLJS.eg(!0),c]))};gN=function(a,b,c,d){this.wc=a;this.F=b;this.m=c;this.G=d;this.D=2230716170;this.K=139264};
hN=function(a){if(!(null!=a?a.D&32768||$CLJS.t===a.Mf||(a.D?0:$CLJS.Mb($CLJS.Bz,a)):$CLJS.Mb($CLJS.Bz,a)))throw Error($CLJS.dL("Not an IDeref: %s",$CLJS.J([a])));return new gN(a,null,null,null)};iN=function(a,b,c,d){this.X=a;this.F=b;this.m=c;this.G=d;this.D=2230716170;this.K=139264};$CLJS.jN=function(a){return new iN(a,null,null,null)};$CLJS.kN=function(a){return $CLJS.Rm.h($CLJS.rL,Rha(function(b,c){return YM($CLJS.WL(b),c)},a))};
lN=function(a,b){if($CLJS.qe(b)){var c=$CLJS.K(b,0,null),d=$CLJS.K(b,1,null);switch(c instanceof $CLJS.N?c.N:null){case "optional":return new $CLJS.qM($CLJS.jN(d),!0,a,null,null,null);case "rest":return $CLJS.dM(d,a);default:return $CLJS.$M(b,a)}}else return $CLJS.$M(b,a)};
mN=function(a,b){return $CLJS.Sg($CLJS.pf($CLJS.$M($CLJS.$L(a),a),function(){return function e(d){return new $CLJS.Af(null,function(){for(;;){var f=$CLJS.A(d);if(f){if($CLJS.re(f)){var g=$CLJS.$c(f),l=$CLJS.E(g),n=$CLJS.Df(l);a:for(var q=0;;)if(q<l){var u=$CLJS.be(g,q),v=$CLJS.K(u,0,null);u=$CLJS.K(u,1,null);v=lN(v,u);n.add(v);q+=1}else{g=!0;break a}return g?$CLJS.If($CLJS.Kf(n),e($CLJS.ad(f))):$CLJS.If($CLJS.Kf(n),null)}g=$CLJS.C(f);n=$CLJS.K(g,0,null);g=$CLJS.K(g,1,null);return $CLJS.pf(lN(n,g),
e($CLJS.zd(f)))}return null}},null,null)}($CLJS.fu(2,2,b))}()))};nN=function(a,b){var c=$CLJS.ne(b);return c?(c=$CLJS.C(b)instanceof $CLJS.N)?$CLJS.ke(a)?(b=$CLJS.C(b),a=$CLJS.yi(a),a.g?a.g(b):a.call(null,b)):$CLJS.F.h(a,$CLJS.C(b)):c:c};
oN=function(a){return $CLJS.dM($CLJS.Q.h(eN,$CLJS.We($CLJS.wg,function(){return function d(c){return new $CLJS.Af(null,function(){for(;;){var e=$CLJS.A(c);if(e){if($CLJS.re(e)){var f=$CLJS.$c(e),g=$CLJS.E(f),l=$CLJS.Df(g);a:for(var n=0;;)if(n<g){var q=$CLJS.be(f,n),u=$CLJS.K(q,0,null);q=$CLJS.K(q,1,null);l.add(new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.fg(nN,u),q],null));n+=1}else{f=!0;break a}return f?$CLJS.If($CLJS.Kf(l),d($CLJS.ad(e))):$CLJS.If($CLJS.Kf(l),null)}f=$CLJS.C(e);l=$CLJS.K(f,0,null);f=$CLJS.K(f,
1,null);return $CLJS.pf(new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.fg(nN,l),f],null),d($CLJS.zd(e)))}return null}},null,null)}(a)}())),["Must be a valid instance of one of these clauses: ",$CLJS.Uu.h(", ",$CLJS.xg.h($CLJS.C,a))].join(""))};pN=function(a){return $CLJS.fM(a,$CLJS.A,"Non-empty")};qN=function(a){return $CLJS.A(a)?$CLJS.Q.h($CLJS.Cu,a):!0};rN=function(a){return"string"===typeof a?$CLJS.qi.h(Date.parse(a),NaN):null};
$CLJS.AL.prototype.Nd=$CLJS.Ma(56,function(){var a=this;return function(b){var c=a.na.g?a.na.g(b):a.na.call(null,b);return $CLJS.m(c)?c:b}});
$CLJS.FL.prototype.Nd=$CLJS.Ma(55,function(a,b){var c=this,d=this,e=$CLJS.Tb(function(f,g){return $CLJS.aha(g,b,f)},function(f){return $CLJS.pL($CLJS.kL(d,f,new $CLJS.dj(function(){var g=$CLJS.fL(f);return c.Yb.g?c.Yb.g(g):c.Yb.call(null,g)}),null))},$CLJS.nf(c.options));return $CLJS.m(c.Rb)?function(f){var g=c.na.g?c.na.g(f):c.na.call(null,f);if($CLJS.m(g))return g;g=e.g?e.g(f):e.call(null,f);if($CLJS.qL(g))return g;f=$CLJS.m($CLJS.yL.g(b))?g:f;f=c.Rb.g?c.Rb.g(f):c.Rb.call(null,f);return $CLJS.m(f)?
f:g}:function(f){var g=c.na.g?c.na.g(f):c.na.call(null,f);return $CLJS.m(g)?g:e.g?e.g(f):e.call(null,f)}});
$CLJS.NL.prototype.Nd=$CLJS.Ma(54,function(a,b){var c=this,d=$CLJS.m($CLJS.yL.g(b))?c.pc:function(){return null},e=$CLJS.LL(c.elements,b,function(f,g){return g});return function(f){var g=c.na.g?c.na.g(f):c.na.call(null,f);if($CLJS.m(g))return g;var l=$CLJS.ij.g($CLJS.Rg);g=e.h?e.h(l,f):e.call(null,l,f);l=$CLJS.r(l);var n=(n=$CLJS.A(g))?n:$CLJS.ag($CLJS.qL,l);return $CLJS.m(n)?$CLJS.pL(c.$b.j?c.$b.j(f,l,g):c.$b.call(null,f,l,g)):d.g?d.g(l):d.call(null,l)}});$CLJS.sN={};tN={};uN={};$CLJS.h=bN.prototype;
$CLJS.h.ka=function(a,b){return this.U(null,b,null)};$CLJS.h.U=function(a,b,c){switch(b instanceof $CLJS.N?b.N:null){case "vs":return this.Kc;default:return $CLJS.M.j(this.m,b,c)}};$CLJS.h.va=function(a,b,c){return $CLJS.Tb(function(d,e){var f=$CLJS.K(e,0,null);e=$CLJS.K(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.W=function(a,b,c){return $CLJS.Oi(b,function(d){return $CLJS.Oi(b,$CLJS.Ti,""," ","",c,d)},"#schema.core.EnumSchema{",", ","}",c,$CLJS.wg.h(new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.zM,this.Kc],null)],null),this.m))};$CLJS.h.oa=function(){return new $CLJS.jh(this,1,new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.zM],null),$CLJS.m(this.m)?$CLJS.fd(this.m):$CLJS.Xf())};$CLJS.h.M=function(){return this.F};$CLJS.h.ea=function(){return 1+$CLJS.E(this.m)};
$CLJS.h.ca=function(){var a=this.G;return null!=a?a:this.G=a=2002701468^$CLJS.Ed(this)};$CLJS.h.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.F.h(this.Kc,b.Kc)&&$CLJS.F.h(this.m,b.m)};$CLJS.h.za=function(a,b){return $CLJS.Ie(new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.zM,null],null),null),b)?$CLJS.Jm.h($CLJS.Dc($CLJS.th.h($CLJS.P,this),this.F),b):new bN(this.Kc,this.F,$CLJS.Vf($CLJS.Jm.h(this.m,b)),null)};
$CLJS.h.ta=function(a,b){switch(b instanceof $CLJS.N?b.N:null){case "vs":return!0;default:return $CLJS.Ie(this.m,b)}};$CLJS.h.$=function(a,b,c){return $CLJS.m($CLJS.O.h?$CLJS.O.h($CLJS.zM,b):$CLJS.O.call(null,$CLJS.zM,b))?new bN(c,this.F,this.m,null):new bN(this.Kc,this.F,$CLJS.U.j(this.m,b,c),null)};$CLJS.h.da=function(){return $CLJS.A($CLJS.wg.h(new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.Ke($CLJS.zM,this.Kc)],null),this.m))};$CLJS.h.O=function(a,b){return new bN(this.Kc,b,this.m,this.G)};
$CLJS.h.ja=function(a,b){return $CLJS.qe(b)?this.$(null,$CLJS.be(b,0),$CLJS.be(b,1)):$CLJS.Tb($CLJS.dc,this,b)};$CLJS.h.Ab=function(){var a=this;return $CLJS.BL($CLJS.tL(this,function(b){return $CLJS.Ie(a.Kc,b)},function(b){return new $CLJS.jf(null,a.Kc,new $CLJS.jf(null,b,null,1,null),2,null)}))};$CLJS.h.Ea=function(){return $CLJS.pf($CLJS.Kha,this.Kc)};$CLJS.h.ma=$CLJS.t;$CLJS.h.W=function(a,b){return $CLJS.Qc(b,this.Ea(null))};cN.l=function(a){return new bN($CLJS.yi(a),null,null,null)};cN.v=0;
cN.B=function(a){return this.l($CLJS.A(a))};$CLJS.h=dN.prototype;$CLJS.h.ka=function(a,b){return this.U(null,b,null)};$CLJS.h.U=function(a,b,c){switch(b instanceof $CLJS.N?b.N:null){case "preds-and-schemas":return this.fc;case "error-symbol":return this.mc;default:return $CLJS.M.j(this.m,b,c)}};$CLJS.h.va=function(a,b,c){return $CLJS.Tb(function(d,e){var f=$CLJS.K(e,0,null);e=$CLJS.K(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.W=function(a,b,c){return $CLJS.Oi(b,function(d){return $CLJS.Oi(b,$CLJS.Ti,""," ","",c,d)},"#schema.core.ConditionalSchema{",", ","}",c,$CLJS.wg.h(new $CLJS.R(null,2,5,$CLJS.S,[new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.BM,this.fc],null),new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.AM,this.mc],null)],null),this.m))};$CLJS.h.oa=function(){return new $CLJS.jh(this,2,new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.BM,$CLJS.AM],null),$CLJS.m(this.m)?$CLJS.fd(this.m):$CLJS.Xf())};$CLJS.h.M=function(){return this.F};
$CLJS.h.ea=function(){return 2+$CLJS.E(this.m)};$CLJS.h.ca=function(){var a=this.G;return null!=a?a:this.G=a=1418435858^$CLJS.Ed(this)};$CLJS.h.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.F.h(this.fc,b.fc)&&$CLJS.F.h(this.mc,b.mc)&&$CLJS.F.h(this.m,b.m)};
$CLJS.h.za=function(a,b){return $CLJS.Ie(new $CLJS.ti(null,new $CLJS.k(null,2,[$CLJS.BM,null,$CLJS.AM,null],null),null),b)?$CLJS.Jm.h($CLJS.Dc($CLJS.th.h($CLJS.P,this),this.F),b):new dN(this.fc,this.mc,this.F,$CLJS.Vf($CLJS.Jm.h(this.m,b)),null)};$CLJS.h.ta=function(a,b){switch(b instanceof $CLJS.N?b.N:null){case "preds-and-schemas":case "error-symbol":return!0;default:return $CLJS.Ie(this.m,b)}};
$CLJS.h.$=function(a,b,c){return $CLJS.m($CLJS.O.h?$CLJS.O.h($CLJS.BM,b):$CLJS.O.call(null,$CLJS.BM,b))?new dN(c,this.mc,this.F,this.m,null):$CLJS.m($CLJS.O.h?$CLJS.O.h($CLJS.AM,b):$CLJS.O.call(null,$CLJS.AM,b))?new dN(this.fc,c,this.F,this.m,null):new dN(this.fc,this.mc,this.F,$CLJS.U.j(this.m,b,c),null)};$CLJS.h.da=function(){return $CLJS.A($CLJS.wg.h(new $CLJS.R(null,2,5,$CLJS.S,[new $CLJS.Ke($CLJS.BM,this.fc),new $CLJS.Ke($CLJS.AM,this.mc)],null),this.m))};
$CLJS.h.O=function(a,b){return new dN(this.fc,this.mc,b,this.m,this.G)};$CLJS.h.ja=function(a,b){return $CLJS.qe(b)?this.$(null,$CLJS.be(b,0),$CLJS.be(b,1)):$CLJS.Tb($CLJS.dc,this,b)};
$CLJS.h.Ab=function(){var a=this;return $CLJS.GL($CLJS.VL,function(){return function d(c){return new $CLJS.Af(null,function(){for(;;){var e=$CLJS.A(c);if(e){if($CLJS.re(e)){var f=$CLJS.$c(e),g=$CLJS.E(f),l=$CLJS.Df(g);a:for(var n=0;;)if(n<g){var q=$CLJS.be(f,n),u=$CLJS.K(q,0,null);q=$CLJS.K(q,1,null);l.add(new $CLJS.k(null,2,[$CLJS.CL,u,$CLJS.hm,q],null));n+=1}else{f=!0;break a}return f?$CLJS.If($CLJS.Kf(l),d($CLJS.ad(e))):$CLJS.If($CLJS.Kf(l),null)}f=$CLJS.C(e);l=$CLJS.K(f,0,null);f=$CLJS.K(f,1,
null);return $CLJS.pf(new $CLJS.k(null,2,[$CLJS.CL,l,$CLJS.hm,f],null),d($CLJS.zd(e)))}return null}},null,null)}(a.fc)}(),function(b){var c=a.mc;c=$CLJS.m(c)?c:$CLJS.F.h(1,$CLJS.E(a.fc))?$CLJS.$i.g($CLJS.gL($CLJS.C($CLJS.C(a.fc)))):$CLJS.mha;return new $CLJS.jf(null,c,new $CLJS.jf(null,b,null,1,null),2,null)})};
$CLJS.h.Ea=function(){return $CLJS.pf($CLJS.nha,$CLJS.wg.h($CLJS.yg(function(a){var b=$CLJS.K(a,0,null);a=$CLJS.K(a,1,null);return new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.$i.g($CLJS.gL(b)),$CLJS.XL(a)],null)},$CLJS.J([this.fc])),$CLJS.m(this.mc)?new $CLJS.R(null,1,5,$CLJS.S,[this.mc],null):null))};$CLJS.h.ma=$CLJS.t;$CLJS.h.W=function(a,b){return $CLJS.Qc(b,this.Ea(null))};
var eN=function eN(a){for(var c=[],d=arguments.length,e=0;;)if(e<d)c.push(arguments[e]),e+=1;else break;return eN.l(0<c.length?new $CLJS.y(c.slice(0),0,null):null)};
eN.l=function(a){if(!$CLJS.A(a)||!($CLJS.cg($CLJS.E(a))||$CLJS.$d(a)instanceof $CLJS.w))throw Error($CLJS.dL("Expected even, nonzero number of args (with optional trailing symbol); got %s",$CLJS.J([$CLJS.E(a)])));return new dN($CLJS.Sg(function(){return function d(c){return new $CLJS.Af(null,function(){for(;;){var e=$CLJS.A(c);if(e){if($CLJS.re(e)){var f=$CLJS.$c(e),g=$CLJS.E(f),l=$CLJS.Df(g);a:for(var n=0;;)if(n<g){var q=$CLJS.be(f,n),u=$CLJS.K(q,0,null),v=$CLJS.K(q,1,null);q=l;if(!$CLJS.ze(u))throw Error($CLJS.eL(["Conditional predicate ",
$CLJS.p.g(u)," must be a function"].join("")));u=new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.F.h(u,$CLJS.Ju)?$CLJS.eg(!0):u,v],null);q.add(u);n+=1}else{f=!0;break a}return f?$CLJS.If($CLJS.Kf(l),d($CLJS.ad(e))):$CLJS.If($CLJS.Kf(l),null)}f=$CLJS.C(e);l=$CLJS.K(f,0,null);f=$CLJS.K(f,1,null);if(!$CLJS.ze(l))throw Error($CLJS.eL(["Conditional predicate ",$CLJS.p.g(l)," must be a function"].join("")));l=new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.F.h(l,$CLJS.Ju)?$CLJS.eg(!0):l,f],null);return $CLJS.pf(l,d($CLJS.zd(e)))}return null}},
null,null)}($CLJS.fu(2,2,a))}()),$CLJS.cg($CLJS.E(a))?null:$CLJS.$d(a),null,null,null)};eN.v=0;eN.B=function(a){return this.l($CLJS.A(a))};$CLJS.h=gN.prototype;$CLJS.h.ka=function(a,b){return this.U(null,b,null)};$CLJS.h.U=function(a,b,c){switch(b instanceof $CLJS.N?b.N:null){case "derefable":return this.wc;default:return $CLJS.M.j(this.m,b,c)}};$CLJS.h.va=function(a,b,c){return $CLJS.Tb(function(d,e){var f=$CLJS.K(e,0,null);e=$CLJS.K(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.W=function(a,b,c){return $CLJS.Oi(b,function(d){return $CLJS.Oi(b,$CLJS.Ti,""," ","",c,d)},"#schema.core.Recursive{",", ","}",c,$CLJS.wg.h(new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.DM,this.wc],null)],null),this.m))};$CLJS.h.oa=function(){return new $CLJS.jh(this,1,new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.DM],null),$CLJS.m(this.m)?$CLJS.fd(this.m):$CLJS.Xf())};$CLJS.h.M=function(){return this.F};$CLJS.h.ea=function(){return 1+$CLJS.E(this.m)};
$CLJS.h.ca=function(){var a=this.G;return null!=a?a:this.G=a=1521498755^$CLJS.Ed(this)};$CLJS.h.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.F.h(this.wc,b.wc)&&$CLJS.F.h(this.m,b.m)};$CLJS.h.za=function(a,b){return $CLJS.Ie(new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.DM,null],null),null),b)?$CLJS.Jm.h($CLJS.Dc($CLJS.th.h($CLJS.P,this),this.F),b):new gN(this.wc,this.F,$CLJS.Vf($CLJS.Jm.h(this.m,b)),null)};
$CLJS.h.ta=function(a,b){switch(b instanceof $CLJS.N?b.N:null){case "derefable":return!0;default:return $CLJS.Ie(this.m,b)}};$CLJS.h.$=function(a,b,c){return $CLJS.m($CLJS.O.h?$CLJS.O.h($CLJS.DM,b):$CLJS.O.call(null,$CLJS.DM,b))?new gN(c,this.F,this.m,null):new gN(this.wc,this.F,$CLJS.U.j(this.m,b,c),null)};$CLJS.h.da=function(){return $CLJS.A($CLJS.wg.h(new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.Ke($CLJS.DM,this.wc)],null),this.m))};$CLJS.h.O=function(a,b){return new gN(this.wc,b,this.m,this.G)};
$CLJS.h.ja=function(a,b){return $CLJS.qe(b)?this.$(null,$CLJS.be(b,0),$CLJS.be(b,1)):$CLJS.Tb($CLJS.dc,this,b)};$CLJS.h.Ab=function(){return $CLJS.HL($CLJS.VL,new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.k(null,1,[$CLJS.hm,$CLJS.r(this.wc)],null)],null))};
$CLJS.h.Ea=function(){if(this.wc instanceof $CLJS.ud){var a=$CLJS.ge(this.wc);var b=$CLJS.Uf(a);a=$CLJS.M.h(b,$CLJS.Ik);b=$CLJS.M.h(b,$CLJS.V);a=$CLJS.$i.g([$CLJS.p.g(a),"/",$CLJS.p.g(b)].join(""));a=new $CLJS.jf(null,$CLJS.Ol,new $CLJS.jf(null,a,null,1,null),2,null)}else a=$CLJS.Lha;return new $CLJS.jf(null,$CLJS.Bha,new $CLJS.jf(null,a,null,1,null),2,null)};$CLJS.h.ma=$CLJS.t;$CLJS.h.W=function(a,b){return $CLJS.Qc(b,this.Ea(null))};$CLJS.h=iN.prototype;
$CLJS.h.ka=function(a,b){return this.U(null,b,null)};$CLJS.h.U=function(a,b,c){switch(b instanceof $CLJS.N?b.N:null){case "schema":return this.X;default:return $CLJS.M.j(this.m,b,c)}};$CLJS.h.va=function(a,b,c){return $CLJS.Tb(function(d,e){var f=$CLJS.K(e,0,null);e=$CLJS.K(e,1,null);return b.j?b.j(d,f,e):b.call(null,d,f,e)},c,this)};
$CLJS.h.W=function(a,b,c){return $CLJS.Oi(b,function(d){return $CLJS.Oi(b,$CLJS.Ti,""," ","",c,d)},"#schema.core.Maybe{",", ","}",c,$CLJS.wg.h(new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.hm,this.X],null)],null),this.m))};$CLJS.h.oa=function(){return new $CLJS.jh(this,1,new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.hm],null),$CLJS.m(this.m)?$CLJS.fd(this.m):$CLJS.Xf())};$CLJS.h.M=function(){return this.F};$CLJS.h.ea=function(){return 1+$CLJS.E(this.m)};
$CLJS.h.ca=function(){var a=this.G;return null!=a?a:this.G=a=-805411239^$CLJS.Ed(this)};$CLJS.h.T=function(a,b){return null!=b&&this.constructor===b.constructor&&$CLJS.F.h(this.X,b.X)&&$CLJS.F.h(this.m,b.m)};$CLJS.h.za=function(a,b){return $CLJS.Ie(new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.hm,null],null),null),b)?$CLJS.Jm.h($CLJS.Dc($CLJS.th.h($CLJS.P,this),this.F),b):new iN(this.X,this.F,$CLJS.Vf($CLJS.Jm.h(this.m,b)),null)};
$CLJS.h.ta=function(a,b){switch(b instanceof $CLJS.N?b.N:null){case "schema":return!0;default:return $CLJS.Ie(this.m,b)}};$CLJS.h.$=function(a,b,c){return $CLJS.m($CLJS.O.h?$CLJS.O.h($CLJS.hm,b):$CLJS.O.call(null,$CLJS.hm,b))?new iN(c,this.F,this.m,null):new iN(this.X,this.F,$CLJS.U.j(this.m,b,c),null)};$CLJS.h.da=function(){return $CLJS.A($CLJS.wg.h(new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.Ke($CLJS.hm,this.X)],null),this.m))};$CLJS.h.O=function(a,b){return new iN(this.X,b,this.m,this.G)};
$CLJS.h.ja=function(a,b){return $CLJS.qe(b)?this.$(null,$CLJS.be(b,0),$CLJS.be(b,1)):$CLJS.Tb($CLJS.dc,this,b)};$CLJS.h.Ab=function(){return $CLJS.HL($CLJS.VL,new $CLJS.R(null,2,5,$CLJS.S,[new $CLJS.k(null,2,[$CLJS.CL,$CLJS.Bb,$CLJS.hm,$CLJS.$L(null)],null),new $CLJS.k(null,1,[$CLJS.hm,this.X],null)],null))};$CLJS.h.Ea=function(){return new $CLJS.jf(null,$CLJS.Cha,new $CLJS.jf(null,$CLJS.XL(this.X),null,1,null),2,null)};$CLJS.h.ma=$CLJS.t;$CLJS.h.W=function(a,b){return $CLJS.Qc(b,this.Ea(null))};
Sha=new $CLJS.w("metabase.mbql.schema","datetime-subtract","metabase.mbql.schema/datetime-subtract",-1242286173,null);$CLJS.vN=new $CLJS.N(null,"dimension","dimension",543254198);Tha=new $CLJS.w("metabase.mbql.schema","time-interval","metabase.mbql.schema/time-interval",1275783375,null);Uha=new $CLJS.w("metabase.mbql.schema","replace","metabase.mbql.schema/replace",1269362826,null);Vha=new $CLJS.N(null,"disable-mbql-\x3enative?","disable-mbql-\x3enative?",1103196677);
Wha=new $CLJS.N(null,"query-hash","query-hash",-1524484965);Xha=new $CLJS.N(null,"from","from",1815293044);wN=new $CLJS.w(null,"does-not-contain","does-not-contain",1365584674,null);Yha=new $CLJS.N(null,"add-default-userland-constraints?","add-default-userland-constraints?",2039156190);$CLJS.xN=new $CLJS.N(null,"snippet-name","snippet-name",819240328);Zha=new $CLJS.w("metabase.mbql.schema","max","metabase.mbql.schema/max",-1397867614,null);
$ha=new $CLJS.w("metabase.mbql.schema","get-day","metabase.mbql.schema/get-day",-1600012951,null);$CLJS.yN=new $CLJS.N(null,"aggregation-options","aggregation-options",-1904917550);aia=new $CLJS.w("metabase.mbql.schema","cum-count","metabase.mbql.schema/cum-count",596526831,null);zN=new $CLJS.N("location","zip_code","location/zip_code",1641155222);AN=new $CLJS.w(null,"ExpressionArg","ExpressionArg",1060743736,null);BN=new $CLJS.w(null,"get-hour","get-hour",-2031721710,null);
CN=new $CLJS.w(null,"ag:var","ag:var",-1804440286,null);bia=new $CLJS.N(null,"lon-max","lon-max",1590224717);DN=new $CLJS.w(null,"stddev","stddev",775056588,null);$CLJS.EN=new $CLJS.N(null,"snippet","snippet",953581994);FN=new $CLJS.w("metabase.mbql.schema","case","metabase.mbql.schema/case",2100482976,null);$CLJS.GN=new $CLJS.N(null,"query","query",-1288509510);cia=new $CLJS.N(null,"lat-field","lat-field",-830652957);
dia=new $CLJS.w("metabase.mbql.schema","min","metabase.mbql.schema/min",-1534510688,null);eia=new $CLJS.w(null,"FieldOptions","FieldOptions",-1536320891,null);HN=new $CLJS.N("location","country","location/country",1666636202);IN=new $CLJS.w("metabase.mbql.schema","Aggregation","metabase.mbql.schema/Aggregation",-1908264889,null);fia=new $CLJS.w("metabase.mbql.schema","count-where","metabase.mbql.schema/count-where",-1224231786,null);JN=new $CLJS.N(null,"unary","unary",-989314568);
KN=new $CLJS.w(null,"ceil","ceil",-184398425,null);gia=new $CLJS.N(null,"lon-min","lon-min",-787291357);hia=new $CLJS.N(null,"match","match",1220059550);LN=new $CLJS.w(null,"count-where","count-where",2025939247,null);MN=new $CLJS.N(null,"max-results-bare-rows","max-results-bare-rows",2096475889);iia=new $CLJS.N(null,"embedded-question","embedded-question",-2146473954);NN=new $CLJS.w(null,"sum","sum",1777518341,null);
ON=new $CLJS.w("metabase.mbql.schema","!\x3d","metabase.mbql.schema/!\x3d",-807630752,null);$CLJS.PN=new $CLJS.N("date","range","date/range",1647265776);QN=new $CLJS.w(null,"between","between",-1523336493,null);RN=new $CLJS.N(null,"clause-form","clause-form",1820463737);jia=new $CLJS.w("metabase.mbql.schema","log","metabase.mbql.schema/log",-899459908,null);SN=new $CLJS.w(null,"field","field",338095027,null);kia=new $CLJS.N(null,"segment-id","segment-id",1810133590);
$CLJS.TN=new $CLJS.N(null,"filter","filter",-948537934);UN=new $CLJS.w(null,"not-null","not-null",313812992,null);lia=new $CLJS.N(null,"template-tag","template-tag",310841038);mia=new $CLJS.w("metabase.mbql.schema","datetime-diff","metabase.mbql.schema/datetime-diff",1838258811,null);VN=new $CLJS.w(null,"regex-match-first","regex-match-first",983231809,null);$CLJS.WN=new $CLJS.N(null,"context","context",-830191113);XN=new $CLJS.w(null,"get-year","get-year",704520253,null);
nia=new $CLJS.N(null,"format-rows?","format-rows?",992129486);$CLJS.YN=new $CLJS.N(null,"parameters","parameters",-1229919748);oia=new $CLJS.N(null,"json-download","json-download",-971130133);$CLJS.ZN=new $CLJS.N(null,"card","card",-1430355152);$N=new $CLJS.N(null,"string-or-field","string-or-field",-1970678542);aO=new $CLJS.w(null,"!\x3d","!\x3d",-201205829,null);pia=new $CLJS.w("metabase.mbql.schema","ag:var","metabase.mbql.schema/ag:var",1295047163,null);
qia=new $CLJS.w("metabase.mbql.schema","ceil","metabase.mbql.schema/ceil",-1404628626,null);$CLJS.bO=new $CLJS.w(null,"expression","expression",1842843403,null);$CLJS.cO=new $CLJS.N("date","month-year","date/month-year",1948031290);dO=new $CLJS.w(null,"ends-with","ends-with",1183740516,null);ria=new $CLJS.w("metabase.mbql.schema","BooleanExpression","metabase.mbql.schema/BooleanExpression",-469303836,null);eO=new $CLJS.w("s","recursive","s/recursive",-1935549792,null);
$CLJS.fO=new $CLJS.N(null,"joins","joins",1033962699);sia=new $CLJS.N(null,"slug","slug",2029314850);$CLJS.gO=new $CLJS.N(null,"source-field","source-field",933829534);hO=new $CLJS.w(null,"Field","Field",430385967,null);iO=new $CLJS.w(null,"convert-timezone","convert-timezone",1515728526,null);jO=new $CLJS.w("helpers","IntGreaterThanZero","helpers/IntGreaterThanZero",1743901629,null);tia=new $CLJS.w("metabase.mbql.schema","absolute-datetime","metabase.mbql.schema/absolute-datetime",-1180642019,null);
uia=new $CLJS.N(null,"disable-max-results?","disable-max-results?",857693204);via=new $CLJS.N(null,"items","items",1031954938);kO=new $CLJS.N(null,"more","more",-2058821800);lO=new $CLJS.N(null,"first-clause","first-clause",-20953491);mO=new $CLJS.w(null,"OrderComparable","OrderComparable",772072595,null);wia=new $CLJS.w("metabase.mbql.schema","NumericExpression*","metabase.mbql.schema/NumericExpression*",-254856038,null);
xia=new $CLJS.w("metabase.mbql.schema","ends-with","metabase.mbql.schema/ends-with",-2117292579,null);nO=new $CLJS.w(null,"contains","contains",-1977535957,null);yia=new $CLJS.w("metabase.mbql.schema","floor","metabase.mbql.schema/floor",422926927,null);zia=new $CLJS.w("metabase.mbql.schema","expression","metabase.mbql.schema/expression",370334320,null);Aia=new $CLJS.w(null,"BooleanExpression","BooleanExpression",1027887421,null);oO=new $CLJS.N("number","\x3d","number/\x3d",-2094581309);
$CLJS.pO=new $CLJS.N(null,"widget-type","widget-type",1836256899);$CLJS.qO=new $CLJS.N(null,"fingerprint","fingerprint",598613022);rO=new $CLJS.w(null,"is-null","is-null",-356519403,null);sO=new $CLJS.N(null,"other-clauses","other-clauses",1570511021);Bia=new $CLJS.N(null,"map-tiles","map-tiles",1961865797);$CLJS.tO=new $CLJS.N(null,"required","required",1807647006);Cia=new $CLJS.w(null,"Filter*","Filter*",-1193205185,null);Dia=new $CLJS.N(null,"datetime-x","datetime-x",1519265947);
Eia=new $CLJS.N(null,"datetime-y","datetime-y",-1666955771);uO=new $CLJS.w(null,"CaseClauses","CaseClauses",-1749071354,null);vO=new $CLJS.N(null,"date-arithmetics","date-arithmetics",-1832808309);wO=new $CLJS.N("string","contains","string/contains",1602423827);Fia=new $CLJS.w("metabase.mbql.schema","metric","metabase.mbql.schema/metric",1030004285,null);xO=new $CLJS.N("string","!\x3d","string/!\x3d",-1083772573);
Gia=new $CLJS.w(null,"IntGreaterThanZeroOrNumericExpression","IntGreaterThanZeroOrNumericExpression",2098230228,null);Hia=new $CLJS.w("metabase.mbql.schema","count","metabase.mbql.schema/count",678066683,null);Iia=new $CLJS.w("metabase.mbql.schema","field","metabase.mbql.schema/field",1566852856,null);yO=new $CLJS.w(null,"share","share",1051097594,null);Jia=new $CLJS.w("metabase.mbql.schema","distinct","metabase.mbql.schema/distinct",-823840515,null);
Kia=new $CLJS.w("metabase.mbql.schema","round","metabase.mbql.schema/round",314817788,null);Lia=new $CLJS.w("metabase.mbql.schema","get-quarter","metabase.mbql.schema/get-quarter",2007639089,null);Mia=new $CLJS.N(null,"xlsx-download","xlsx-download",-1622892009);zO=new $CLJS.w(null,"FieldOrAggregationReference","FieldOrAggregationReference",85477856,null);Nia=new $CLJS.w("metabase.mbql.schema","contains","metabase.mbql.schema/contains",1399250832,null);
$CLJS.AO=new $CLJS.N(null,"collection","collection",-683361892);$CLJS.BO=new $CLJS.N("metadata","dataset-metadata","metadata/dataset-metadata",-728376469);Oia=new $CLJS.w("metabase.mbql.schema","is-empty","metabase.mbql.schema/is-empty",1686480962,null);CO=new $CLJS.N("number","\x3c\x3d","number/\x3c\x3d",-1499316353);DO=new $CLJS.w(null,"Aggregation","Aggregation",-955933538,null);EO=new $CLJS.w(null,"metric","metric",2049329604,null);FO=new $CLJS.w(null,"concat","concat",-467652465,null);
GO=new $CLJS.N(null,"variable","variable",-281346492);$CLJS.HO=new $CLJS.N("date","quarter-year","date/quarter-year",-1453950150);Pia=new $CLJS.w(null,"TimeUnit","TimeUnit",1200517789,null);$CLJS.IO=new $CLJS.N("date","relative","date/relative",25987732);JO=new $CLJS.N("location","city","location/city",-1746973325);Qia=new $CLJS.N(null,"public-dashboard","public-dashboard",645968405);Ria=new $CLJS.w("metabase.mbql.schema","desc","metabase.mbql.schema/desc",-2050113424,null);
KO=new $CLJS.N("number","\x3e\x3d","number/\x3e\x3d",-1670691032);LO=new $CLJS.N("number","between","number/between",97700581);Sia=new $CLJS.w("metabase.mbql.schema","cum-sum","metabase.mbql.schema/cum-sum",-2078342061,null);MO=new $CLJS.w(null,"sqrt","sqrt",370479598,null);NO=new $CLJS.w("metabase.mbql.schema","DatetimeExpression","metabase.mbql.schema/DatetimeExpression",-1440012226,null);$CLJS.OO=new $CLJS.N(null,"semantic_type","semantic_type",272485089);
Tia=new $CLJS.N(null,"metric-id","metric-id",-686486942);PO=new $CLJS.w(null,"*","*",345799209,null);QO=new $CLJS.w(null,"+","+",-740910886,null);RO=new $CLJS.w(null,"-","-",-471816912,null);$CLJS.SO=new $CLJS.N(null,"breakout","breakout",-732419050);TO=new $CLJS.w(null,"template-tag","template-tag",1951372565,null);UO=new $CLJS.N(null,"allowed-for","allowed-for",122724334);Uia=new $CLJS.N(null,"question","question",-1411720117);VO=new $CLJS.w(null,"asc","asc",1997386096,null);
Via=new $CLJS.w("metabase.mbql.schema","DatetimeExpression*","metabase.mbql.schema/DatetimeExpression*",-1766428848,null);Wia=new $CLJS.N(null,"pulse-id","pulse-id",1331432237);Xia=new $CLJS.w("metabase.mbql.schema","BooleanExpression*","metabase.mbql.schema/BooleanExpression*",-630544184,null);WO=new $CLJS.w(null,"\x3c\x3d","\x3c\x3d",1244895369,null);XO=new $CLJS.w(null,"\x3c","\x3c",993667236,null);YO=new $CLJS.w(null,"\x3e","\x3e",1085014381,null);
$CLJS.ZO=new $CLJS.N(null,"aggregation","aggregation",1597476696);$CLJS.$O=new $CLJS.N(null,"source-metadata","source-metadata",-477816085);aP=new $CLJS.N("string","ends-with","string/ends-with",302681156);Yia=new $CLJS.w("metabase.mbql.schema","get-year","metabase.mbql.schema/get-year",-265030428,null);$CLJS.bP=new $CLJS.w("s","Str","s/Str",907974338,null);cP=new $CLJS.w(null,"RelativeDatetimeUnit","RelativeDatetimeUnit",-1157637501,null);dP=new $CLJS.w(null,"and","and",668631710,null);
eP=new $CLJS.w(null,"\x3e\x3d","\x3e\x3d",1016916022,null);fP=new $CLJS.w(null,"round","round",-645002441,null);Zia=new $CLJS.N(null,"to","to",192099007);$CLJS.gP=new $CLJS.N("date","single","date/single",1554682003);$ia=new $CLJS.w(null,"DatetimeExpression*","DatetimeExpression*",1609939947,null);aja=new $CLJS.N(null,"action-id","action-id",-1727958578);bja=new $CLJS.w("metabase.mbql.schema","not-null","metabase.mbql.schema/not-null",1248581449,null);hP=new $CLJS.w(null,"exp","exp",1378825265,null);
iP=new $CLJS.w(null,"Filter","Filter",-424893332,null);cja=new $CLJS.w("metabase.mbql.schema","MBQLQuery","metabase.mbql.schema/MBQLQuery",1964355302,null);jP=new $CLJS.w(null,"cum-count","cum-count",-323900016,null);dja=new $CLJS.N(null,"dashboard-id","dashboard-id",1965414288);eja=new $CLJS.w(null,"BooleanExpression*","BooleanExpression*",623370113,null);$CLJS.kP=new $CLJS.N(null,"source-table","source-table",-225307692);fja=new $CLJS.N(null,"embedded-dashboard","embedded-dashboard",-485078014);
$CLJS.lP=new $CLJS.N("clojure.core.match","not-found","clojure.core.match/not-found",1553053780);gja=new $CLJS.w("metabase.mbql.schema","sqrt","metabase.mbql.schema/sqrt",-824662873,null);$CLJS.mP=new $CLJS.N(null,"metric","metric",408798077);nP=new $CLJS.w(null,"floor","floor",-772394748,null);hja=new $CLJS.N(null,"middleware","middleware",1462115504);ija=new $CLJS.w("metabase.mbql.schema","share","metabase.mbql.schema/share",1977664161,null);
oP=new $CLJS.N(null,"requires-features","requires-features",-101116256);pP=new $CLJS.N(null,"clause-name","clause-name",-996419059);qP=new $CLJS.w(null,"now","now",-9994004,null);jja=new $CLJS.w("metabase.mbql.schema","datetime-add","metabase.mbql.schema/datetime-add",654654691,null);rP=new $CLJS.w(null,"avg","avg",1837937727,null);sP=new $CLJS.w(null,"sum-where","sum-where",-519087341,null);tP=new $CLJS.N(null,"max-results","max-results",-32858165);
kja=new $CLJS.w("metabase.mbql.schema","get-second","metabase.mbql.schema/get-second",560421410,null);uP=new $CLJS.w(null,"case","case",-1510733573,null);lja=new $CLJS.w("js","Date","js/Date",946858373,null);mja=new $CLJS.w(null,"StringExpression*","StringExpression*",1110382599,null);vP=new $CLJS.w(null,"distinct","distinct",-148347594,null);wP=new $CLJS.w(null,"get-second","get-second",-425414791,null);xP=new $CLJS.w(null,"DatetimeExpression","DatetimeExpression",1944354145,null);
$CLJS.yP=new $CLJS.N(null,"join-alias","join-alias",1454206794);zP=new $CLJS.w(null,"is-empty","is-empty",600228619,null);AP=new $CLJS.w(null,"StringExpression","StringExpression",-233088561,null);nja=new $CLJS.w("metabase.mbql.schema","segment","metabase.mbql.schema/segment",-512121472,null);$CLJS.BP=new $CLJS.w("s","pred","s/pred",-727014287,null);CP=new $CLJS.w(null,"relative-datetime","relative-datetime",-1369266491,null);DP=new $CLJS.N("number","!\x3d","number/!\x3d",-673025509);
EP=new $CLJS.w(null,"abs","abs",1394505050,null);FP=new $CLJS.w(null,"datetime-diff","datetime-diff",-1521323614,null);oja=new $CLJS.w("metabase.mbql.schema","get-hour","metabase.mbql.schema/get-hour",-809777063,null);$CLJS.GP=new $CLJS.w("s","cond-pre","s/cond-pre",-923707600,null);$CLJS.HP=new $CLJS.N(null,"date","date",-1463434462);IP=new $CLJS.N(null,"second-clause","second-clause",-461435645);
pja=new $CLJS.w("metabase.mbql.schema","get-day-of-week","metabase.mbql.schema/get-day-of-week",551389774,null);JP=new $CLJS.w(null,"rtrim","rtrim",979195078,null);KP=new $CLJS.w("metabase.mbql.schema","or","metabase.mbql.schema/or",-1500355255,null);LP=new $CLJS.w(null,"CaseOptions","CaseOptions",1989286806,null);MP=new $CLJS.w("metabase.mbql.schema","Filter","metabase.mbql.schema/Filter",-1444327113,null);NP=new $CLJS.w(null,"or","or",1876275696,null);
OP=new $CLJS.w("s","Int","s/Int",-2116888657,null);$CLJS.PP=new $CLJS.N(null,"field","field",-1302436500);qja=new $CLJS.w("metabase.mbql.schema","ltrim","metabase.mbql.schema/ltrim",52894949,null);rja=new $CLJS.w(null,"TemporalExtractUnits","TemporalExtractUnits",-1308527018,null);sja=new $CLJS.N(null,"constraints","constraints",422775616);tja=new $CLJS.w("metabase.mbql.schema","dimension","metabase.mbql.schema/dimension",1500199226,null);uja=new $CLJS.N(null,"csv-download","csv-download",2141432084);
QP=new $CLJS.w(null,"datetime-add","datetime-add",1850134938,null);vja=new $CLJS.w("metabase.mbql.schema","percentile","metabase.mbql.schema/percentile",-91330436,null);wja=new $CLJS.w("metabase.mbql.schema","get-month","metabase.mbql.schema/get-month",-2104849029,null);RP=new $CLJS.w("metabase.mbql.schema","\x3e","metabase.mbql.schema/\x3e",-1619862474,null);SP=new $CLJS.w("metabase.mbql.schema","\x3d","metabase.mbql.schema/\x3d",1850085384,null);
TP=new $CLJS.w("metabase.mbql.schema","\x3c","metabase.mbql.schema/\x3c",-1057391587,null);xja=new $CLJS.w("metabase.mbql.schema","/","metabase.mbql.schema//",2004134796,null);UP=new $CLJS.w(null,"get-quarter","get-quarter",-1326657176,null);yja=new $CLJS.w("metabase.mbql.schema","-","metabase.mbql.schema/-",-1440604423,null);VP=new $CLJS.w("metabase.mbql.schema","+","metabase.mbql.schema/+",-1802115711,null);zja=new $CLJS.w("metabase.mbql.schema","*","metabase.mbql.schema/*",1842546528,null);
Aja=new $CLJS.w("metabase.mbql.schema","time","metabase.mbql.schema/time",-1927273576,null);WP=new $CLJS.w(null,"temporal-extract","temporal-extract",-872749364,null);Bja=new $CLJS.w("metabase.mbql.schema","sum","metabase.mbql.schema/sum",-1589890100,null);Cja=new $CLJS.w("metabase.mbql.schema","between","metabase.mbql.schema/between",-302972630,null);Dja=new $CLJS.N(null,"display_name","display_name",-1494335013);$CLJS.XP=new $CLJS.N(null,"snippet-id","snippet-id",1987785841);
$CLJS.YP=new $CLJS.N(null,"database","database",1849087575);ZP=new $CLJS.w(null,"NumericExpressionArgOrInterval","NumericExpressionArgOrInterval",-151709337,null);$P=new $CLJS.w(null,"get-day-of-week","get-day-of-week",-644295017,null);Eja=new $CLJS.w("metabase.mbql.schema","starts-with","metabase.mbql.schema/starts-with",1063663591,null);$CLJS.aQ=new $CLJS.N(null,"expressions","expressions",255689909);Fja=new $CLJS.N(null,"ad-hoc","ad-hoc",-2033634036);
Gja=new $CLJS.w("metabase.mbql.schema","concat","metabase.mbql.schema/concat",-580718778,null);$CLJS.bQ=new $CLJS.N(null,"temporal-unit","temporal-unit",-1892306358);cQ=new $CLJS.w(null,"absolute-datetime","absolute-datetime",1080191062,null);Hja=new $CLJS.w(null,"TimeIntervalOptions","TimeIntervalOptions",1566864026,null);Ija=new $CLJS.N(null,"action","action",-811238024);dQ=new $CLJS.w(null,"get-day","get-day",1768100384,null);Jja=new $CLJS.w(null,"Fields","Fields",430617156,null);
eQ=new $CLJS.w(null,"not-empty","not-empty",2029453590,null);$CLJS.fQ=new $CLJS.N(null,"native","native",-613060878);Kja=new $CLJS.w("metabase.mbql.schema","variable","metabase.mbql.schema/variable",-1981984686,null);gQ=new $CLJS.N(null,"page","page",849072397);hQ=new $CLJS.w(null,"length","length",-2065447907,null);Lja=new $CLJS.N(null,"dashboard","dashboard",-631747508);iQ=new $CLJS.w(null,"get-week","get-week",752472178,null);jQ=new $CLJS.w(null,"get-month","get-month",1271156796,null);
kQ=new $CLJS.w(null,"dimension","dimension",-2111181571,null);lQ=new $CLJS.w(null,"StringFilterOptions","StringFilterOptions",-847398229,null);mQ=new $CLJS.w("metabase.mbql.schema","not","metabase.mbql.schema/not",-113379604,null);Mja=new $CLJS.w("metabase.mbql.schema","now","metabase.mbql.schema/now",665138615,null);nQ=new $CLJS.w(null,"substring","substring",-1513569493,null);Nja=new $CLJS.w("metabase.mbql.schema","avg","metabase.mbql.schema/avg",-1530848906,null);
oQ=new $CLJS.N(null,"internal","internal",-854870097);Oja=new $CLJS.w("metabase.mbql.schema","regex-match-first","metabase.mbql.schema/regex-match-first",1918122376,null);Pja=new $CLJS.w("metabase.mbql.schema","substring","metabase.mbql.schema/substring",1829402610,null);pQ=new $CLJS.N(null,"declared","declared",92336021);qQ=new $CLJS.N(null,"more-values-or-fields","more-values-or-fields",-886177554);rQ=new $CLJS.w(null,"ltrim","ltrim",-1000166486,null);
Qja=new $CLJS.w("metabase.mbql.schema","rtrim","metabase.mbql.schema/rtrim",1937815937,null);Rja=new $CLJS.w("metabase.mbql.schema","length","metabase.mbql.schema/length",-844221500,null);sQ=new $CLJS.w("metabase.mbql.schema","coalesce","metabase.mbql.schema/coalesce",-1048570669,null);Sja=new $CLJS.w("metabase.mbql.schema","not-empty","metabase.mbql.schema/not-empty",-2093700401,null);Tja=new $CLJS.w("metabase.mbql.schema","lower","metabase.mbql.schema/lower",-313920313,null);
tQ=new $CLJS.w(null,"desc","desc",-560950005,null);$CLJS.uQ=new $CLJS.N(null,"template-tags","template-tags",1853115685);Uja=new $CLJS.N(null,"public-question","public-question",629369976);Vja=new $CLJS.w("metabase.mbql.schema","Field*","metabase.mbql.schema/Field*",-1168278623,null);$CLJS.vQ=new $CLJS.N(null,"fk-field-id","fk-field-id",1124127357);Wja=new $CLJS.w("metabase.mbql.schema","temporal-extract","metabase.mbql.schema/temporal-extract",-1825197161,null);
Xja=new $CLJS.N(null,"binary","binary",-1802232288);wQ=new $CLJS.w(null,"time-interval","time-interval",-1949813754,null);Yja=new $CLJS.N(null,"userland-query?","userland-query?",-123699383);$CLJS.xQ=new $CLJS.N(null,"source-query","source-query",198004422);$CLJS.AQ=new $CLJS.N(null,"settings","settings",1556144875);Zja=new $CLJS.w("metabase.mbql.schema","Fields","metabase.mbql.schema/Fields",-781973827,null);$ja=new $CLJS.w(null,"Field*","Field*",-2104480026,null);
aka=new $CLJS.w("metabase.mbql.schema","get-minute","metabase.mbql.schema/get-minute",-2138696889,null);bka=new $CLJS.w("s","eq","s/eq",1021992833,null);cka=new $CLJS.N(null,"executed-by","executed-by",-739811161);dka=new $CLJS.w("metabase.mbql.schema","median","metabase.mbql.schema/median",2055093571,null);BQ=new $CLJS.N(null,"amount","amount",364489504);CQ=new $CLJS.w(null,"percentile","percentile",1039342775,null);DQ=new $CLJS.w(null,"metabase.mbql.schema","metabase.mbql.schema",-408168902,null);
EQ=new $CLJS.w(null,"NumericExpressionArg","NumericExpressionArg",-1537445195,null);FQ=new $CLJS.w(null,"trim","trim",-1880116002,null);eka=new $CLJS.w(null,"MBQLQuery","MBQLQuery",-1395590243,null);GQ=new $CLJS.w(null,"NumericExpression","NumericExpression",-2082340941,null);HQ=new $CLJS.w("metabase.mbql.schema","NumericExpression","metabase.mbql.schema/NumericExpression",-859895030,null);IQ=new $CLJS.w(null,"coalesce","coalesce",-1999813740,null);JQ=new $CLJS.N("string","\x3d","string/\x3d",983744235);
fka=new $CLJS.N(null,"skip-results-metadata?","skip-results-metadata?",251010463);gka=new $CLJS.w("metabase.mbql.schema","asc","metabase.mbql.schema/asc",1338042063,null);hka=new $CLJS.w("metabase.mbql.schema","inside","metabase.mbql.schema/inside",-291996315,null);ika=new $CLJS.w(null,"DatetimeDiffUnits","DatetimeDiffUnits",1899101514,null);KQ=new $CLJS.w(null,"StringExpressionArg","StringExpressionArg",-1131357258,null);LQ=new $CLJS.N(null,"value-or-field","value-or-field",-1387286309);
MQ=new $CLJS.w(null,"FieldOrExpressionDef","FieldOrExpressionDef",-788269541,null);jka=new $CLJS.N(null,"lat-min","lat-min",1630784161);NQ=new $CLJS.w(null,"ArithmeticDateTimeUnit","ArithmeticDateTimeUnit",-838492507,null);OQ=new $CLJS.w(null,"inside","inside",-681932758,null);kka=new $CLJS.w("metabase.mbql.schema","stddev","metabase.mbql.schema/stddev",1735459125,null);lka=new $CLJS.w("metabase.mbql.schema","convert-timezone","metabase.mbql.schema/convert-timezone",1628930633,null);
PQ=new $CLJS.w(null,"starts-with","starts-with",2007034536,null);mka=new $CLJS.N(null,"process-viz-settings?","process-viz-settings?",-173592315);nka=new $CLJS.w("metabase.mbql.schema","power","metabase.mbql.schema/power",-517905321,null);$CLJS.QQ=new $CLJS.N(null,"card-id","card-id",-1770060179);RQ=new $CLJS.N(null,"variadic","variadic",882626057);$CLJS.SQ=new $CLJS.N(null,"category","category",-593092832);oka=new $CLJS.w(null,"NumericExpression*","NumericExpression*",-1459070895,null);
TQ=new $CLJS.w(null,"upper","upper",1886775433,null);UQ=new $CLJS.N(null,"field-or-expression","field-or-expression",-1409494368);pka=new $CLJS.w("metabase.mbql.schema","exp","metabase.mbql.schema/exp",451780488,null);VQ=new $CLJS.N(null,"sugar","sugar",-73788488);qka=new $CLJS.N(null,"lat-max","lat-max",841568226);WQ=new $CLJS.w(null,"power","power",702679448,null);XQ=new $CLJS.w("metabase.mbql.schema","and","metabase.mbql.schema/and",1553856071,null);
rka=new $CLJS.w("metabase.mbql.schema","StringExpression*","metabase.mbql.schema/StringExpression*",224546636,null);YQ=new $CLJS.w(null,"median","median",-2084869638,null);ZQ=new $CLJS.w(null,"cum-sum","cum-sum",-589533420,null);ska=new $CLJS.w("metabase.mbql.schema","trim","metabase.mbql.schema/trim",1991053191,null);$Q=new $CLJS.N(null,"y","y",-1757859776);tka=new $CLJS.w("metabase.mbql.schema","WidgetType","metabase.mbql.schema/WidgetType",-823028985,null);
aR=new $CLJS.w("helpers","NonBlankString","helpers/NonBlankString",-2060904596,null);uka=new $CLJS.w("metabase.mbql.schema","UnnamedAggregation*","metabase.mbql.schema/UnnamedAggregation*",652628682,null);$CLJS.bR=new $CLJS.N(null,"binning","binning",1709835866);cR=new $CLJS.w(null,"TimezoneId","TimezoneId",-1406242397,null);dR=new $CLJS.N(null,"b","b",1482224470);eR=new $CLJS.N(null,"a","a",-2123407586);fR=new $CLJS.w(null,"replace","replace",853943757,null);
vka=new $CLJS.w("metabase.mbql.schema","upper","metabase.mbql.schema/upper",993691634,null);gR=new $CLJS.w(null,"segment","segment",675610331,null);wka=new $CLJS.w("metabase.mbql.schema","get-week","metabase.mbql.schema/get-week",1436319181,null);hR=new $CLJS.w(null,"ExtractWeekModes","ExtractWeekModes",687144014,null);xka=new $CLJS.w(null,"UnnamedAggregation*","UnnamedAggregation*",1873018243,null);iR=new $CLJS.w("metabase.mbql.schema","\x3e\x3d","metabase.mbql.schema/\x3e\x3d",1977236849,null);
jR=new $CLJS.N("string","starts-with","string/starts-with",1266861170);$CLJS.kR=new $CLJS.N(null,"order-by","order-by",1527318070);lR=new $CLJS.N(null,"advanced-math-expressions","advanced-math-expressions",1076581757);yka=new $CLJS.w("metabase.mbql.schema","is-null","metabase.mbql.schema/is-null",637054412,null);zka=new $CLJS.N("alias","escaped-\x3eoriginal","alias/escaped-\x3eoriginal",-1334024182);Aka=new $CLJS.w("metabase.mbql.schema","Filter*","metabase.mbql.schema/Filter*",-140275836,null);
$CLJS.mR=new $CLJS.N(null,"condition","condition",1668437652);nR=new $CLJS.N("string","does-not-contain","string/does-not-contain",-1536178964);oR=new $CLJS.w("metabase.mbql.schema","StringExpression","metabase.mbql.schema/StringExpression",970196104,null);Bka=new $CLJS.N(null,"report-timezone","report-timezone",-2053796389);pR=new $CLJS.w("metabase.mbql.schema","\x3c\x3d","metabase.mbql.schema/\x3c\x3d",-2098137664,null);Cka=new $CLJS.N(null,"card-name","card-name",-2035606807);
Dka=new $CLJS.w("metabase.mbql.schema","sum-where","metabase.mbql.schema/sum-where",969078380,null);Eka=new $CLJS.w("metabase.mbql.schema","does-not-contain","metabase.mbql.schema/does-not-contain",-1742276611,null);qR=new $CLJS.w(null,"log","log",45015523,null);Fka=new $CLJS.w("metabase.mbql.schema","abs","metabase.mbql.schema/abs",1792880149,null);rR=new $CLJS.w(null,"time","time",-1268547887,null);
Gka=new $CLJS.w("metabase.mbql.schema","FieldOptions","metabase.mbql.schema/FieldOptions",-475072702,null);$CLJS.sR=new $CLJS.N(null,"database_type","database_type",-54700895);tR=new $CLJS.w(null,"EqualityComparable","EqualityComparable",-2076258858,null);uR=new $CLJS.w(null,"get-minute","get-minute",-1186349426,null);$CLJS.vR=new $CLJS.N(null,"clause","clause",1479668060);$CLJS.wR=new $CLJS.N(null,"expression-name","expression-name",-1798450709);
$CLJS.xR=new $CLJS.N("date","all-options","date/all-options",549325958);Hka=new $CLJS.w("metabase.mbql.schema","relative-datetime","metabase.mbql.schema/relative-datetime",1965492610,null);Ika=new $CLJS.w(null,"WidgetType","WidgetType",-1985035186,null);yR=new $CLJS.N("location","state","location/state",-114378652);zR=new $CLJS.w(null,"datetime-subtract","datetime-subtract",1915839224,null);Jka=new $CLJS.N(null,"lon-field","lon-field",517872067);
AR=new $CLJS.w(null,"DateTimeExpressionArg","DateTimeExpressionArg",-1507653823,null);BR=new $CLJS.N(null,"numeric","numeric",-1495594714);CR=new $CLJS.w(null,"variable","variable",1359185035,null);DR=new $CLJS.w(null,"lower","lower",-1534114948,null);$CLJS.ER=new $CLJS.N(null,"limit","limit",-1355822363);Kka=new $CLJS.w("s","enum","s/enum",-975416934,null);Lka=new $CLJS.N(null,"pulse","pulse",-244494476);var FR,GR,HR,Mka,Nka,Oka,Pka,KR,LR,Qka,Rka,Ska,MR,Tka,NR,OR,PR,Uka,QR,Vka,RR,SR,Wka,Xka,WR,Yka,$R,bS,cS,dS,eS,fS,iS,kS,mS,nS,Zka,oS,pS,qS,rS,sS,tS,uS,vS,wS,xS,yS,zS,AS,BS,CS,DS,ES,FS,GS,HS,IS,JS,KS,gS,MS,NS,OS,PS,QS,RS,SS,TS,US,VS,WS,XS,YS,ZS,$S,aT,bT,aS,eT,fT,gT,hT,iT,jT,kT,lT,mT,nT,oT,pT,qT,rT,sT,tT,uT,vT,wT,xT,yT,zT,AT,$ka,BT,CT,lS,DT,ET,ala,bla,FT,LS,cT,HT,IT,JT,KT,LT,MT,NT,OT,PT,QT,RT,ST,TT,UT,VT,WT,XT,YT,cla,$T,aU,cU,dla,ela,dU,fla,gla,hla,ila,jla,gU,iU,jU,lU,kla,lla,mla,mU,nla,eU,oU,pU,qU,
ola,pla,qla,rla,sla,tla,ula,vla,wla;FR=new $CLJS.ti(null,new $CLJS.k(null,12,[$CLJS.Yj,null,$CLJS.oz,null,$CLJS.cl,null,$CLJS.Uj,null,$CLJS.rk,null,$CLJS.ol,null,$CLJS.fm,null,$CLJS.zl,null,$CLJS.Oj,null,$CLJS.yl,null,$CLJS.Zj,null,$CLJS.lk,null],null),null);GR=new $CLJS.ti(null,new $CLJS.k(null,7,[$CLJS.nz,null,$CLJS.kz,null,$CLJS.Uj,null,$CLJS.gk,null,$CLJS.lz,null,$CLJS.Wk,null,$CLJS.mz,null],null),null);HR=$CLJS.pz.h(FR,GR);Mka=$CLJS.dM($CLJS.Q.h(cN,FR),"date-bucketing-unit");
Nka=$CLJS.dM($CLJS.Q.h(cN,GR),"time-bucketing-unit");$CLJS.IR=$CLJS.dM($CLJS.Q.h(cN,HR),"datetime-bucketing-unit");$CLJS.JR=$CLJS.dM($CLJS.Q.h(cN,$CLJS.cL.tz.names()),"timezone-id");Oka=$CLJS.dM($CLJS.Q.h(cN,new $CLJS.ti(null,new $CLJS.k(null,11,[$CLJS.gK,null,$CLJS.rk,null,$CLJS.gk,null,$CLJS.fm,null,$CLJS.zl,null,$CLJS.jI,null,$CLJS.OH,null,$CLJS.bK,null,$CLJS.bI,null,$CLJS.lk,null,$CLJS.Wk,null],null),null)),"temporal-extract-units");
Pka=$CLJS.dM($CLJS.Q.h(cN,new $CLJS.ti(null,new $CLJS.k(null,8,[$CLJS.Yj,null,$CLJS.oz,null,$CLJS.nz,null,$CLJS.cl,null,$CLJS.kz,null,$CLJS.ol,null,$CLJS.Oj,null,$CLJS.mz,null],null),null)),"datetime-diff-units");KR=$CLJS.dM($CLJS.Q.h(cN,new $CLJS.ti(null,new $CLJS.k(null,3,[$CLJS.NI,null,$CLJS.BH,null,$CLJS.vI,null],null),null)),"extract-week-modes");
LR=$CLJS.dM($CLJS.Q.h(cN,new $CLJS.ti(null,new $CLJS.k(null,8,[$CLJS.Yj,null,$CLJS.oz,null,$CLJS.nz,null,$CLJS.cl,null,$CLJS.Uj,null,$CLJS.ol,null,$CLJS.Oj,null,$CLJS.mz,null],null),null)),"relative-datetime-unit");Qka=$CLJS.fM($CLJS.TM,rN,"valid ISO-8601 datetime string literal");Rka=$CLJS.fM($CLJS.TM,rN,"valid ISO-8601 datetime string literal");Ska=$CLJS.fM($CLJS.TM,rN,"valid ISO-8601 time string literal");
MR=mN($CLJS.wI,$CLJS.J(["n",$CLJS.SM($CLJS.J([$CLJS.$L($CLJS.eB),$CLJS.OM])),"unit",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,LR],null)]));Tka=mN($CLJS.mI,$CLJS.J(["n",$CLJS.OM,"unit",LR]));NR=eN.l($CLJS.J([function(a){return $CLJS.Fb(nN($CLJS.LH,a))},mN($CLJS.LH,$CLJS.J(["t",Date,"unit",$CLJS.IR])),function(a){return $CLJS.Zd(a)instanceof Date},mN($CLJS.LH,$CLJS.J(["date",Date,"unit",Mka])),$CLJS.Ju,mN($CLJS.LH,$CLJS.J(["datetime",Date,"unit",$CLJS.IR]))]));
OR=mN($CLJS.QD,$CLJS.J(["time",Date,"unit",Nka]));PR=eN.l($CLJS.J([$CLJS.fg(nN,$CLJS.LH),NR,rN,Rka,rN,Qka,$CLJS.Ju,$CLJS.SM($CLJS.J([Date]))]));Uka=eN.l($CLJS.J([$CLJS.fg(nN,$CLJS.QD),OR,rN,Ska,$CLJS.Ju,$CLJS.SM($CLJS.J([Date]))]));QR=$CLJS.SM($CLJS.J([Uka,PR]));
oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof NR?new $CLJS.ud(function(){return NR},$CLJS.fe(tia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,oQ,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),cQ,"metabase/mbql/schema.cljc",69,$CLJS.LH,1,!0,192,192,$CLJS.yd,"Schema for an `:absolute-datetime` clause.",$CLJS.m(NR)?NR.J:null])):null));return $CLJS.m(a)?a:cQ}(),NR],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof MR?new $CLJS.ud(function(){return MR},$CLJS.fe(Hka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,
$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CP,"metabase/mbql/schema.cljc",29,$CLJS.wI,1,174,174,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.wI,$CLJS.lC,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.GP,$CLJS.Y(bka,$CLJS.eB),OP)),$CLJS.bk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,cP))],null),$CLJS.yd,"Schema for a valid relative-datetime clause.",$CLJS.m(MR)?MR.J:null])):null));return $CLJS.m(a)?
a:CP}(),MR],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof OR?new $CLJS.ud(function(){return OR},$CLJS.fe(Aja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,oQ,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),rR,"metabase/mbql/schema.cljc",27,$CLJS.QD,1,!0,225,225,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.QD,$CLJS.QD,$CLJS.Y($CLJS.Kl,lja),$CLJS.bk,$CLJS.Y($CLJS.Kl,Pia)],null),$CLJS.yd,"Schema for a valid time clause.",$CLJS.m(OR)?OR.J:null])):null));return $CLJS.m(a)?a:rR}(),OR],null)]));Vka=$CLJS.Tf([aN($CLJS.sR),$CLJS.jN($CLJS.TM),aN($CLJS.yI),$CLJS.jN($CLJS.UM),aN($CLJS.OO),$CLJS.jN($CLJS.VM),aN($CLJS.bk),$CLJS.jN($CLJS.IR),aN($CLJS.V),$CLJS.jN($CLJS.TM),$CLJS.PM,$CLJS.KM]);
RR=mN($CLJS.vl,$CLJS.J(["value",$CLJS.KM,"type-info",$CLJS.jN(Vka)]));SR=mN($CLJS.IF,$CLJS.J(["expression-name",$CLJS.TM,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,$CLJS.bM($CLJS.oe,"map")],null)]));Wka=cN.l($CLJS.J([$CLJS.IH,$CLJS.aK,$CLJS.Uj]));
Xka=function(a){return $CLJS.fM(a,function(b){var c=$CLJS.Uf(b);b=$CLJS.M.h(c,$CLJS.dK);c=$CLJS.M.h(c,$CLJS.IH);return $CLJS.F.h(b,$CLJS.IH)?c:!0},"You must specify :num-bins when using the :num-bins strategy.")}(function(a){return $CLJS.fM(a,function(b){var c=$CLJS.Uf(b);b=$CLJS.M.h(c,$CLJS.dK);c=$CLJS.M.h(c,$CLJS.aK);return $CLJS.F.h(b,$CLJS.aK)?c:!0},"You must specify :bin-width when using the :bin-width strategy.")}($CLJS.Tf([$CLJS.dK,Wka,aN($CLJS.IH),$CLJS.WM,aN($CLJS.aK),$CLJS.fM($CLJS.NM,$CLJS.dg($CLJS.gf),
"bin width must be \x3e\x3d 0."),$CLJS.PM,$CLJS.KM])));$CLJS.TR=function TR(a){switch(arguments.length){case 1:return TR.g(arguments[0]);case 2:return TR.h(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$CLJS.p.g(arguments.length)].join(""));}};$CLJS.TR.g=function(a){var b=$CLJS.Uf(a);a=$CLJS.M.h(b,$CLJS.LF);b=$CLJS.M.h(b,$CLJS.bQ);return $CLJS.TR.h(a,b)};
$CLJS.TR.h=function(a,b){a=$CLJS.m($CLJS.m(b)?a:b)?$CLJS.XG(a,$CLJS.UH)?FR:$CLJS.XG(a,$CLJS.eK)?GR:$CLJS.XG(a,$CLJS.YI)?HR:null:null;return $CLJS.m(a)?$CLJS.Ie(a,b):!0};$CLJS.TR.v=2;
var UR=$CLJS.fM($CLJS.fM($CLJS.Tf([aN($CLJS.LF),$CLJS.jN($CLJS.UM),aN($CLJS.gO),$CLJS.jN($CLJS.SM($CLJS.J([$CLJS.WM,$CLJS.TM]))),aN($CLJS.bQ),$CLJS.jN($CLJS.IR),aN($CLJS.yP),$CLJS.jN($CLJS.TM),aN($CLJS.bR),$CLJS.jN(Xka),$CLJS.PM,$CLJS.KM]),$CLJS.TR,"Invalid :temporal-unit for the specified :base-type."),$CLJS.dg($CLJS.dK),"Found :binning keys at the top level of :field options. binning-related options belong under the :binning key."),VR=function(a){return $CLJS.fM(a,function(b){$CLJS.K(b,0,null);
var c=$CLJS.K(b,1,null);b=$CLJS.K(b,2,null);b=$CLJS.Uf(b);b=$CLJS.M.h(b,$CLJS.LF);return"string"===typeof c?b:!0},":field clauses using a string field name must specify :base-type.")}(mN($CLJS.PP,$CLJS.J(["id-or-name",$CLJS.SM($CLJS.J([$CLJS.WM,$CLJS.TM])),"options",$CLJS.jN(hN(new $CLJS.ud(function(){return UR},Gka,$CLJS.Yh([$CLJS.um,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[!0,$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),eia,"metabase/mbql/schema.cljc",28,1,383,383,$CLJS.yd,null,$CLJS.m(UR)?UR.J:null]))))])));$CLJS.fM(VR,function(a){$CLJS.K(a,0,null);a=$CLJS.K(a,1,null);return $CLJS.Ae(a)},"Must be a :field with an integer Field ID.");
WR=oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof SR?new $CLJS.ud(function(){return SR},$CLJS.fe(zia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),$CLJS.bO,"metabase/mbql/schema.cljc",60,$CLJS.IF,1,318,318,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.IF,$CLJS.wR,$CLJS.Y($CLJS.Kl,aR),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,$CLJS.Y($CLJS.BP,$CLJS.jk,"map")))],null),$CLJS.yd,"Schema for a valid expression clause.",$CLJS.m(SR)?SR.J:null])):null));return $CLJS.m(a)?a:$CLJS.bO}(),SR],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof VR?
new $CLJS.ud(function(){return VR},$CLJS.fe(Iia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.fl,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],["0.39.0",$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),SN,"metabase/mbql/schema.cljc",51,$CLJS.PP,1,429,429,$CLJS.yd,"Schema for a `:field` clause.",$CLJS.m(VR)?VR.J:null])):null));return $CLJS.m(a)?
a:SN}(),VR],null)]));$CLJS.YR=hN(new $CLJS.ud(function(){return WR},Vja,$CLJS.Yh([$CLJS.um,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[!0,$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$ja,"metabase/mbql/schema.cljc",22,1,445,445,$CLJS.yd,null,$CLJS.m(WR)?WR.J:null])));
Yka=mN($CLJS.ZO,$CLJS.J(["aggregation-clause-index",$CLJS.OM,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,$CLJS.bM($CLJS.oe,"map")],null)]));$CLJS.ZR=fN($CLJS.fg(nN,$CLJS.ZO),Yka,$CLJS.YR);$R=new $CLJS.ti(null,new $CLJS.k(null,11,[$CLJS.Eu,null,$CLJS.NJ,null,$CLJS.hH,null,$CLJS.cK,null,$CLJS.tH,null,$CLJS.WI,null,$CLJS.dI,null,$CLJS.Su,null,$CLJS.IJ,null,$CLJS.UI,null,$CLJS.fK,null],null),null);
bS=eN.l($CLJS.J([$CLJS.Jb,$CLJS.LM,$CLJS.fg(nN,$R),hN(new $CLJS.ud(function(){return aS},oR,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),AP,"metabase/mbql/schema.cljc",26,1,488,!0,488,$CLJS.yd,null,$CLJS.m(aS)?aS.J:null]))),$CLJS.fg(nN,$CLJS.vl),RR,$CLJS.Ju,$CLJS.YR]));
cS=new $CLJS.ti(null,new $CLJS.k(null,26,[$CLJS.pH,null,$CLJS.$J,null,$CLJS.sm,null,$CLJS.uJ,null,$CLJS.mJ,null,$CLJS.tI,null,$CLJS.hu,null,$CLJS.fH,null,$CLJS.DJ,null,$CLJS.iJ,null,$CLJS.WI,null,$CLJS.XJ,null,$CLJS.pJ,null,$CLJS.aJ,null,$CLJS.rH,null,$CLJS.JH,null,$CLJS.rm,null,$CLJS.yH,null,$CLJS.dI,null,$CLJS.eH,null,$CLJS.aD,null,$CLJS.KH,null,$CLJS.gJ,null,$CLJS.lI,null,$CLJS.ZJ,null,$CLJS.LI,null],null),null);
dS=new $CLJS.ti(null,new $CLJS.k(null,9,[$CLJS.zm,null,$CLJS.pm,null,$CLJS.Gk,null,$CLJS.Yk,null,$CLJS.ym,null,$CLJS.JJ,null,$CLJS.Qj,null,$CLJS.lm,null,$CLJS.mm,null],null),null);eS=new $CLJS.ti(null,new $CLJS.k(null,17,[$CLJS.vk,null,$CLJS.GJ,null,$CLJS.kJ,null,$CLJS.SI,null,$CLJS.VJ,null,$CLJS.YJ,null,$CLJS.SH,null,$CLJS.rI,null,$CLJS.yN,null,$CLJS.VH,null,$CLJS.BJ,null,$CLJS.dJ,null,$CLJS.cm,null,$CLJS.cD,null,$CLJS.HI,null,$CLJS.mP,null,$CLJS.zJ,null],null),null);
fS=new $CLJS.ti(null,new $CLJS.k(null,5,[$CLJS.II,null,$CLJS.zH,null,$CLJS.RJ,null,$CLJS.rm,null,$CLJS.jJ,null],null),null);
iS=eN.l($CLJS.J([$CLJS.Db,$CLJS.NM,$CLJS.fg(nN,cS),hN(new $CLJS.ud(function(){return gS},HQ,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),GQ,"metabase/mbql/schema.cljc",27,1,522,!0,522,$CLJS.yd,null,$CLJS.m(gS)?gS.J:null]))),$CLJS.fg(nN,eS),hN(new $CLJS.ud(function(){return $CLJS.hS},IN,$CLJS.Yh([$CLJS.Ik,
$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DO,"metabase/mbql/schema.cljc",21,1,525,!0,525,$CLJS.yd,null,$CLJS.m($CLJS.hS)?$CLJS.hS.J:null]))),$CLJS.fg(nN,$CLJS.vl),RR,$CLJS.Ju,$CLJS.YR]));
kS=eN.l($CLJS.J([$CLJS.fg(nN,eS),hN(new $CLJS.ud(function(){return $CLJS.hS},IN,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DO,"metabase/mbql/schema.cljc",21,1,525,!0,525,$CLJS.yd,null,$CLJS.m($CLJS.hS)?$CLJS.hS.J:null]))),$CLJS.fg(nN,$CLJS.vl),RR,$CLJS.fg(nN,fS),hN(new $CLJS.ud(function(){return $CLJS.jS},
NO,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),xP,"metabase/mbql/schema.cljc",28,1,524,!0,524,$CLJS.yd,null,$CLJS.m($CLJS.jS)?$CLJS.jS.J:null]))),$CLJS.Ju,$CLJS.SM($CLJS.J([PR,$CLJS.YR]))]));
mS=eN.l($CLJS.J([$CLJS.Db,$CLJS.NM,$CLJS.ve,$CLJS.MM,$CLJS.fg(nN,dS),hN(new $CLJS.ud(function(){return lS},ria,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),Aia,"metabase/mbql/schema.cljc",27,1,523,!0,523,$CLJS.yd,null,$CLJS.m(lS)?lS.J:null]))),$CLJS.fg(nN,cS),hN(new $CLJS.ud(function(){return gS},
HQ,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),GQ,"metabase/mbql/schema.cljc",27,1,522,!0,522,$CLJS.yd,null,$CLJS.m(gS)?gS.J:null]))),$CLJS.fg(nN,fS),hN(new $CLJS.ud(function(){return $CLJS.jS},NO,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],
[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),xP,"metabase/mbql/schema.cljc",28,1,524,!0,524,$CLJS.yd,null,$CLJS.m($CLJS.jS)?$CLJS.jS.J:null]))),$CLJS.Jb,$CLJS.LM,$CLJS.fg(nN,$R),hN(new $CLJS.ud(function(){return aS},oR,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),AP,"metabase/mbql/schema.cljc",26,1,488,!0,488,$CLJS.yd,null,$CLJS.m(aS)?aS.J:null]))),$CLJS.fg(nN,$CLJS.vl),RR,$CLJS.Ju,$CLJS.YR]));nS=fN($CLJS.fg(nN,$CLJS.mI),Tka,iS);Zka=fN($CLJS.Db,$CLJS.WM,iS);oS=mN($CLJS.WI,$CLJS.J(["a",mS,"b",mS,"more",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,mS],null)]));pS=mN($CLJS.hH,$CLJS.J(["s",bS,"start",Zka,"length",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,iS],null)]));qS=mN($CLJS.aD,$CLJS.J(["s",bS]));rS=mN($CLJS.IJ,$CLJS.J(["s",bS]));
sS=mN($CLJS.fK,$CLJS.J(["s",bS]));tS=mN($CLJS.NJ,$CLJS.J(["s",bS]));uS=mN($CLJS.Eu,$CLJS.J(["s",bS]));vS=mN($CLJS.Su,$CLJS.J(["s",bS]));wS=mN($CLJS.cK,$CLJS.J(["s",bS,"match",$CLJS.LM,"replacement",$CLJS.LM]));xS=mN($CLJS.tH,$CLJS.J(["a",bS,"b",bS,"more",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,bS],null)]));yS=mN($CLJS.UI,$CLJS.J(["s",bS,"pattern",$CLJS.LM]));zS=mN($CLJS.rm,$CLJS.J(["x",nS,"y",nS,"more",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,nS],null)]));
AS=mN($CLJS.hu,$CLJS.J(["x",iS,"y",nS,"more",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,nS],null)]));BS=mN($CLJS.XJ,$CLJS.J(["x",iS,"y",iS,"more",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,iS],null)]));CS=mN($CLJS.sm,$CLJS.J(["x",iS,"y",iS,"more",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,iS],null)]));DS=mN($CLJS.LI,$CLJS.J(["x",iS]));ES=mN($CLJS.pH,$CLJS.J(["x",iS]));FS=mN($CLJS.aJ,$CLJS.J(["x",iS]));GS=mN($CLJS.yH,$CLJS.J(["x",iS]));HS=mN($CLJS.rH,$CLJS.J(["x",iS,"y",iS]));IS=mN($CLJS.tI,$CLJS.J(["x",iS]));
JS=mN($CLJS.fH,$CLJS.J(["x",iS]));KS=mN($CLJS.ZJ,$CLJS.J(["x",iS]));gS=hN(new $CLJS.ud(function(){return LS},wia,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),oka,"metabase/mbql/schema.cljc",28,1,664,!0,664,$CLJS.yd,null,$CLJS.m(LS)?LS.J:null])));
MS=mN($CLJS.lI,$CLJS.J(["datetime-x",kS,"datetime-y",kS,"unit",Pka]));NS=mN($CLJS.uJ,$CLJS.J(["datetime",kS,"unit",Oka,"mode",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,KR],null)]));OS=mN($CLJS.KH,$CLJS.J(["date",kS]));PS=mN($CLJS.$J,$CLJS.J(["date",kS]));QS=mN($CLJS.eH,$CLJS.J(["date",kS]));RS=mN($CLJS.iJ,$CLJS.J(["date",kS,"mode",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,KR],null)]));SS=mN($CLJS.gJ,$CLJS.J(["date",kS]));TS=mN($CLJS.pJ,$CLJS.J(["date",kS]));US=mN($CLJS.DJ,$CLJS.J(["datetime",kS]));
VS=mN($CLJS.mJ,$CLJS.J(["datetime",kS]));WS=mN($CLJS.JH,$CLJS.J(["datetime",kS]));XS=mN($CLJS.zH,$CLJS.J(["datetime",kS,"to",$CLJS.JR,"from",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,$CLJS.JR],null)]));YS=$CLJS.dM($CLJS.Q.h(cN,new $CLJS.ti(null,new $CLJS.k(null,9,[$CLJS.Yj,null,$CLJS.oz,null,$CLJS.nz,null,$CLJS.cl,null,$CLJS.kz,null,$CLJS.ol,null,$CLJS.Oj,null,$CLJS.lz,null,$CLJS.mz,null],null),null)),"arithmetic-datetime-unit");ZS=mN($CLJS.jJ,$CLJS.J(["datetime",kS,"amount",iS,"unit",YS]));
$S=function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return mN(arguments[0],1<b.length?new $CLJS.y(b.slice(1),0,null):null)}($CLJS.II);aT=mN($CLJS.RJ,$CLJS.J(["datetime",kS,"amount",iS,"unit",YS]));
bT=oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof zS?new $CLJS.ud(function(){return zS},$CLJS.fe(VP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),QO,"metabase/mbql/schema.cljc",51,$CLJS.rm,1,630,630,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.rm,$CLJS.UJ,$CLJS.Y($CLJS.Kl,ZP),$Q,$CLJS.Y($CLJS.Kl,ZP),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,ZP))],null),$CLJS.yd,"Schema for a valid + clause.",$CLJS.m(zS)?zS.J:null])):null));return $CLJS.m(a)?a:QO}(),zS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof ZS?new $CLJS.ud(function(){return ZS},
$CLJS.fe(jja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[vO,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),QP,"metabase/mbql/schema.cljc",67,$CLJS.jJ,1,729,729,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.jJ,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR),BQ,$CLJS.Y($CLJS.Kl,
EQ),$CLJS.bk,$CLJS.Y($CLJS.Kl,NQ)],null),$CLJS.yd,"Schema for a valid datetime-add clause.",$CLJS.m(ZS)?ZS.J:null])):null));return $CLJS.m(a)?a:QP}(),ZS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof aT?new $CLJS.ud(function(){return aT},$CLJS.fe(Sha,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,
$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[vO,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),zR,"metabase/mbql/schema.cljc",72,$CLJS.RJ,1,736,736,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.RJ,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR),BQ,$CLJS.Y($CLJS.Kl,EQ),$CLJS.bk,$CLJS.Y($CLJS.Kl,NQ)],null),$CLJS.yd,"Schema for a valid datetime-subtract clause.",$CLJS.m(aT)?aT.J:null])):null));
return $CLJS.m(a)?a:zR}(),aT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof XS?new $CLJS.ud(function(){return XS},$CLJS.fe(lka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.zH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iO,"metabase/mbql/schema.cljc",71,$CLJS.zH,1,719,719,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.zH,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR),Zia,$CLJS.Y($CLJS.Kl,cR),Xha,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,cR))],null),$CLJS.yd,"Schema for a valid convert-timezone clause.",$CLJS.m(XS)?XS.J:null])):null));return $CLJS.m(a)?a:iO}(),XS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==
typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof $S?new $CLJS.ud(function(){return $S},$CLJS.fe(Mja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.II,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
qP,"metabase/mbql/schema.cljc",45,$CLJS.II,1,734,734,new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.II],null),$CLJS.yd,"Schema for a valid now clause.",$CLJS.m($S)?$S.J:null])):null));return $CLJS.m(a)?a:qP}(),$S],null)]));
$CLJS.jS=hN(new $CLJS.ud(function(){return bT},Via,$CLJS.Yh([$CLJS.um,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[!0,$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$ia,"metabase/mbql/schema.cljc",35,1,741,741,$CLJS.yd,null,$CLJS.m(bT)?bT.J:null])));
aS=hN(new $CLJS.ud(function(){return cT},rka,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),mja,"metabase/mbql/schema.cljc",27,1,748,!0,748,$CLJS.yd,null,$CLJS.m(cT)?cT.J:null])));
eT=mN($CLJS.Qj,$CLJS.J(["first-clause",hN(new $CLJS.ud(function(){return $CLJS.dT},MP,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null]))),"second-clause",hN(new $CLJS.ud(function(){return $CLJS.dT},MP,
$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null]))),"other-clauses",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,hN(new $CLJS.ud(function(){return $CLJS.dT},MP,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,
$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null])))],null)]));
fT=mN($CLJS.Gk,$CLJS.J(["first-clause",hN(new $CLJS.ud(function(){return $CLJS.dT},MP,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null]))),"second-clause",hN(new $CLJS.ud(function(){return $CLJS.dT},MP,
$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null]))),"other-clauses",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,hN(new $CLJS.ud(function(){return $CLJS.dT},MP,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,
$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null])))],null)]));
gT=mN($CLJS.Yk,$CLJS.J(["clause",hN(new $CLJS.ud(function(){return $CLJS.dT},MP,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",16,1,756,!0,756,$CLJS.yd,null,$CLJS.m($CLJS.dT)?$CLJS.dT.J:null])))]));hT=fN($CLJS.fg(nN,$CLJS.wI),MR,$CLJS.YR);
iT=$CLJS.jN($CLJS.SM($CLJS.J([$CLJS.MM,$CLJS.NM,$CLJS.LM,QR,hT,mS,RR])));jT=fN($CLJS.fg(nN,$CLJS.vl),RR,$CLJS.SM($CLJS.J([$CLJS.NM,$CLJS.LM,QR,mS,hT])));kT=mN($CLJS.lm,$CLJS.J(["field",iT,"value-or-field",iT,"more-values-or-fields",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,iT],null)]));lT=mN($CLJS.JJ,$CLJS.J(["field",iT,"value-or-field",iT,"more-values-or-fields",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Ck,iT],null)]));mT=mN($CLJS.mm,$CLJS.J(["field",jT,"value-or-field",jT]));
nT=mN($CLJS.pm,$CLJS.J(["field",jT,"value-or-field",jT]));oT=mN($CLJS.zm,$CLJS.J(["field",jT,"value-or-field",jT]));pT=mN($CLJS.ym,$CLJS.J(["field",jT,"value-or-field",jT]));qT=mN($CLJS.PH,$CLJS.J(["field",jT,"min",jT,"max",jT]));rT=mN($CLJS.ZH,$CLJS.J(["lat-field",jT,"lon-field",jT,"lat-max",jT,"lon-min",jT,"lat-min",jT,"lon-max",jT]));sT=mN($CLJS.DH,$CLJS.J(["field",$CLJS.YR]));tT=mN($CLJS.sI,$CLJS.J(["field",$CLJS.YR]));uT=mN($CLJS.QH,$CLJS.J(["field",$CLJS.YR]));
vT=mN($CLJS.eI,$CLJS.J(["field",$CLJS.YR]));wT=$CLJS.Tf([aN($CLJS.fJ),$CLJS.MM]);xT=mN($CLJS.zI,$CLJS.J(["field",bS,"string-or-field",bS,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,wT],null)]));yT=mN($CLJS.sJ,$CLJS.J(["field",bS,"string-or-field",bS,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,wT],null)]));zT=mN($CLJS.QI,$CLJS.J(["field",bS,"string-or-field",bS,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,wT],null)]));
AT=mN($CLJS.AI,$CLJS.J(["field",bS,"string-or-field",bS,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,wT],null)]));$ka=$CLJS.Tf([aN($CLJS.EJ),$CLJS.MM]);BT=mN($CLJS.wJ,$CLJS.J(["field",$CLJS.YR,"n",$CLJS.SM($CLJS.J([$CLJS.OM,cN.l($CLJS.J([$CLJS.eB,$CLJS.gD,$CLJS.WH]))])),"unit",LR,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,$ka],null)]));CT=mN($CLJS.sH,$CLJS.J(["segment-id",$CLJS.SM($CLJS.J([$CLJS.WM,$CLJS.TM]))]));
lS=hN(new $CLJS.ud(function(){return DT},Xia,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eja,"metabase/mbql/schema.cljc",28,1,883,!0,883,$CLJS.yd,null,$CLJS.m(DT)?DT.J:null])));
DT=oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof eT?new $CLJS.ud(function(){return eT},$CLJS.fe(XQ,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),dP,"metabase/mbql/schema.cljc",15,$CLJS.Qj,1,758,758,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.Qj,lO,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),IP,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),sO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))))],null),$CLJS.yd,"Schema for a valid and clause.",$CLJS.m(eT)?eT.J:null])):null));return $CLJS.m(a)?a:dP}(),eT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==
typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof fT?new $CLJS.ud(function(){return fT},$CLJS.fe(KP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NP,"metabase/mbql/schema.cljc",14,$CLJS.Gk,1,763,763,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.Gk,lO,$CLJS.Y($CLJS.Kl,
$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),IP,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),sO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))))],null),$CLJS.yd,"Schema for a valid or clause.",$CLJS.m(fT)?fT.J:null])):null));return $CLJS.m(a)?a:NP}(),fT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof gT?new $CLJS.ud(function(){return gT},$CLJS.fe(mQ,new $CLJS.k(null,
1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.iL,"metabase/mbql/schema.cljc",15,$CLJS.Yk,1,768,768,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.Yk,$CLJS.vR,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP)))],null),$CLJS.yd,"Schema for a valid not clause.",$CLJS.m(gT)?gT.J:
null])):null));return $CLJS.m(a)?a:$CLJS.iL}(),gT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof mT?new $CLJS.ud(function(){return mT},$CLJS.fe(TP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),XO,"metabase/mbql/schema.cljc",13,$CLJS.mm,1,814,814,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.mm,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3c clause.",$CLJS.m(mT)?mT.J:null])):null));return $CLJS.m(a)?a:XO}(),mT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof oT?new $CLJS.ud(function(){return oT},$CLJS.fe(pR,new $CLJS.k(null,
1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),WO,"metabase/mbql/schema.cljc",14,$CLJS.zm,1,816,816,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.zm,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3c\x3d clause.",$CLJS.m(oT)?oT.J:null])):
null));return $CLJS.m(a)?a:WO}(),oT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof nT?new $CLJS.ud(function(){return nT},$CLJS.fe(RP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),YO,"metabase/mbql/schema.cljc",13,$CLJS.pm,1,815,815,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.pm,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3e clause.",$CLJS.m(nT)?nT.J:null])):null));return $CLJS.m(a)?a:YO}(),nT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof pT?new $CLJS.ud(function(){return pT},$CLJS.fe(iR,new $CLJS.k(null,
1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eP,"metabase/mbql/schema.cljc",14,$CLJS.ym,1,817,817,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.ym,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3e\x3d clause.",$CLJS.m(pT)?pT.J:null])):
null));return $CLJS.m(a)?a:eP}(),pT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof kT?new $CLJS.ud(function(){return kT},$CLJS.fe(SP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),$CLJS.yM,"metabase/mbql/schema.cljc",13,$CLJS.lm,1,811,811,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.lm,$CLJS.PP,$CLJS.Y($CLJS.Kl,tR),LQ,$CLJS.Y($CLJS.Kl,tR),qQ,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,tR))],null),$CLJS.yd,"Schema for a valid \x3d clause.",$CLJS.m(kT)?kT.J:null])):null));return $CLJS.m(a)?a:$CLJS.yM}(),kT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof lT?new $CLJS.ud(function(){return lT},
$CLJS.fe(ON,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),aO,"metabase/mbql/schema.cljc",14,$CLJS.JJ,1,812,812,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.JJ,$CLJS.PP,$CLJS.Y($CLJS.Kl,tR),LQ,$CLJS.Y($CLJS.Kl,tR),qQ,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,tR))],null),
$CLJS.yd,"Schema for a valid !\x3d clause.",$CLJS.m(lT)?lT.J:null])):null));return $CLJS.m(a)?a:aO}(),lT],null)]));
ET=eN.l($CLJS.J([$CLJS.fg(nN,fS),$CLJS.jS,$CLJS.fg(nN,cS),gS,$CLJS.fg(nN,$R),aS,$CLJS.fg(nN,dS),lS,$CLJS.Ju,oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof eT?new $CLJS.ud(function(){return eT},$CLJS.fe(XQ,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),dP,"metabase/mbql/schema.cljc",15,$CLJS.Qj,1,758,758,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.Qj,lO,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),IP,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),sO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))))],null),$CLJS.yd,"Schema for a valid and clause.",$CLJS.m(eT)?eT.J:null])):null));return $CLJS.m(a)?a:dP}(),eT],
null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof fT?new $CLJS.ud(function(){return fT},$CLJS.fe(KP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),NP,"metabase/mbql/schema.cljc",14,$CLJS.Gk,1,763,763,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.Gk,lO,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),IP,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))),sO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP))))],null),$CLJS.yd,"Schema for a valid or clause.",$CLJS.m(fT)?fT.J:null])):null));return $CLJS.m(a)?a:NP}(),fT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==
typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof gT?new $CLJS.ud(function(){return gT},$CLJS.fe(mQ,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.iL,"metabase/mbql/schema.cljc",15,$CLJS.Yk,1,768,768,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.Yk,
$CLJS.vR,$CLJS.Y($CLJS.Kl,$CLJS.Y(eO,$CLJS.Y($CLJS.Ol,iP)))],null),$CLJS.yd,"Schema for a valid not clause.",$CLJS.m(gT)?gT.J:null])):null));return $CLJS.m(a)?a:$CLJS.iL}(),gT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof kT?new $CLJS.ud(function(){return kT},$CLJS.fe(SP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,
$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.yM,"metabase/mbql/schema.cljc",13,$CLJS.lm,1,811,811,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.lm,$CLJS.PP,$CLJS.Y($CLJS.Kl,tR),LQ,$CLJS.Y($CLJS.Kl,tR),qQ,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,tR))],null),$CLJS.yd,"Schema for a valid \x3d clause.",$CLJS.m(kT)?kT.J:null])):null));return $CLJS.m(a)?a:$CLJS.yM}(),kT],
null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof lT?new $CLJS.ud(function(){return lT},$CLJS.fe(ON,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),aO,"metabase/mbql/schema.cljc",14,$CLJS.JJ,1,812,812,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.JJ,$CLJS.PP,$CLJS.Y($CLJS.Kl,tR),LQ,$CLJS.Y($CLJS.Kl,tR),qQ,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,tR))],null),$CLJS.yd,"Schema for a valid !\x3d clause.",$CLJS.m(lT)?lT.J:null])):null));return $CLJS.m(a)?a:aO}(),lT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof mT?new $CLJS.ud(function(){return mT},
$CLJS.fe(TP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),XO,"metabase/mbql/schema.cljc",13,$CLJS.mm,1,814,814,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.mm,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3c clause.",
$CLJS.m(mT)?mT.J:null])):null));return $CLJS.m(a)?a:XO}(),mT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof nT?new $CLJS.ud(function(){return nT},$CLJS.fe(RP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),YO,"metabase/mbql/schema.cljc",13,$CLJS.pm,1,815,815,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.pm,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3e clause.",$CLJS.m(nT)?nT.J:null])):null));return $CLJS.m(a)?a:YO}(),nT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof oT?new $CLJS.ud(function(){return oT},$CLJS.fe(pR,new $CLJS.k(null,
1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),WO,"metabase/mbql/schema.cljc",14,$CLJS.zm,1,816,816,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.zm,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3c\x3d clause.",$CLJS.m(oT)?oT.J:null])):
null));return $CLJS.m(a)?a:WO}(),oT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof pT?new $CLJS.ud(function(){return pT},$CLJS.fe(iR,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),eP,"metabase/mbql/schema.cljc",14,$CLJS.ym,1,817,817,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.ym,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),LQ,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid \x3e\x3d clause.",$CLJS.m(pT)?pT.J:null])):null));return $CLJS.m(a)?a:eP}(),pT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof qT?new $CLJS.ud(function(){return qT},$CLJS.fe(Cja,new $CLJS.k(null,
1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),QN,"metabase/mbql/schema.cljc",19,$CLJS.PH,1,820,820,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.PH,$CLJS.PP,$CLJS.Y($CLJS.Kl,mO),$CLJS.vk,$CLJS.Y($CLJS.Kl,mO),$CLJS.cm,$CLJS.Y($CLJS.Kl,mO)],null),$CLJS.yd,"Schema for a valid between clause.",
$CLJS.m(qT)?qT.J:null])):null));return $CLJS.m(a)?a:QN}(),qT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof xT?new $CLJS.ud(function(){return xT},$CLJS.fe(Eja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),PQ,"metabase/mbql/schema.cljc",23,$CLJS.zI,1,843,843,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.zI,$CLJS.PP,$CLJS.Y($CLJS.Kl,KQ),$N,$CLJS.Y($CLJS.Kl,KQ),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,lQ))],null),$CLJS.yd,"Schema for a valid starts-with clause.",$CLJS.m(xT)?xT.J:null])):null));return $CLJS.m(a)?a:PQ}(),xT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof yT?new $CLJS.ud(function(){return yT},
$CLJS.fe(xia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),dO,"metabase/mbql/schema.cljc",21,$CLJS.sJ,1,844,844,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.sJ,$CLJS.PP,$CLJS.Y($CLJS.Kl,KQ),$N,$CLJS.Y($CLJS.Kl,KQ),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,lQ))],
null),$CLJS.yd,"Schema for a valid ends-with clause.",$CLJS.m(yT)?yT.J:null])):null));return $CLJS.m(a)?a:dO}(),yT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof zT?new $CLJS.ud(function(){return zT},$CLJS.fe(Nia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),nO,"metabase/mbql/schema.cljc",20,$CLJS.QI,1,845,845,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.QI,$CLJS.PP,$CLJS.Y($CLJS.Kl,KQ),$N,$CLJS.Y($CLJS.Kl,KQ),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,lQ))],null),$CLJS.yd,"Schema for a valid contains clause.",$CLJS.m(zT)?zT.J:null])):null));return $CLJS.m(a)?a:nO}(),zT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==
typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof AT?new $CLJS.ud(function(){return AT},$CLJS.fe(Eka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wN,"metabase/mbql/schema.cljc",36,$CLJS.AI,1,848,848,!0,new $CLJS.R(null,
7,5,$CLJS.S,[$CLJS.AI,$CLJS.PP,$CLJS.Y($CLJS.Kl,KQ),$N,$CLJS.Y($CLJS.Kl,KQ),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,lQ))],null),$CLJS.yd,"Schema for a valid does-not-contain clause.",$CLJS.m(AT)?AT.J:null])):null));return $CLJS.m(a)?a:wN}(),AT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof rT?new $CLJS.ud(function(){return rT},$CLJS.fe(hka,new $CLJS.k(null,1,[$CLJS.Vl,!0],
null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OQ,"metabase/mbql/schema.cljc",26,$CLJS.ZH,1,823,823,!0,new $CLJS.R(null,13,5,$CLJS.S,[$CLJS.ZH,cia,$CLJS.Y($CLJS.Kl,mO),Jka,$CLJS.Y($CLJS.Kl,mO),qka,$CLJS.Y($CLJS.Kl,mO),gia,$CLJS.Y($CLJS.Kl,mO),jka,$CLJS.Y($CLJS.Kl,mO),bia,$CLJS.Y($CLJS.Kl,
mO)],null),$CLJS.yd,"Schema for a valid inside clause.",$CLJS.m(rT)?rT.J:null])):null));return $CLJS.m(a)?a:OQ}(),rT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof uT?new $CLJS.ud(function(){return uT},$CLJS.fe(Oia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),zP,"metabase/mbql/schema.cljc",28,$CLJS.QH,1,837,837,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.QH,$CLJS.PP,$CLJS.Y($CLJS.Kl,hO)],null),$CLJS.yd,"Schema for a valid is-empty clause.",$CLJS.m(uT)?uT.J:null])):null));return $CLJS.m(a)?a:zP}(),uT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&
"undefined"!==typeof vT?new $CLJS.ud(function(){return vT},$CLJS.fe(Sja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eQ,"metabase/mbql/schema.cljc",29,$CLJS.eI,1,838,838,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.eI,$CLJS.PP,$CLJS.Y($CLJS.Kl,hO)],null),
$CLJS.yd,"Schema for a valid not-empty clause.",$CLJS.m(vT)?vT.J:null])):null));return $CLJS.m(a)?a:eQ}(),vT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof sT?new $CLJS.ud(function(){return sT},$CLJS.fe(yka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),rO,"metabase/mbql/schema.cljc",27,$CLJS.DH,1,832,832,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.DH,$CLJS.PP,$CLJS.Y($CLJS.Kl,hO)],null),$CLJS.yd,"Schema for a valid is-null clause.",$CLJS.m(sT)?sT.J:null])):null));return $CLJS.m(a)?a:rO}(),sT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&
"undefined"!==typeof tT?new $CLJS.ud(function(){return tT},$CLJS.fe(bja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),UN,"metabase/mbql/schema.cljc",28,$CLJS.sI,1,833,833,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.sI,$CLJS.PP,$CLJS.Y($CLJS.Kl,hO)],null),
$CLJS.yd,"Schema for a valid not-null clause.",$CLJS.m(tT)?tT.J:null])):null));return $CLJS.m(a)?a:UN}(),tT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof BT?new $CLJS.ud(function(){return BT},$CLJS.fe(Tha,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wQ,"metabase/mbql/schema.cljc",33,$CLJS.wJ,1,868,868,!0,new $CLJS.R(null,9,5,$CLJS.S,[$CLJS.wJ,$CLJS.PP,$CLJS.Y($CLJS.Kl,hO),$CLJS.lC,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.GP,OP,$CLJS.Y(Kka,$CLJS.eB,$CLJS.gD,$CLJS.WH))),$CLJS.bk,$CLJS.Y($CLJS.Kl,cP),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,Hja))],null),$CLJS.yd,"Schema for a valid time-interval clause.",$CLJS.m(BT)?BT.J:null])):null));
return $CLJS.m(a)?a:wQ}(),BT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof CT?new $CLJS.ud(function(){return CT},$CLJS.fe(nja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),gR,"metabase/mbql/schema.cljc",27,$CLJS.sH,1,881,881,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.sH,kia,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.GP,jO,aR))],null),$CLJS.yd,"Schema for a valid segment clause.",$CLJS.m(CT)?CT.J:null])):null));return $CLJS.m(a)?a:gR}(),CT],null)]))]));
$CLJS.dT=hN(new $CLJS.ud(function(){return ET},Aka,$CLJS.Yh([$CLJS.um,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[!0,$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),Cia,"metabase/mbql/schema.cljc",23,1,892,892,$CLJS.yd,null,$CLJS.m(ET)?ET.J:null])));
ala=new $CLJS.R(null,1,5,$CLJS.S,[new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.$M($CLJS.dT,"pred"),$CLJS.$M(mS,"expr")],null)],null);bla=$CLJS.Tf([aN($CLJS.Uj),mS]);FT=mN($CLJS.dI,$CLJS.J(["clauses",ala,"options",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,bla],null)]));
LS=oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof zS?new $CLJS.ud(function(){return zS},$CLJS.fe(VP,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),QO,"metabase/mbql/schema.cljc",51,$CLJS.rm,1,630,630,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.rm,$CLJS.UJ,$CLJS.Y($CLJS.Kl,ZP),$Q,$CLJS.Y($CLJS.Kl,ZP),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,ZP))],null),$CLJS.yd,"Schema for a valid + clause.",$CLJS.m(zS)?zS.J:null])):null));return $CLJS.m(a)?a:QO}(),zS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof AS?new $CLJS.ud(function(){return AS},
$CLJS.fe(yja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),RO,"metabase/mbql/schema.cljc",51,$CLJS.hu,1,633,633,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.hu,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ),
$Q,$CLJS.Y($CLJS.Kl,ZP),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,ZP))],null),$CLJS.yd,"Schema for a valid - clause.",$CLJS.m(AS)?AS.J:null])):null));return $CLJS.m(a)?a:RO}(),AS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN?new $CLJS.ud(function(){return BS},$CLJS.fe(xja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,pP,$CLJS.Fk,$CLJS.bl,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,
new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.Ku,"metabase/mbql/schema.cljc",$CLJS.XJ,1,636,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.XJ,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ),$Q,$CLJS.Y($CLJS.Kl,EQ),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,EQ))],null),$CLJS.yd,"Schema for a valid / clause.",$CLJS.m(BS)?BS.J:null])):null));return $CLJS.m(a)?a:$CLJS.Ku}(),BS],
null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof CS?new $CLJS.ud(function(){return CS},$CLJS.fe(zja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),PO,"metabase/mbql/schema.cljc",51,$CLJS.sm,1,638,638,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.sm,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ),$Q,$CLJS.Y($CLJS.Kl,EQ),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,EQ))],null),$CLJS.yd,"Schema for a valid * clause.",$CLJS.m(CS)?CS.J:null])):null));return $CLJS.m(a)?a:PO}(),CS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof oS?new $CLJS.ud(function(){return oS},
$CLJS.fe(sQ,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),IQ,"metabase/mbql/schema.cljc",58,$CLJS.WI,1,597,597,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.WI,eR,$CLJS.Y($CLJS.Kl,AN),dR,$CLJS.Y($CLJS.Kl,
AN),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,AN))],null),$CLJS.yd,"Schema for a valid coalesce clause.",$CLJS.m(oS)?oS.J:null])):null));return $CLJS.m(a)?a:IQ}(),oS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof qS?new $CLJS.ud(function(){return qS},$CLJS.fe(Rja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,
$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),hQ,"metabase/mbql/schema.cljc",56,$CLJS.aD,1,603,603,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.aD,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ)],null),$CLJS.yd,"Schema for a valid length clause.",$CLJS.m(qS)?qS.J:null])):null));return $CLJS.m(a)?a:hQ}(),qS],null),new $CLJS.R(null,
2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof DS?new $CLJS.ud(function(){return DS},$CLJS.fe(yia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),nP,"metabase/mbql/schema.cljc",55,$CLJS.LI,1,640,640,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.LI,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid floor clause.",$CLJS.m(DS)?DS.J:null])):null));return $CLJS.m(a)?a:nP}(),DS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof ES?new $CLJS.ud(function(){return ES},$CLJS.fe(qia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),
$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),KN,"metabase/mbql/schema.cljc",54,$CLJS.pH,1,643,643,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.pH,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid ceil clause.",$CLJS.m(ES)?
ES.J:null])):null));return $CLJS.m(a)?a:KN}(),ES],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof FS?new $CLJS.ud(function(){return FS},$CLJS.fe(Kia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),fP,"metabase/mbql/schema.cljc",55,$CLJS.aJ,1,646,646,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.aJ,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid round clause.",$CLJS.m(FS)?FS.J:null])):null));return $CLJS.m(a)?a:fP}(),FS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&
"undefined"!==typeof GS?new $CLJS.ud(function(){return GS},$CLJS.fe(Fka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),EP,"metabase/mbql/schema.cljc",53,$CLJS.yH,1,649,649,new $CLJS.R(null,
3,5,$CLJS.S,[$CLJS.yH,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid abs clause.",$CLJS.m(GS)?GS.J:null])):null));return $CLJS.m(a)?a:EP}(),GS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof HS?new $CLJS.ud(function(){return HS},$CLJS.fe(nka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,
RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[lR,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),WQ,"metabase/mbql/schema.cljc",69,$CLJS.rH,1,652,652,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.rH,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ),$Q,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid power clause.",$CLJS.m(HS)?HS.J:null])):null));return $CLJS.m(a)?a:WQ}(),HS],
null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof IS?new $CLJS.ud(function(){return IS},$CLJS.fe(gja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[lR,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),MO,"metabase/mbql/schema.cljc",68,$CLJS.tI,1,655,655,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.tI,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid sqrt clause.",$CLJS.m(IS)?IS.J:null])):null));return $CLJS.m(a)?a:MO}(),IS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof JS?new $CLJS.ud(function(){return JS},$CLJS.fe(pka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),
$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[lR,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),hP,"metabase/mbql/schema.cljc",67,$CLJS.fH,1,658,658,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.fH,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid exp clause.",$CLJS.m(JS)?
JS.J:null])):null));return $CLJS.m(a)?a:hP}(),JS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof KS?new $CLJS.ud(function(){return KS},$CLJS.fe(jia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[lR,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),qR,"metabase/mbql/schema.cljc",67,$CLJS.ZJ,1,661,661,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.ZJ,$CLJS.UJ,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid log clause.",$CLJS.m(KS)?KS.J:null])):null));return $CLJS.m(a)?a:qR}(),KS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&
"undefined"!==typeof FT?new $CLJS.ud(function(){return FT},$CLJS.fe(FN,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),uP,"metabase/mbql/schema.cljc",61,$CLJS.dI,1,916,916,new $CLJS.R(null,
5,5,$CLJS.S,[$CLJS.dI,$CLJS.nC,$CLJS.Y($CLJS.Kl,uO),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,LP))],null),$CLJS.yd,"Schema for a valid case clause.",$CLJS.m(FT)?FT.J:null])):null));return $CLJS.m(a)?a:uP}(),FT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof MS?new $CLJS.ud(function(){return MS},$CLJS.fe(mia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,
$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lI,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),FP,"metabase/mbql/schema.cljc",65,$CLJS.lI,1,680,680,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.lI,Dia,$CLJS.Y($CLJS.Kl,AR),Eia,$CLJS.Y($CLJS.Kl,AR),$CLJS.bk,$CLJS.Y($CLJS.Kl,ika)],null),$CLJS.yd,"Schema for a valid datetime-diff clause.",
$CLJS.m(MS)?MS.J:null])):null));return $CLJS.m(a)?a:FP}(),MS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof NS?new $CLJS.ud(function(){return NS},$CLJS.fe(Wja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,
new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),WP,"metabase/mbql/schema.cljc",71,$CLJS.uJ,1,685,685,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.uJ,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR),$CLJS.bk,$CLJS.Y($CLJS.Kl,rja),$CLJS.ik,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,hR))],null),$CLJS.yd,"Schema for a valid temporal-extract clause.",$CLJS.m(NS)?NS.J:null])):null));return $CLJS.m(a)?a:WP}(),NS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=
pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof OS?new $CLJS.ud(function(){return OS},$CLJS.fe(Yia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),XN,"metabase/mbql/schema.cljc",71,$CLJS.KH,1,691,691,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.KH,$CLJS.HP,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-year clause.",$CLJS.m(OS)?OS.J:null])):null));return $CLJS.m(a)?a:XN}(),OS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof PS?new $CLJS.ud(function(){return PS},$CLJS.fe(Lia,new $CLJS.k(null,1,[$CLJS.Vl,!0],
null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),UP,"metabase/mbql/schema.cljc",74,$CLJS.$J,1,694,694,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.$J,$CLJS.HP,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-quarter clause.",
$CLJS.m(PS)?PS.J:null])):null));return $CLJS.m(a)?a:UP}(),PS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof QS?new $CLJS.ud(function(){return QS},$CLJS.fe(wja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),
$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),jQ,"metabase/mbql/schema.cljc",72,$CLJS.eH,1,697,697,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.eH,$CLJS.HP,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-month clause.",$CLJS.m(QS)?QS.J:null])):null));return $CLJS.m(a)?a:jQ}(),QS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==
typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof RS?new $CLJS.ud(function(){return RS},$CLJS.fe(wka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iQ,"metabase/mbql/schema.cljc",
71,$CLJS.iJ,1,700,700,!0,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.iJ,$CLJS.HP,$CLJS.Y($CLJS.Kl,AR),$CLJS.ik,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,hR))],null),$CLJS.yd,"Schema for a valid get-week clause.",$CLJS.m(RS)?RS.J:null])):null));return $CLJS.m(a)?a:iQ}(),RS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof SS?new $CLJS.ud(function(){return SS},$CLJS.fe($ha,new $CLJS.k(null,1,[$CLJS.Vl,
!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),dQ,"metabase/mbql/schema.cljc",70,$CLJS.gJ,1,704,704,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.gJ,$CLJS.HP,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-day clause.",
$CLJS.m(SS)?SS.J:null])):null));return $CLJS.m(a)?a:dQ}(),SS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof TS?new $CLJS.ud(function(){return TS},$CLJS.fe(pja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),
$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$P,"metabase/mbql/schema.cljc",78,$CLJS.pJ,1,707,707,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.pJ,$CLJS.HP,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-day-of-week clause.",$CLJS.m(TS)?TS.J:null])):null));return $CLJS.m(a)?a:$P}(),TS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==
typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof US?new $CLJS.ud(function(){return US},$CLJS.fe(oja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),BN,"metabase/mbql/schema.cljc",
71,$CLJS.DJ,1,710,710,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.DJ,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-hour clause.",$CLJS.m(US)?US.J:null])):null));return $CLJS.m(a)?a:BN}(),US],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof VS?new $CLJS.ud(function(){return VS},$CLJS.fe(aka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,
$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),uR,"metabase/mbql/schema.cljc",73,$CLJS.mJ,1,713,713,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.mJ,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-minute clause.",$CLJS.m(VS)?VS.J:null])):null));
return $CLJS.m(a)?a:uR}(),VS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof WS?new $CLJS.ud(function(){return WS},$CLJS.fe(kja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.uJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wP,"metabase/mbql/schema.cljc",73,$CLJS.JH,1,716,716,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.JH,$CLJS.GI,$CLJS.Y($CLJS.Kl,AR)],null),$CLJS.yd,"Schema for a valid get-second clause.",$CLJS.m(WS)?WS.J:null])):null));return $CLJS.m(a)?a:wP}(),WS],null)]));
cT=oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof pS?new $CLJS.ud(function(){return pS},$CLJS.fe(Pja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),nQ,"metabase/mbql/schema.cljc",59,$CLJS.hH,1,600,600,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.hH,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ),$CLJS.KA,$CLJS.Y($CLJS.Kl,Gia),$CLJS.aD,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,EQ))],null),$CLJS.yd,"Schema for a valid substring clause.",$CLJS.m(pS)?pS.J:null])):null));return $CLJS.m(a)?a:nQ}(),pS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof rS?new $CLJS.ud(function(){return rS},
$CLJS.fe(ska,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),FQ,"metabase/mbql/schema.cljc",54,$CLJS.IJ,1,606,606,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.IJ,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ)],
null),$CLJS.yd,"Schema for a valid trim clause.",$CLJS.m(rS)?rS.J:null])):null));return $CLJS.m(a)?a:FQ}(),rS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof tS?new $CLJS.ud(function(){return tS},$CLJS.fe(qja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,
1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),rQ,"metabase/mbql/schema.cljc",55,$CLJS.NJ,1,612,612,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.NJ,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ)],null),$CLJS.yd,"Schema for a valid ltrim clause.",$CLJS.m(tS)?tS.J:null])):null));return $CLJS.m(a)?a:rQ}(),tS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&
"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof sS?new $CLJS.ud(function(){return sS},$CLJS.fe(Qja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),JP,"metabase/mbql/schema.cljc",
55,$CLJS.fK,1,609,609,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.fK,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ)],null),$CLJS.yd,"Schema for a valid rtrim clause.",$CLJS.m(sS)?sS.J:null])):null));return $CLJS.m(a)?a:JP}(),sS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof wS?new $CLJS.ud(function(){return wS},$CLJS.fe(Uha,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,
$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),fR,"metabase/mbql/schema.cljc",57,$CLJS.cK,1,621,621,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.cK,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ),hia,$CLJS.Y($CLJS.Kl,$CLJS.bP),$CLJS.Iu,$CLJS.Y($CLJS.Kl,$CLJS.bP)],null),$CLJS.yd,"Schema for a valid replace clause.",
$CLJS.m(wS)?wS.J:null])):null));return $CLJS.m(a)?a:fR}(),wS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof vS?new $CLJS.ud(function(){return vS},$CLJS.fe(Tja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,
new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),DR,"metabase/mbql/schema.cljc",55,$CLJS.Su,1,618,618,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.Su,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ)],null),$CLJS.yd,"Schema for a valid lower clause.",$CLJS.m(vS)?vS.J:null])):null));return $CLJS.m(a)?a:DR}(),vS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==
typeof uN&&"undefined"!==typeof uS?new $CLJS.ud(function(){return uS},$CLJS.fe(vka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),TQ,"metabase/mbql/schema.cljc",55,$CLJS.Eu,1,615,615,
new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.Eu,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ)],null),$CLJS.yd,"Schema for a valid upper clause.",$CLJS.m(uS)?uS.J:null])):null));return $CLJS.m(a)?a:TQ}(),uS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof xS?new $CLJS.ud(function(){return xS},$CLJS.fe(Gja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,
$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),FO,"metabase/mbql/schema.cljc",56,$CLJS.tH,1,624,624,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.tH,eR,$CLJS.Y($CLJS.Kl,KQ),dR,$CLJS.Y($CLJS.Kl,KQ),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,KQ))],null),$CLJS.yd,"Schema for a valid concat clause.",$CLJS.m(xS)?
xS.J:null])):null));return $CLJS.m(a)?a:FO}(),xS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof yS?new $CLJS.ud(function(){return yS},$CLJS.fe(Oja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,2,[$CLJS.aQ,"null",$CLJS.Dba,"null"],null),null),
$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),VN,"metabase/mbql/schema.cljc",74,$CLJS.UI,1,627,627,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.UI,$CLJS.xD,$CLJS.Y($CLJS.Kl,KQ),$CLJS.Du,$CLJS.Y($CLJS.Kl,$CLJS.bP)],null),$CLJS.yd,"Schema for a valid regex-match-first clause.",$CLJS.m(yS)?yS.J:null])):null));return $CLJS.m(a)?a:VN}(),yS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==
typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof oS?new $CLJS.ud(function(){return oS},$CLJS.fe(sQ,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.aQ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
IQ,"metabase/mbql/schema.cljc",58,$CLJS.WI,1,597,597,new $CLJS.R(null,7,5,$CLJS.S,[$CLJS.WI,eR,$CLJS.Y($CLJS.Kl,AN),dR,$CLJS.Y($CLJS.Kl,AN),kO,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.yk,AN))],null),$CLJS.yd,"Schema for a valid coalesce clause.",$CLJS.m(oS)?oS.J:null])):null));return $CLJS.m(a)?a:IQ}(),oS],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof FT?new $CLJS.ud(function(){return FT},
$CLJS.fe(FN,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),uP,"metabase/mbql/schema.cljc",61,$CLJS.dI,1,916,916,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.dI,$CLJS.nC,$CLJS.Y($CLJS.Kl,uO),$CLJS.Sk,
$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,LP))],null),$CLJS.yd,"Schema for a valid case clause.",$CLJS.m(FT)?FT.J:null])):null));return $CLJS.m(a)?a:uP}(),FT],null)]));$CLJS.GT=eN.l($CLJS.J([$CLJS.fg(nN,cS),gS,$CLJS.fg(nN,$R),aS,$CLJS.fg(nN,dS),lS,$CLJS.fg(nN,fS),$CLJS.jS,$CLJS.fg(nN,$CLJS.dI),FT,$CLJS.Ju,$CLJS.YR]));HT=mN($CLJS.cD,$CLJS.J(["field",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,$CLJS.YR],null)]));IT=mN($CLJS.SI,$CLJS.J(["field",new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.Wj,$CLJS.YR],null)]));
JT=mN($CLJS.HI,$CLJS.J(["field-or-expression",$CLJS.GT]));KT=mN($CLJS.YJ,$CLJS.J(["field-or-expression",$CLJS.GT]));LT=mN($CLJS.SH,$CLJS.J(["field-or-expression",$CLJS.GT]));MT=mN($CLJS.zJ,$CLJS.J(["field-or-expression",$CLJS.GT]));NT=mN($CLJS.vk,$CLJS.J(["field-or-expression",$CLJS.GT]));OT=mN($CLJS.cm,$CLJS.J(["field-or-expression",$CLJS.GT]));PT=mN($CLJS.VJ,$CLJS.J(["field-or-expression",$CLJS.GT,"pred",$CLJS.dT]));QT=mN($CLJS.kJ,$CLJS.J(["pred",$CLJS.dT]));RT=mN($CLJS.dJ,$CLJS.J(["pred",$CLJS.dT]));
ST=mN($CLJS.GJ,$CLJS.J(["field-or-expression",$CLJS.GT]));TT=mN($CLJS.VH,$CLJS.J(["field-or-expression",$CLJS.GT]));UT=mN($CLJS.BJ,$CLJS.J(["field-or-expression",$CLJS.GT]));VT=mN($CLJS.rI,$CLJS.J(["field-or-expression",$CLJS.GT,"percentile",iS]));WT=mN($CLJS.mP,$CLJS.J(["metric-id",$CLJS.SM($CLJS.J([$CLJS.WM,$CLJS.TM]))]));
XT=fN($CLJS.fg(nN,cS),gS,oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof JT?new $CLJS.ud(function(){return JT},$CLJS.fe(Nja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),rP,"metabase/mbql/schema.cljc",60,$CLJS.HI,1,955,955,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.HI,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid avg clause.",$CLJS.m(JT)?JT.J:null])):null));return $CLJS.m(a)?a:rP}(),JT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof KT?
new $CLJS.ud(function(){return KT},$CLJS.fe(Sia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),ZQ,"metabase/mbql/schema.cljc",64,$CLJS.YJ,1,956,956,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.YJ,
UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid cum-sum clause.",$CLJS.m(KT)?KT.J:null])):null));return $CLJS.m(a)?a:ZQ}(),KT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof LT?new $CLJS.ud(function(){return LT},$CLJS.fe(Jia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],
[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),vP,"metabase/mbql/schema.cljc",65,$CLJS.SH,1,957,957,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.SH,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid distinct clause.",$CLJS.m(LT)?LT.J:null])):null));return $CLJS.m(a)?a:vP}(),LT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=
pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof ST?new $CLJS.ud(function(){return ST},$CLJS.fe(kka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.qJ,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),DN,"metabase/mbql/schema.cljc",76,$CLJS.GJ,1,971,971,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.GJ,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid stddev clause.",$CLJS.m(ST)?ST.J:null])):null));return $CLJS.m(a)?a:DN}(),ST],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof MT?new $CLJS.ud(function(){return MT},$CLJS.fe(Bja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,
$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NN,"metabase/mbql/schema.cljc",60,$CLJS.zJ,1,958,958,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.zJ,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid sum clause.",$CLJS.m(MT)?MT.J:null])):
null));return $CLJS.m(a)?a:NN}(),MT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof NT?new $CLJS.ud(function(){return NT},$CLJS.fe(dia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.xl,"metabase/mbql/schema.cljc",60,$CLJS.vk,1,959,959,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.vk,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid min clause.",$CLJS.m(NT)?NT.J:null])):null));return $CLJS.m(a)?a:$CLJS.xl}(),NT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&
"undefined"!==typeof OT?new $CLJS.ud(function(){return OT},$CLJS.fe(Zha,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.gm,"metabase/mbql/schema.cljc",60,$CLJS.cm,1,960,960,new $CLJS.R(null,
3,5,$CLJS.S,[$CLJS.cm,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid max clause.",$CLJS.m(OT)?OT.J:null])):null));return $CLJS.m(a)?a:$CLJS.gm}(),OT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof WT?new $CLJS.ud(function(){return WT},$CLJS.fe(Fia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,
RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),EO,"metabase/mbql/schema.cljc",26,$CLJS.mP,1,989,989,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.mP,Tia,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.GP,jO,aR))],null),$CLJS.yd,"Schema for a valid metric clause.",$CLJS.m(WT)?WT.J:null])):null));return $CLJS.m(a)?a:EO}(),WT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==
typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof RT?new $CLJS.ud(function(){return RT},$CLJS.fe(ija,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
yO,"metabase/mbql/schema.cljc",62,$CLJS.dJ,1,968,968,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.dJ,$CLJS.Dl,$CLJS.Y($CLJS.Kl,iP)],null),$CLJS.yd,"Schema for a valid share clause.",$CLJS.m(RT)?RT.J:null])):null));return $CLJS.m(a)?a:yO}(),RT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof QT?new $CLJS.ud(function(){return QT},$CLJS.fe(fia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,
$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),LN,"metabase/mbql/schema.cljc",68,$CLJS.kJ,1,965,965,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.kJ,$CLJS.Dl,$CLJS.Y($CLJS.Kl,iP)],null),$CLJS.yd,"Schema for a valid count-where clause.",$CLJS.m(QT)?
QT.J:null])):null));return $CLJS.m(a)?a:LN}(),QT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof PT?new $CLJS.ud(function(){return PT},$CLJS.fe(Dka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),sP,"metabase/mbql/schema.cljc",66,$CLJS.VJ,1,962,962,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.VJ,UQ,$CLJS.Y($CLJS.Kl,MQ),$CLJS.Dl,$CLJS.Y($CLJS.Kl,iP)],null),$CLJS.yd,"Schema for a valid sum-where clause.",$CLJS.m(PT)?PT.J:null])):null));return $CLJS.m(a)?a:sP}(),PT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&
"undefined"!==typeof uN&&"undefined"!==typeof FT?new $CLJS.ud(function(){return FT},$CLJS.fe(FN,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),uP,"metabase/mbql/schema.cljc",61,$CLJS.dI,
1,916,916,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.dI,$CLJS.nC,$CLJS.Y($CLJS.Kl,uO),$CLJS.Sk,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,LP))],null),$CLJS.yd,"Schema for a valid case clause.",$CLJS.m(FT)?FT.J:null])):null));return $CLJS.m(a)?a:uP}(),FT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof UT?new $CLJS.ud(function(){return UT},$CLJS.fe(dka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,
$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.JI,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YQ,"metabase/mbql/schema.cljc",68,$CLJS.BJ,1,977,977,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.BJ,UQ,$CLJS.Y($CLJS.Kl,MQ)],null),$CLJS.yd,"Schema for a valid median clause.",$CLJS.m(UT)?UT.J:null])):
null));return $CLJS.m(a)?a:YQ}(),UT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof VT?new $CLJS.ud(function(){return VT},$CLJS.fe(vja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.JI,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,
1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CQ,"metabase/mbql/schema.cljc",72,$CLJS.rI,1,980,980,new $CLJS.R(null,5,5,$CLJS.S,[$CLJS.rI,UQ,$CLJS.Y($CLJS.Kl,MQ),$CLJS.rI,$CLJS.Y($CLJS.Kl,EQ)],null),$CLJS.yd,"Schema for a valid percentile clause.",$CLJS.m(VT)?VT.J:null])):null));return $CLJS.m(a)?a:CQ}(),VT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&
"undefined"!==typeof uN&&"undefined"!==typeof TT?new $CLJS.ud(function(){return TT},$CLJS.fe(pia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CN,"metabase/mbql/schema.cljc",77,$CLJS.VH,1,974,974,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.VH,UQ,$CLJS.Y($CLJS.Kl,
MQ)],null),$CLJS.yd,"Schema for a valid var clause.",$CLJS.m(TT)?TT.J:null])):null));return $CLJS.m(a)?a:CN}(),TT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof IT?new $CLJS.ud(function(){return IT},$CLJS.fe(aia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,
new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),jP,"metabase/mbql/schema.cljc",74,$CLJS.SI,1,945,945,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.SI,$CLJS.PP,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,hO))],null),$CLJS.yd,"Schema for a valid cum-count clause.",$CLJS.m(IT)?IT.J:null])):null));return $CLJS.m(a)?a:jP}(),IT],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=
pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof HT?new $CLJS.ud(function(){return HT},$CLJS.fe(Hia,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([oP,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,VQ,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.lH,"null"],null),null),$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),$CLJS.hk,"metabase/mbql/schema.cljc",70,$CLJS.cD,1,944,944,!0,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.cD,$CLJS.PP,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.HM,hO))],null),$CLJS.yd,"Schema for a valid count clause.",$CLJS.m(HT)?HT.J:null])):null));return $CLJS.m(a)?a:$CLJS.hk}(),HT],null)])));
YT=hN(new $CLJS.ud(function(){return XT},uka,$CLJS.Yh([$CLJS.um,$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[!0,$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),xka,"metabase/mbql/schema.cljc",35,1,995,995,$CLJS.yd,null,$CLJS.m(XT)?XT.J:null])));cla=$CLJS.Tf([aN($CLJS.V),$CLJS.TM,aN($CLJS.YH),$CLJS.TM,$CLJS.PM,$CLJS.KM]);
$CLJS.ZT=mN($CLJS.yN,$CLJS.J(["aggregation",YT,"options",cla]));$CLJS.hS=fN($CLJS.fg(nN,$CLJS.yN),$CLJS.ZT,YT);$T=mN($CLJS.KI,$CLJS.J(["field",$CLJS.ZR]));aU=mN($CLJS.xI,$CLJS.J(["field",$CLJS.ZR]));
$CLJS.bU=oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof $T?new $CLJS.ud(function(){return $T},$CLJS.fe(gka,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),VO,"metabase/mbql/schema.cljc",15,$CLJS.KI,1,1033,1033,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.KI,$CLJS.PP,$CLJS.Y($CLJS.Kl,zO)],null),$CLJS.yd,"Schema for a valid asc clause.",$CLJS.m($T)?$T.J:null])):null));return $CLJS.m(a)?a:VO}(),$T],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof aU?new $CLJS.ud(function(){return aU},$CLJS.fe(Ria,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),
$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),tQ,"metabase/mbql/schema.cljc",16,$CLJS.xI,1,1034,1034,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.xI,$CLJS.PP,$CLJS.Y($CLJS.Kl,zO)],null),$CLJS.yd,"Schema for a valid desc clause.",$CLJS.m(aU)?aU.J:null])):null));return $CLJS.m(a)?a:tQ}(),aU],null)]));
cN.l($CLJS.J([$CLJS.EN,$CLJS.ZN,$CLJS.vN,$CLJS.ez,$CLJS.PF,$CLJS.HP]));cU=$CLJS.Tf([aN($CLJS.Lk),$CLJS.TM,$CLJS.V,$CLJS.TM,$CLJS.YH,$CLJS.TM,$CLJS.PM,$CLJS.KM]);dla=$CLJS.mn.l($CLJS.J([cU,$CLJS.Tf([$CLJS.al,$CLJS.$L($CLJS.EN),$CLJS.xN,$CLJS.TM,$CLJS.XP,$CLJS.WM,aN($CLJS.YP),$CLJS.WM])]));ela=$CLJS.mn.l($CLJS.J([cU,new $CLJS.k(null,2,[$CLJS.al,$CLJS.$L($CLJS.ZN),$CLJS.QQ,$CLJS.WM],null)]));dU=$CLJS.mn.l($CLJS.J([cU,$CLJS.Tf([aN($CLJS.Uj),$CLJS.KM,aN($CLJS.tO),$CLJS.MM])]));
fla=$CLJS.mn.l($CLJS.J([dU,$CLJS.Tf([$CLJS.al,$CLJS.$L($CLJS.vN),$CLJS.vN,VR,$CLJS.pO,hN(new $CLJS.ud(function(){return eU},tka,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),Ika,"metabase/mbql/schema.cljc",34,1,1130,!0,1130,$CLJS.yd,null,$CLJS.m(eU)?eU.J:null]))),aN($CLJS.Sk),$CLJS.Tf([$CLJS.PM,
$CLJS.KM])])]));$CLJS.fU=new $CLJS.ti(null,new $CLJS.k(null,4,[$CLJS.HP,null,$CLJS.ez,null,$CLJS.pk,null,$CLJS.PF,null],null),null);gla=$CLJS.Q.h(cN,$CLJS.fU);hla=$CLJS.mn.l($CLJS.J([dU,new $CLJS.k(null,1,[$CLJS.al,gla],null)]));ila=eN.l($CLJS.J([function(a){return $CLJS.F.h($CLJS.al.g(a),$CLJS.vN)},fla,function(a){return $CLJS.F.h($CLJS.al.g(a),$CLJS.EN)},dla,function(a){return $CLJS.F.h($CLJS.al.g(a),$CLJS.ZN)},ela,$CLJS.Ju,hla]));
jla=$CLJS.fM($CLJS.Tf([$CLJS.TM,ila]),function(a){return $CLJS.$f(function(b){var c=$CLJS.K(b,0,null);b=$CLJS.K(b,1,null);return $CLJS.F.h(c,$CLJS.V.g(b))},a)},"keys in template tag map must match the :name of their values");gU=$CLJS.Tf([$CLJS.GN,$CLJS.KM,aN($CLJS.uQ),jla,aN($CLJS.AO),$CLJS.jN($CLJS.TM),$CLJS.PM,$CLJS.KM]);
iU=fN($CLJS.Sm.h($CLJS.oe,$CLJS.fQ),$CLJS.ZM(gU,new $CLJS.k(null,1,[$CLJS.GN,$CLJS.fQ],null)),hN(new $CLJS.ud(function(){return $CLJS.hU},cja,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eka,"metabase/mbql/schema.cljc",25,1,1212,!0,1212,$CLJS.yd,null,$CLJS.m($CLJS.hU)?$CLJS.hU.J:null]))));
jU=$CLJS.Tf([$CLJS.V,$CLJS.TM,$CLJS.yI,$CLJS.UM,Dja,$CLJS.TM,aN($CLJS.OO),$CLJS.jN($CLJS.VM),aN($CLJS.qO),$CLJS.jN($CLJS.Pha),$CLJS.KM,$CLJS.KM]);$CLJS.kU=/^card__[1-9]\d*$/;lU=$CLJS.SM($CLJS.J([$CLJS.WM,$CLJS.kU]));kla=$CLJS.Q.h(cN,new $CLJS.ti(null,new $CLJS.k(null,4,[$CLJS.SJ,null,$CLJS.jH,null,$CLJS.OI,null,$CLJS.yJ,null],null),null));
lla=$CLJS.fM($CLJS.Yh([$CLJS.PM,aN($CLJS.$O),aN($CLJS.kP),aN($CLJS.qI),aN($CLJS.AH),$CLJS.mR,aN($CLJS.xQ),aN($CLJS.vQ),aN($CLJS.dK)],[$CLJS.KM,$CLJS.jN(new $CLJS.R(null,1,5,$CLJS.S,[jU],null)),lU,$CLJS.TM,$CLJS.dM($CLJS.SM($CLJS.J([cN.l($CLJS.J([$CLJS.ID,$CLJS.Lu])),hN(new $CLJS.ud(function(){return mU},Zja,$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,$CLJS.Fk,$CLJS.bl,pQ,$CLJS.Am,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),Jja,"metabase/mbql/schema.cljc",16,1,1259,!0,1259,$CLJS.yd,null,$CLJS.m(mU)?mU.J:null])))])),"Valid Join `:fields`: `:all`, `:none`, or a sequence of `:field` clauses that have `:join-alias`."),$CLJS.dT,iU,$CLJS.jN($CLJS.WM),kla]),$CLJS.Sm.h($CLJS.Tm.h($CLJS.kP,$CLJS.xQ),$CLJS.dg($CLJS.Sm.h($CLJS.kP,$CLJS.xQ))),"Joins must have either a `source-table` or `source-query`, but not both.");
mla=$CLJS.fM(pN(new $CLJS.R(null,1,5,$CLJS.S,[lla],null)),function(a){return qN($CLJS.Ag($CLJS.Gb,$CLJS.xg.h($CLJS.qI,a)))},"All join aliases must be unique.");mU=$CLJS.dM($CLJS.fM(pN(new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.YR],null)),qN,"distinct"),"Distinct, non-empty sequence of Field clauses");
$CLJS.hU=$CLJS.fM($CLJS.fM($CLJS.Yh([$CLJS.PM,aN($CLJS.kR),aN($CLJS.$O),aN($CLJS.fO),aN($CLJS.kP),aN($CLJS.TN),aN($CLJS.AH),aN($CLJS.ZO),aN($CLJS.SO),aN($CLJS.xQ),aN($CLJS.ER),aN(gQ),aN($CLJS.aQ)],[$CLJS.KM,$CLJS.fM(pN(new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.bU],null)),qN,"distinct"),$CLJS.jN(new $CLJS.R(null,1,5,$CLJS.S,[jU],null)),mla,lU,$CLJS.dT,mU,pN(new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.hS],null)),pN(new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.YR],null)),iU,$CLJS.XM,new $CLJS.k(null,2,[gQ,$CLJS.WM,via,$CLJS.WM],
null),$CLJS.Tf([$CLJS.TM,$CLJS.GT])]),function(a){return $CLJS.F.h(1,$CLJS.E($CLJS.ri(a,new $CLJS.R(null,2,5,$CLJS.S,[$CLJS.xQ,$CLJS.kP],null))))},"Query must specify either `:source-table` or `:source-query`, but not both."),function(a){var b=$CLJS.Uf(a);a=$CLJS.M.h(b,$CLJS.SO);b=$CLJS.M.h(b,$CLJS.AH);return $CLJS.je($CLJS.wz.h($CLJS.yi(a),$CLJS.yi(b)))},"Fields specified in `:breakout` should not be specified in `:fields`; this is implied.");
$CLJS.nU=$CLJS.Yh([$CLJS.SQ,$CLJS.HP,xO,oO,aP,yR,LO,$CLJS.xR,$CLJS.ez,KO,HN,JQ,nR,$CLJS.PN,jR,wO,$CLJS.gP,JO,$CLJS.Lk,$CLJS.IO,zN,$CLJS.cO,$CLJS.HO,DP,$CLJS.pk,$CLJS.PF,CO],[new $CLJS.k(null,1,[UO,new $CLJS.ti(null,new $CLJS.k(null,5,[$CLJS.SQ,null,$CLJS.HP,null,$CLJS.ez,null,$CLJS.pk,null,$CLJS.PF,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,5,[$CLJS.SQ,null,$CLJS.HP,null,$CLJS.xR,null,$CLJS.gP,null,$CLJS.Lk,null],null),null)],null),new $CLJS.k(null,
3,[$CLJS.al,$CLJS.Tl,$CLJS.VI,RQ,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[xO,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,BR,$CLJS.VI,RQ,UO,new $CLJS.ti(null,new $CLJS.k(null,5,[$CLJS.SQ,null,oO,null,$CLJS.ez,null,$CLJS.Lk,null,zN,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,$CLJS.Tl,$CLJS.VI,JN,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[aP,null],null),null)],null),new $CLJS.k(null,1,[UO,new $CLJS.ti(null,new $CLJS.k(null,1,[yR,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,
BR,$CLJS.VI,Xja,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[LO,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.xR,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,BR,UO,new $CLJS.ti(null,new $CLJS.k(null,5,[$CLJS.SQ,null,oO,null,$CLJS.ez,null,$CLJS.Lk,null,zN,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,BR,$CLJS.VI,JN,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[KO,null],null),null)],null),new $CLJS.k(null,1,[UO,new $CLJS.ti(null,
new $CLJS.k(null,1,[HN,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,$CLJS.Tl,$CLJS.VI,RQ,UO,new $CLJS.ti(null,new $CLJS.k(null,8,[$CLJS.SQ,null,yR,null,HN,null,JQ,null,JO,null,$CLJS.Lk,null,zN,null,$CLJS.PF,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,$CLJS.Tl,$CLJS.VI,JN,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[nR,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,2,[$CLJS.xR,null,$CLJS.PN,null],null),null)],null),new $CLJS.k(null,
3,[$CLJS.al,$CLJS.Tl,$CLJS.VI,JN,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[jR,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,$CLJS.Tl,$CLJS.VI,JN,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[wO,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,5,[$CLJS.SQ,null,$CLJS.HP,null,$CLJS.xR,null,$CLJS.gP,null,$CLJS.Lk,null],null),null)],null),new $CLJS.k(null,1,[UO,new $CLJS.ti(null,new $CLJS.k(null,1,[JO,null],null),null)],null),new $CLJS.k(null,1,[UO,
new $CLJS.ti(null,new $CLJS.k(null,1,[$CLJS.Lk,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,2,[$CLJS.xR,null,$CLJS.IO,null],null),null)],null),new $CLJS.k(null,1,[UO,new $CLJS.ti(null,new $CLJS.k(null,1,[zN,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,2,[$CLJS.xR,null,$CLJS.cO,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.HP,UO,new $CLJS.ti(null,new $CLJS.k(null,2,[$CLJS.xR,
null,$CLJS.HO,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,BR,$CLJS.VI,RQ,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[DP,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.pk,UO,new $CLJS.ti(null,new $CLJS.k(null,3,[$CLJS.SQ,null,$CLJS.Lk,null,$CLJS.pk,null],null),null)],null),new $CLJS.k(null,2,[$CLJS.al,$CLJS.Tl,UO,new $CLJS.ti(null,new $CLJS.k(null,8,[$CLJS.SQ,null,yR,null,HN,null,JQ,null,JO,null,$CLJS.Lk,null,zN,null,$CLJS.PF,null],null),null)],null),new $CLJS.k(null,3,[$CLJS.al,
BR,$CLJS.VI,JN,UO,new $CLJS.ti(null,new $CLJS.k(null,1,[CO,null],null),null)],null)]);nla=$CLJS.Q.h(cN,$CLJS.mi($CLJS.nU));eU=$CLJS.Q.h(cN,$CLJS.pf($CLJS.Lu,$CLJS.mi($CLJS.nU)));oU=mN(lia,$CLJS.J(["tag-name",$CLJS.SM($CLJS.J([$CLJS.TM,new $CLJS.k(null,1,[$CLJS.Lk,$CLJS.TM],null)]))]));pU=mN($CLJS.vN,$CLJS.J(["target",$CLJS.SM($CLJS.J([$CLJS.YR,oU]))]));qU=mN(GO,$CLJS.J(["target",oU]));
ola=$CLJS.SM($CLJS.J([$CLJS.YR,oN($CLJS.J([new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof pU?new $CLJS.ud(function(){return pU},$CLJS.fe(tja,new $CLJS.k(null,1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),kQ,"metabase/mbql/schema.cljc",21,$CLJS.vN,1,1557,1557,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.vN,$CLJS.hK,$CLJS.Y($CLJS.Kl,$CLJS.Y($CLJS.GP,hO,TO))],null),$CLJS.yd,"Schema for a valid dimension clause.",$CLJS.m(pU)?pU.J:null])):null));return $CLJS.m(a)?a:kQ}(),pU],null),new $CLJS.R(null,2,5,$CLJS.S,[function(){var a=pP.g($CLJS.ge("undefined"!==typeof $CLJS.sN&&"undefined"!==typeof tN&&"undefined"!==typeof uN&&"undefined"!==typeof qU?new $CLJS.ud(function(){return qU},$CLJS.fe(Kja,new $CLJS.k(null,
1,[$CLJS.Vl,!0],null)),$CLJS.Yh([$CLJS.Ik,$CLJS.V,$CLJS.jm,$CLJS.fk,pP,$CLJS.Fk,$CLJS.bl,$CLJS.Am,RN,$CLJS.ek,$CLJS.X,$CLJS.im],[$CLJS.fe(DQ,new $CLJS.k(null,1,[$CLJS.X,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CR,"metabase/mbql/schema.cljc",20,GO,1,1560,1560,new $CLJS.R(null,3,5,$CLJS.S,[GO,$CLJS.hK,$CLJS.Y($CLJS.Kl,TO)],null),$CLJS.yd,"Schema for a valid variable clause.",$CLJS.m(qU)?qU.J:null])):null));return $CLJS.m(a)?a:CR}(),
qU],null)]))]));pla=$CLJS.Tf([$CLJS.al,nla,aN($CLJS.Lk),$CLJS.TM,aN($CLJS.hK),ola,aN($CLJS.vl),$CLJS.KM,aN($CLJS.V),$CLJS.TM,aN(sia),$CLJS.TM,aN($CLJS.Uj),$CLJS.KM,$CLJS.PM,$CLJS.KM]);qla=new $CLJS.R(null,1,5,$CLJS.S,[pla],null);rla=$CLJS.Tf([aN(Bka),$CLJS.TM,$CLJS.PM,$CLJS.KM]);sla=$CLJS.fM($CLJS.Tf([aN(tP),$CLJS.XM,aN(MN),$CLJS.XM,$CLJS.PM,$CLJS.KM]),function(a){var b=$CLJS.Uf(a);a=$CLJS.M.h(b,tP);b=$CLJS.M.h(b,MN);return $CLJS.Fb($CLJS.m(a)?b:a)?!0:a>=b},"max-results-bare-rows must be less or equal to than max-results");
tla=$CLJS.Tf([aN(fka),$CLJS.MM,aN(nia),$CLJS.MM,aN(Vha),$CLJS.MM,aN(uia),$CLJS.MM,aN(Yja),$CLJS.jN($CLJS.MM),aN(Yha),$CLJS.jN($CLJS.MM),aN(mka),$CLJS.jN($CLJS.MM),$CLJS.PM,$CLJS.KM]);ula=cN.l($CLJS.J([Ija,Fja,$CLJS.AO,uja,Lja,fja,iia,oia,Bia,Qia,Uja,Lka,Uia,Mia]));
vla=$CLJS.Yh([aN(Cka),aN(Wia),aN($CLJS.BO),aN(aja),aN(cka),aN(dja),aN(Wha),aN(zka),aN($CLJS.QQ),aN($CLJS.WN)],[$CLJS.jN($CLJS.TM),$CLJS.jN($CLJS.WM),$CLJS.jN(new $CLJS.R(null,1,5,$CLJS.S,[$CLJS.Tf([$CLJS.KM,$CLJS.KM])],null)),$CLJS.jN($CLJS.WM),$CLJS.jN($CLJS.WM),$CLJS.jN($CLJS.WM),$CLJS.jN($CLJS.KM),$CLJS.jN($CLJS.Tf([$CLJS.KM,$CLJS.KM])),$CLJS.jN($CLJS.WM),$CLJS.jN(ula)]);wla=$CLJS.SM($CLJS.J([$CLJS.$L(-1337),$CLJS.WM]));
$CLJS.rU=$CLJS.fM($CLJS.fM($CLJS.fM($CLJS.Yh([$CLJS.PM,aN($CLJS.fQ),aN($CLJS.AQ),aN($CLJS.RD),aN(sja),aN(hja),$CLJS.al,aN($CLJS.GN),$CLJS.YP,aN($CLJS.YN)],[$CLJS.KM,gU,$CLJS.jN(rla),$CLJS.jN(vla),$CLJS.jN(sla),$CLJS.jN(tla),cN.l($CLJS.J([$CLJS.GN,$CLJS.fQ])),$CLJS.hU,wla,qla]),$CLJS.Sm.h($CLJS.Tm.h($CLJS.fQ,$CLJS.GN),$CLJS.dg($CLJS.Sm.h($CLJS.fQ,$CLJS.GN))),"Query must specify either `:native` or `:query`, but not both."),function(a){var b=$CLJS.Uf(a);a=$CLJS.M.h(b,$CLJS.fQ);var c=$CLJS.M.h(b,$CLJS.GN);
b=$CLJS.M.h(b,$CLJS.al);b=b instanceof $CLJS.N?b.N:null;switch(b){case "native":return a;case "query":return c;default:throw Error(["No matching clause: ",$CLJS.p.g(b)].join(""));}},"Native queries must specify `:native`; MBQL queries must specify `:query`."),$CLJS.dg($CLJS.$O),"`:source-metadata` should be added in the same level as `:source-query` (i.e., the 'inner' MBQL query.)");
(function(a){var b=$CLJS.kN(a);return function(c){var d=b(c);if($CLJS.m(d))throw $CLJS.Ej($CLJS.dL("Value does not match schema: %s",$CLJS.J([$CLJS.gj.l($CLJS.J([d]))])),new $CLJS.k(null,4,[$CLJS.al,$CLJS.xha,$CLJS.hm,a,$CLJS.vl,c,$CLJS.Nu,d],null));return c}})($CLJS.rU);