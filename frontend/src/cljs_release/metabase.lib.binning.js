var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");require("./metabase.lib.dispatch.js");require("./metabase.lib.hierarchy.js");require("./metabase.lib.metadata.calculation.js");require("./metabase.lib.schema.js");require("./metabase.lib.schema.binning.js");require("./metabase.shared.formatting.numbers.js");require("./metabase.shared.util.i18n.js");require("./metabase.util.malli.js");
'use strict';var N4,O4;N4=function(){return new $CLJS.k(null,3,[$CLJS.YH,$CLJS.bH("Auto bin"),$CLJS.Uj,!0,$CLJS.i4,new $CLJS.k(null,1,[$CLJS.dK,$CLJS.Uj],null)],null)};O4=function(a){return $CLJS.U.j(a,$CLJS.wl,$CLJS.j4)};
$CLJS.P4=function(a,b){var c=$CLJS.Uf(a);a=$CLJS.M.h(c,$CLJS.aK);var d=$CLJS.M.h(c,$CLJS.IH),e=$CLJS.M.h(c,$CLJS.dK);if($CLJS.m(c))switch(c=e instanceof $CLJS.N?e.N:null,c){case "num-bins":return $CLJS.zZ("{0} bin","{0} bins",d);case "bin-width":return[$CLJS.p.g($CLJS.G4(a,$CLJS.P)),$CLJS.XG($CLJS.Pl.g(b),$CLJS.ql)?"Â°":null].join("");case "default":return $CLJS.bH("Auto binned");default:throw Error(["No matching clause: ",$CLJS.p.g(c)].join(""));}else return null};
$CLJS.Q4=new $CLJS.N("metabase.lib.binning","binning","metabase.lib.binning/binning",-2037319392);var Vra,Wra,Xra,Yra,Zra;$CLJS.R4=function(){var a=$CLJS.ij.g($CLJS.P),b=$CLJS.ij.g($CLJS.P),c=$CLJS.ij.g($CLJS.P),d=$CLJS.ij.g($CLJS.P),e=$CLJS.M.j(new $CLJS.k(null,1,[$CLJS.Vk,$CLJS.MG],null),$CLJS.Vk,$CLJS.rj.A?$CLJS.rj.A():$CLJS.rj.call(null));return new $CLJS.Aj($CLJS.$i.h("metabase.lib.binning","with-binning-method"),function(f){return $CLJS.LG(f)},$CLJS.Uj,e,a,b,c,d)}();Vra=$CLJS.ij.g($CLJS.P);Wra=$CLJS.ij.g($CLJS.P);Xra=$CLJS.ij.g($CLJS.P);Yra=$CLJS.ij.g($CLJS.P);
Zra=$CLJS.M.j(new $CLJS.k(null,1,[$CLJS.Vk,$CLJS.MG],null),$CLJS.Vk,$CLJS.rj.A?$CLJS.rj.A():$CLJS.rj.call(null));$CLJS.S4=new $CLJS.Aj($CLJS.$i.h("metabase.lib.binning","binning-method"),$CLJS.LG,$CLJS.Uj,Zra,Vra,Wra,Xra,Yra);$CLJS.S4.o(null,$CLJS.Uj,function(){return null});
$CLJS.T4=function(){var a=$CLJS.ij.g($CLJS.P),b=$CLJS.ij.g($CLJS.P),c=$CLJS.ij.g($CLJS.P),d=$CLJS.ij.g($CLJS.P),e=$CLJS.M.j(new $CLJS.k(null,1,[$CLJS.Vk,$CLJS.MG],null),$CLJS.Vk,$CLJS.rj.A?$CLJS.rj.A():$CLJS.rj.call(null));return new $CLJS.Aj($CLJS.$i.h("metabase.lib.binning","available-binning-strategies-method"),function(f,g,l){return $CLJS.LG(l)},$CLJS.Uj,e,a,b,c,d)}();$CLJS.T4.o(null,$CLJS.Uj,function(){return null});
$CLJS.$ra=new $CLJS.dj(function(){return $CLJS.Vm.h(O4,new $CLJS.R(null,4,5,$CLJS.S,[N4(),new $CLJS.k(null,2,[$CLJS.YH,$CLJS.bH("10 bins"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.IH,$CLJS.IH,10],null)],null),new $CLJS.k(null,2,[$CLJS.YH,$CLJS.bH("50 bins"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.IH,$CLJS.IH,50],null)],null),new $CLJS.k(null,2,[$CLJS.YH,$CLJS.bH("100 bins"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.IH,$CLJS.IH,100],null)],null)],null))});
$CLJS.asa=new $CLJS.dj(function(){return $CLJS.Vm.h(O4,new $CLJS.R(null,5,5,$CLJS.S,[N4(),new $CLJS.k(null,2,[$CLJS.YH,$CLJS.bH("Bin every 0.1 degrees"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.aK,$CLJS.aK,.1],null)],null),new $CLJS.k(null,2,[$CLJS.YH,$CLJS.bH("Bin every 1 degree"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.aK,$CLJS.aK,1],null)],null),new $CLJS.k(null,2,[$CLJS.YH,$CLJS.bH("Bin every 10 degrees"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.aK,$CLJS.aK,10],null)],null),new $CLJS.k(null,
2,[$CLJS.YH,$CLJS.bH("Bin every 20 degrees"),$CLJS.i4,new $CLJS.k(null,2,[$CLJS.dK,$CLJS.aK,$CLJS.aK,20],null)],null)],null))});$CLJS.a1.o(null,$CLJS.j4,function(a,b,c){return $CLJS.ri(c,new $CLJS.R(null,3,5,$CLJS.S,[$CLJS.YH,$CLJS.Uj,$CLJS.H0],null))});$CLJS.a1.o(null,$CLJS.Q4,function(a,b,c){var d=$CLJS.V_.g(c);a=d.h?d.h(a,b):d.call(null,a,b);return $CLJS.mn.l($CLJS.J([new $CLJS.k(null,1,[$CLJS.YH,$CLJS.P4(c,a)],null),$CLJS.F.h($CLJS.Uj,$CLJS.dK.g(c))?new $CLJS.k(null,1,[$CLJS.Uj,!0],null):null]))});