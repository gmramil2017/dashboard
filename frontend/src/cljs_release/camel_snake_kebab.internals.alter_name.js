var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");
'use strict';$CLJS.bz=function(a,b){if(null!=a&&null!=a.If)a=a.If(a,b);else{var c=$CLJS.bz[$CLJS.Na(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=$CLJS.bz._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $CLJS.Ob("AlterName.alter-name",a);}return a};$CLJS.bz.string=function(a,b){return b.g?b.g(a):b.call(null,a)};$CLJS.N.prototype.If=function(a,b){if($CLJS.m($CLJS.sf(this)))throw $CLJS.Ej("Namespaced keywords are not supported",new $CLJS.k(null,1,[$CLJS.tk,this],null));a=$CLJS.Ui.g;var c=$CLJS.Ai(this);b=b.g?b.g(c):b.call(null,c);return a.call($CLJS.Ui,b)};
$CLJS.w.prototype.If=function(a,b){if($CLJS.m($CLJS.sf(this)))throw $CLJS.Ej("Namespaced symbols are not supported",new $CLJS.k(null,1,[$CLJS.tk,this],null));a=$CLJS.$i.g;var c=$CLJS.Ai(this);b=b.g?b.g(c):b.call(null,c);return a.call($CLJS.$i,b)};