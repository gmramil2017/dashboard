["^ ","~:output",["^ ","~:js","goog.provide('clojure.test.check.random.longs');\ngoog.scope(function(){\n  clojure.test.check.random.longs.goog$module$goog$math$Long = goog.module.get('goog.math.Long');\n});\nclojure.test.check.random.longs.unsigned_bit_shift_right = (function clojure$test$check$random$longs$unsigned_bit_shift_right(x,n){\nreturn x.shiftRightUnsigned(n);\n});\nclojure.test.check.random.longs._PLUS_ = (function clojure$test$check$random$longs$_PLUS_(x,y){\nreturn x.add(y);\n});\nclojure.test.check.random.longs._STAR_ = (function clojure$test$check$random$longs$_STAR_(x,y){\nvar a48 = (x.high_ >>> (16));\nvar a32 = (x.high_ & (65535));\nvar a16 = (x.low_ >>> (16));\nvar a00 = (x.low_ & (65535));\nvar b48 = (y.high_ >>> (16));\nvar b32 = (y.high_ & (65535));\nvar b16 = (y.low_ >>> (16));\nvar b00 = (y.low_ & (65535));\nvar arr = [(0),(0),(0),(0)];\n(arr[(0)] = (a00 * b00));\n\n(arr[(1)] = ((arr[(0)]) >>> (16)));\n\n(arr[(0)] = ((arr[(0)]) & (65535)));\n\n(arr[(1)] = ((arr[(1)]) + (a16 * b00)));\n\n(arr[(2)] = ((arr[(1)]) >>> (16)));\n\n(arr[(1)] = ((arr[(1)]) & (65535)));\n\n(arr[(1)] = ((arr[(1)]) + (a00 * b16)));\n\n(arr[(2)] = ((arr[(2)]) + ((arr[(1)]) >>> (16))));\n\n(arr[(1)] = ((arr[(1)]) & (65535)));\n\n(arr[(2)] = ((arr[(2)]) + (a32 * b00)));\n\n(arr[(3)] = ((arr[(2)]) >>> (16)));\n\n(arr[(2)] = ((arr[(2)]) & (65535)));\n\n(arr[(2)] = ((arr[(2)]) + (a16 * b16)));\n\n(arr[(3)] = ((arr[(3)]) + ((arr[(2)]) >>> (16))));\n\n(arr[(2)] = ((arr[(2)]) & (65535)));\n\n(arr[(2)] = ((arr[(2)]) + (a00 * b32)));\n\n(arr[(3)] = ((arr[(3)]) + ((arr[(2)]) >>> (16))));\n\n(arr[(2)] = ((arr[(2)]) & (65535)));\n\n(arr[(3)] = (((((arr[(3)]) + (a48 * b00)) + (a32 * b16)) + (a16 * b32)) + (a00 * b48)));\n\n(arr[(3)] = ((arr[(3)]) & (65535)));\n\nreturn clojure.test.check.random.longs.goog$module$goog$math$Long.fromBits((((arr[(1)]) << (16)) | (arr[(0)])),(((arr[(3)]) << (16)) | (arr[(2)])));\n});\nclojure.test.check.random.longs.bit_xor = (function clojure$test$check$random$longs$bit_xor(x,y){\nreturn x.xor(y);\n});\nclojure.test.check.random.longs.bit_or = (function clojure$test$check$random$longs$bit_or(x,y){\nreturn x.or(y);\n});\nclojure.test.check.random.longs.from_string = (function clojure$test$check$random$longs$from_string(s,radix){\nreturn clojure.test.check.random.longs.goog$module$goog$math$Long.fromString(s,radix);\n});\nclojure.test.check.random.longs.from_number = (function clojure$test$check$random$longs$from_number(x){\nreturn clojure.test.check.random.longs.goog$module$goog$math$Long.fromNumber(x);\n});\n/**\n * Coerces to long, or returns nil if not possible.\n */\nclojure.test.check.random.longs.__GT_long = (function clojure$test$check$random$longs$__GT_long(x){\nif(typeof x === 'number'){\nreturn clojure.test.check.random.longs.goog$module$goog$math$Long.fromNumber(x);\n} else {\nif((x instanceof clojure.test.check.random.longs.goog$module$goog$math$Long)){\nreturn x;\n} else {\nreturn null;\n}\n}\n});\nclojure.test.check.random.longs.ONE = clojure.test.check.random.longs.goog$module$goog$math$Long.getOne();\nclojure.test.check.random.longs.bit_count = clojure.test.check.random.longs.bit_count_impl.bit_count;\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/random/longs.cljs","~:line",12,"~:column",2,"~:end-line",12,"~:end-column",33,"~:author","Gary Fredericks","~:doc","Internal namespace, wrapping some goog.math.Long functionality."],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",["~$bit-count","~$bit-xor","~$unsigned-bit-shift-right","~$*","~$bit-or","~$+"]],"~:name","~$clojure.test.check.random.longs","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.test.check.random.longs.bit-count-impl","^X","^M","^X","~$goog.math.Long","^Y","~$long","^Y","^D","^E","~$core","^E","^E","^E","~$goog","^10"],"~:seen",["^L",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^E","^E","^D","^E","^[","^E"],"~:form",["~#list",["~$ns","^R",["^16",["~:refer-clojure","~:exclude",["~$+","~$*","^N","^P","^M","^O"]]],["^16",["^12",["^X","~:as","^M"],["^Y","^1:","^Z"],["^D","^1:","^["]]]]],"~:flags",["^ ","^12",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^10","^E","^X","^Y","^E"]],"^U","^R","~:resource-id",["~:shadow.build.classpath/resource","clojure/test/check/random/longs.cljs"],"~:compiled-at",1692014589877,"^S",["^ ","^X","^X","^M","^X","^Y","^Y","^Z","^Y","^D","^E","^[","^E","^E","^E","^10","^10"],"~:resource-name","clojure/test/check/random/longs.cljs","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey, Reid Draper, and contributors.\n;   All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns ^{:author \"Gary Fredericks\"\n      :doc \"Internal namespace, wrapping some goog.math.Long functionality.\"}\n clojure.test.check.random.longs\n  (:refer-clojure :exclude [+ * bit-xor bit-or bit-count\n                            unsigned-bit-shift-right])\n  (:require [clojure.test.check.random.longs.bit-count-impl :as bit-count]\n            [goog.math.Long :as long]\n            [clojure.core :as core]))\n\n(defn unsigned-bit-shift-right\n  [x n]\n  (.shiftRightUnsigned x n))\n\n(defn +\n  [x y]\n  (.add x y))\n\n(defn *\n  [x y]\n  (let [a48 (bit-shift-right-zero-fill (.-high_ x) 16)\n        a32 (bit-and (.-high_ x) 0xFFFF)\n        a16 (bit-shift-right-zero-fill (.-low_ x) 16)\n        a00 (bit-and (.-low_ x) 0xFFFF)\n\n        b48 (bit-shift-right-zero-fill (.-high_ y) 16)\n        b32 (bit-and (.-high_ y) 0xFFFF)\n        b16 (bit-shift-right-zero-fill (.-low_ y) 16)\n        b00 (bit-and (.-low_ y) 0xFFFF)\n\n        arr (array 0 0 0 0)]                              ;[c00 c16 c32 c48]\n    (aset arr 0 (core/* a00 b00))                                                  ;c00 += a00 * b00;\n    (aset arr 1 (bit-shift-right-zero-fill (aget arr 0) 16))                       ;c16 += c00 >>> 16\n    (aset arr 0 (bit-and (aget arr 0) 0xFFFF))                                     ;c00 &= 0xFFFF;\n    (aset arr 1 (core/+ (aget arr 1) (core/* a16 b00)))                            ;c16 += a16 * b00;\n    (aset arr 2 (bit-shift-right-zero-fill (aget arr 1) 16))                       ;c32 += c16 >>> 16;\n    (aset arr 1 (bit-and (aget arr 1) 0xFFFF))                                     ;c16 &= 0xFFFF;\n    (aset arr 1 (core/+ (aget arr 1) (core/* a00 b16)))                            ;c16 += a00 * b16;\n    (aset arr 2 (core/+ (aget arr 2) (bit-shift-right-zero-fill (aget arr 1) 16))) ;c32 += c16 >>> 16;\n    (aset arr 1 (bit-and (aget arr 1) 0xFFFF))                                     ;c16 &= 0xFFFF;\n    (aset arr 2 (core/+ (aget arr 2) (core/* a32 b00)))                            ;c32 += a32 * b00;\n    (aset arr 3 (bit-shift-right-zero-fill (aget arr 2) 16))                       ;c48 += c32 >>> 16;\n    (aset arr 2 (bit-and (aget arr 2) 0xFFFF))                                     ;c32 &= 0xFFFF;\n    (aset arr 2 (core/+ (aget arr 2) (core/* a16 b16)))                            ;c32 += a16 * b16;\n    (aset arr 3 (core/+ (aget arr 3) (bit-shift-right-zero-fill (aget arr 2) 16))) ;c48 += c32 >>> 16;\n    (aset arr 2 (bit-and (aget arr 2) 0xFFFF))                                     ;c32 &= 0xFFFF;\n    (aset arr 2 (core/+ (aget arr 2) (core/* a00 b32)))                            ;c32 += a00 * b32;\n    (aset arr 3 (core/+ (aget arr 3) (bit-shift-right-zero-fill (aget arr 2) 16))) ;c48 += c32 >>> 16;\n    (aset arr 2 (bit-and (aget arr 2) 0xFFFF))                                     ;c32 &= 0xFFFF;\n\n    (aset arr 3 (core/+ (aget arr 3) (core/* a48 b00) (core/* a32 b16) (core/* a16 b32) (core/* a00 b48)))\n    ;c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    (aset arr 3 (bit-and (aget arr 3) 0xFFFF))                                    ;c48 &= 0xFFFF;\n\n    ;(c16 << 16) | c00, (c48 << 16) | c32\n    (long/fromBits (core/bit-or (bit-shift-left (aget arr 1) 16) (aget arr 0))\n                   (core/bit-or (bit-shift-left (aget arr 3) 16) (aget arr 2)))))\n\n(defn bit-xor\n  [x y]\n  (.xor x y))\n\n(defn bit-or\n  [x y]\n  (.or x y))\n\n(defn from-string\n  [s radix]\n  (long/fromString s radix))\n\n(defn from-number\n  [x]\n  (long/fromNumber x))\n\n(defn ->long\n  \"Coerces to long, or returns nil if not possible.\"\n  [x]\n  (cond (number? x)\n        (long/fromNumber x)\n\n        (instance? goog.math.Long x)\n        x))\n\n(def ONE (long/getOne))\n\n(def bit-count bit-count/bit-count)\n","~:reader-features",["^L",["~:cljs-release","~:cljs-dev","~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;AAkBA,2DAAA,3DAAMA,8HACHC,EAAEC;AADL,AAEE,OAAqBD,qBAAEC;;AAEzB,yCAAA,zCAAMC,0FACHF,EAAEG;AADL,AAEE,OAAMH,MAAEG;;AAEV,yCAAA,zCAAMC,0FACHJ,EAAEG;AADL,AAEE,IAAME,MAAI,aAAA,ZAA2B,AAASL;IACxCM,MAAI,WAAA,VAAS,AAASN;IACtBO,MAAI,YAAA,XAA2B,AAAQP;IACvCQ,MAAI,UAAA,TAAS,AAAQR;IAErBS,MAAI,aAAA,ZAA2B,AAASN;IACxCO,MAAI,WAAA,VAAS,AAASP;IACtBQ,MAAI,YAAA,XAA2B,AAAQR;IACvCS,MAAI,UAAA,TAAS,AAAQT;IAErBU,MAAI,CAAA,IAAA,IAAA,IAAA;AAVV,AAWE,KAAA,JAAMA,WAAM,CAAQL,MAAII;;AACxB,KAAA,JAAMC,WAAM,gBAAA,fAA2B,KAAA,JAAMA;;AAC7C,KAAA,JAAMA,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAC3B,KAAA,JAAMA,WAAM,CAAQ,KAAA,JAAMA,YAAO,CAAQN,MAAIK;;AAC7C,KAAA,JAAMC,WAAM,gBAAA,fAA2B,KAAA,JAAMA;;AAC7C,KAAA,JAAMA,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAC3B,KAAA,JAAMA,WAAM,CAAQ,KAAA,JAAMA,YAAO,CAAQL,MAAIG;;AAC7C,KAAA,JAAME,WAAM,CAAQ,KAAA,JAAMA,YAAO,gBAAA,fAA2B,KAAA,JAAMA;;AAClE,KAAA,JAAMA,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAC3B,KAAA,JAAMA,WAAM,CAAQ,KAAA,JAAMA,YAAO,CAAQP,MAAIM;;AAC7C,KAAA,JAAMC,WAAM,gBAAA,fAA2B,KAAA,JAAMA;;AAC7C,KAAA,JAAMA,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAC3B,KAAA,JAAMA,WAAM,CAAQ,KAAA,JAAMA,YAAO,CAAQN,MAAII;;AAC7C,KAAA,JAAME,WAAM,CAAQ,KAAA,JAAMA,YAAO,gBAAA,fAA2B,KAAA,JAAMA;;AAClE,KAAA,JAAMA,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAC3B,KAAA,JAAMA,WAAM,CAAQ,KAAA,JAAMA,YAAO,CAAQL,MAAIE;;AAC7C,KAAA,JAAMG,WAAM,CAAQ,KAAA,JAAMA,YAAO,gBAAA,fAA2B,KAAA,JAAMA;;AAClE,KAAA,JAAMA,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAE3B,KAAA,JAAMA,WAAM,CAAA,CAAA,CAAA,CAAQ,KAAA,JAAMA,YAAO,CAAQR,MAAIO,QAAK,CAAQN,MAAIK,QAAK,CAAQJ,MAAIG,QAAK,CAAQF,MAAIC;;AAEhG,KAAA,JAAMI,WAAM,cAAA,bAAS,KAAA,JAAMA;;AAG3B,OAACC,oEAAc,CAAa,eAAA,dAAgB,KAAA,JAAMD,qBAAW,KAAA,JAAMA,WACpD,CAAa,eAAA,dAAgB,KAAA,JAAMA,qBAAW,KAAA,JAAMA;;AAEvE,0CAAA,1CAAME,4FACHf,EAAEG;AADL,AAEE,OAAMH,MAAEG;;AAEV,yCAAA,zCAAMa,0FACHhB,EAAEG;AADL,AAEE,OAAKH,KAAEG;;AAET,8CAAA,9CAAMc,oGACHC,EAAEC;AADL,AAEE,OAACC,sEAAgBF,EAAEC;;AAErB,8CAAA,9CAAME,oGACHrB;AADH,AAEE,OAACsB,sEAAgBtB;;AAEnB;;;4CAAA,5CAAMuB,gGAEHvB;AAFH,AAGE,GAAM,OAASA;AACT,OAACsB,sEAAgBtB;;AADvB,GAGM,cAAWwB,bAAexB;AAC1BA;;AAJN;;;;AAMF,AAAKyB,sCAAI,AAACC;AAEV,AAAKC,4CAAUC","names",["clojure.test.check.random.longs/unsigned-bit-shift-right","x","n","clojure.test.check.random.longs/+","y","clojure.test.check.random.longs/*","a48","a32","a16","a00","b48","b32","b16","b00","arr","clojure.test.check.random.longs.goog$module$goog$math$Long.fromBits","clojure.test.check.random.longs/bit-xor","clojure.test.check.random.longs/bit-or","clojure.test.check.random.longs/from-string","s","radix","clojure.test.check.random.longs.goog$module$goog$math$Long.fromString","clojure.test.check.random.longs/from-number","clojure.test.check.random.longs.goog$module$goog$math$Long.fromNumber","clojure.test.check.random.longs/->long","clojure.test.check.random.longs.goog$module$goog$math$Long","clojure.test.check.random.longs/ONE","clojure.test.check.random.longs.goog$module$goog$math$Long.getOne","clojure.test.check.random.longs/bit-count","clojure.test.check.random.longs.bit-count-impl/bit-count"]],"~:used-vars",["^L",["~$clojure.test.check.random.longs/bit-xor","~$clojure.test.check.random.longs/unsigned-bit-shift-right","~$clojure.test.check.random.longs.goog$module$goog$math$Long.fromString","~$clojure.test.check.random.longs.goog$module$goog$math$Long","~$clojure.test.check.random.longs/+","~$clojure.test.check.random.longs/from-string","~$clojure.test.check.random.longs/bit-count","~$clojure.test.check.random.longs/bit-or","~$clojure.test.check.random.longs.goog$module$goog$math$Long.getOne","~$clojure.test.check.random.longs/*","~$clojure.test.check.random.longs/->long","~$clojure.test.check.random.longs.bit-count-impl/bit-count","~$clojure.test.check.random.longs/from-number","~$clojure.test.check.random.longs.goog$module$goog$math$Long.fromBits","~$clojure.test.check.random.longs/ONE","~$clojure.test.check.random.longs.goog$module$goog$math$Long.fromNumber"]]],"~:cache-keys",["~#cmap",[["^1?","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1?","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1?","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2;"]]],["^1?","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:"]]],["^1?","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^28","^2;"]]],["^1?","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^1?","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","~$goog.reflect"]]],["^1?","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","~$goog.fs.blob","^2>","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2@","^2A"]]],["^1?","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2@","~$goog.html.SafeUrl","^2A","^2:","^2;"]]],["^1?","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2E","~$goog.html.SafeStyle","^2G","^2?","~$goog.html.uncheckedconversions","^2@","^2;"]]],["^1?","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","~$goog.dom.TagName","^2:","~$goog.dom.element"]]],["^1?","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2@","^2E","^2L","~$goog.html.SafeStyleSheet","^2G","^2N","^2?","^2A","^2:","~$goog.labs.userAgent.browser","~$goog.array","~$goog.object","^2;","~$goog.dom.tags","^2F"]]],["^1?","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2S"]]],["^1?","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1?","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2R","^2:","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1?","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^29"]]],["^1?","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",[]]],["^1?","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2R","^2S"]]],["^1?","clojure/test/check/random/longs/bit_count_impl.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^E"]]],["^1?","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","~$goog.dom.safe","^2M","^2@","^2;"]]],["^1?","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2;","^2="]]],["^1?","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","~$goog.flags"]]],["^1?","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2V","^2N"]]],["^1?","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","^2K","^2E","^2L","^2P","^2G","^2?","^2@","^2;"]]],["^1?","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10"]]],["^1?","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^Y","~$goog.math.Integer","^2X","^2S","^2R","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1?","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2@","^2A","^2F","^2:"]]],["^1?","clojure/test/check/random/longs.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^E","^X","^Y","^E"]]],["^1?","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2@","^2L","^2A","^2S","^2:","^2;"]]],["^1?","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2C"]]],["^1?","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","^2X"]]],["^1?","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^23",["^ ","^24",null,"^25",["^L",[]],"^26",["^10","^2:","^2A"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1689947054000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",12,"^8",2,"^9",12,"^:",33,"^;","Gary Fredericks","^<","Internal namespace, wrapping some goog.math.Long functionality."],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",null,"^K",["^L",["^M","^N","^O","~$*","^P","~$+"]],"^Q","^R","^S",["^ "],"^V",null,"^W",["^ ","^X","^X","^M","^X","^Y","^Y","^Z","^Y","^D","^E","^[","^E","^E","^E","^10","^10"],"^11",["^L",["^12"]],"^13",null,"~:defs",["^ ","~$from-number",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",79,"^8",7,"^9",79,"^:",18,"~:arglists",["^16",["~$quote",["^16",[["~$x"]]]]]],"^Q","^1Y","^6","clojure/test/check/random/longs.cljs","^:",18,"~:method-params",["^16",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^8",1,"~:variadic?",false,"^7",79,"~:ret-tag","~$js","^9",79,"~:max-fixed-arity",1,"~:fn-var",true,"^3Y",["^16",["^3Z",["^16",[["~$x"]]]]]],"^M",["^ ","^Q","^1S","^6","clojure/test/check/random/longs.cljs","^7",94,"^8",1,"^9",94,"^:",15,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",94,"^8",6,"^9",94,"^:",15]],"^N",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",67,"^8",7,"^9",67,"^:",14,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"^Q","^1M","^6","clojure/test/check/random/longs.cljs","^:",14,"^3[",["^16",[["~$x","~$y"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",67,"^43","~$any","^9",67,"^45",2,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"^O",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",19,"^8",7,"^9",19,"^:",31,"^3Y",["^16",["^3Z",["^16",[["~$x","~$n"]]]]]],"^Q","^1N","^6","clojure/test/check/random/longs.cljs","^:",31,"^3[",["^16",[["~$x","~$n"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",19,"^43","^47","^9",19,"^45",2,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$x","~$n"]]]]]],"~$*",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",27,"^8",7,"^9",27,"^:",8,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"^Q","^1V","^6","clojure/test/check/random/longs.cljs","^:",8,"^3[",["^16",[["~$x","~$y"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",27,"^43","^44","^9",27,"^45",2,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"~$from-string",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",75,"^8",7,"^9",75,"^:",18,"^3Y",["^16",["^3Z",["^16",[["~$s","~$radix"]]]]]],"^Q","^1R","^6","clojure/test/check/random/longs.cljs","^:",18,"^3[",["^16",[["~$s","^49"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",75,"^43","^44","^9",75,"^45",2,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$s","^49"]]]]]],"~$->long",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",83,"^8",7,"^9",83,"^:",13,"^3Y",["^16",["^3Z",["^16",[["~$x"]]]]],"^<","Coerces to long, or returns nil if not possible."],"^Q","^1W","^6","clojure/test/check/random/longs.cljs","^:",13,"^3[",["^16",[["~$x"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",83,"^43",["^L",[null,"^44","~$clj-nil"]],"^9",83,"^45",1,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$x"]]]]],"^<","Coerces to long, or returns nil if not possible."],"^P",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",71,"^8",7,"^9",71,"^:",13,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"^Q","^1T","^6","clojure/test/check/random/longs.cljs","^:",13,"^3[",["^16",[["~$x","~$y"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",71,"^43","^47","^9",71,"^45",2,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"~$ONE",["^ ","^Q","^1[","^6","clojure/test/check/random/longs.cljs","^7",92,"^8",1,"^9",92,"^:",9,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",92,"^8",6,"^9",92,"^:",9],"~:tag","^44"],"~$+",["^ ","^3X",null,"^5",["^ ","^6","clojure/test/check/random/longs.cljs","^7",23,"^8",7,"^9",23,"^:",8,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]],"^Q","^1Q","^6","clojure/test/check/random/longs.cljs","^:",8,"^3[",["^16",[["~$x","~$y"]]],"^40",null,"^41",["^16",[null,null]],"^8",1,"^42",false,"^7",23,"^43","^47","^9",23,"^45",2,"^46",true,"^3Y",["^16",["^3Z",["^16",[["~$x","~$y"]]]]]]],"^14",["^ ","^E","^E","^D","^E","^[","^E"],"^1;",["^ ","^12",["^L",[]]],"^1<",["^ "],"^1=",["^10","^E","^X","^Y","^E"]],"^U","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^22",[["^4@","~:static-fns"],true,["^4@","~:shadow-tweaks"],null,["^4@","~:source-map-inline"],null,["^4@","~:elide-asserts"],false,["^4@","~:optimize-constants"],null,["^4@","^1B"],null,["^4@","~:external-config"],null,["^4@","~:tooling-config"],null,["^4@","~:emit-constants"],null,["^4@","~:load-tests"],null,["^4@","~:form-size-threshold"],null,["^4@","~:global-goog-object&array"],null,["^4@","~:data-readers"],null,["^4@","~:infer-externs"],"~:auto",["^4@","^1D"],["^L",["^1E","^1F"]],["~:js-options","~:js-provider"],"^12",["~:mode"],"~:dev",["^4@","~:fn-invoke-direct"],null,["^4@","~:source-map"],"/dev/null"]]]