["^ ","~:output",["^ ","~:js","goog.provide('lambdaisland.glogi');\ngoog.scope(function(){\n  lambdaisland.glogi.goog$module$goog$array = goog.module.get('goog.array');\n  lambdaisland.glogi.goog$module$goog$object = goog.module.get('goog.object');\n});\nlambdaisland.glogi.Level = (((typeof goog !== 'undefined') && (typeof goog.log !== 'undefined') && (typeof goog.log.Level !== 'undefined'))?goog.log.Level:goog.debug.logger.Level);\nlambdaisland.glogi.goog_setLevel = (function lambdaisland$glogi$goog_setLevel(logger,level){\nif((typeof goog !== 'undefined') && (typeof goog.log !== 'undefined') && (typeof goog.log.setLevel !== 'undefined')){\nreturn goog.log.setLevel(logger,level);\n} else {\nreturn logger.setLevel(level);\n}\n});\nlambdaisland.glogi.goog_logRecord = (function lambdaisland$glogi$goog_logRecord(logger,record){\nif((typeof goog !== 'undefined') && (typeof goog.log !== 'undefined') && (typeof goog.log.publishLogRecord !== 'undefined')){\nreturn goog.log.publishLogRecord(logger,record);\n} else {\nreturn logger.logRecord(record);\n}\n});\nlambdaisland.glogi.goog_addHandler = (function lambdaisland$glogi$goog_addHandler(logger,handler){\nif((typeof goog !== 'undefined') && (typeof goog.log !== 'undefined') && (typeof goog.log.addHandler !== 'undefined')){\nreturn goog.log.addHandler(logger,handler);\n} else {\nreturn logger.addHandler(handler);\n}\n});\nlambdaisland.glogi.goog_removeHandler = (function lambdaisland$glogi$goog_removeHandler(logger,handler){\nif((typeof goog !== 'undefined') && (typeof goog.log !== 'undefined') && (typeof goog.log.removeHandler !== 'undefined')){\nreturn goog.log.removeHandler(logger,handler);\n} else {\nreturn logger.removeHandler(handler);\n}\n});\nlambdaisland.glogi.logger_handlers_prop = \"__glogi_handlers__\";\nlambdaisland.glogi.name_str = (function lambdaisland$glogi$name_str(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"glogi\",\"root\",\"glogi/root\",-77414841),x)){\nreturn \"\";\n} else {\nif(typeof x === 'string'){\nreturn x;\n} else {\nif(cljs.core.simple_ident_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.qualified_ident_QMARK_(x)){\nreturn [cljs.core.namespace(x),\"/\",cljs.core.name(x)].join('');\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);\n\n}\n}\n}\n}\n});\n/**\n * Get a logger by name, and optionally set its level. Name can be a string\n *   keyword, or symbol. The special keyword :glogi/root returns the root logger.\n */\nlambdaisland.glogi.logger = (function lambdaisland$glogi$logger(var_args){\nvar G__53064 = arguments.length;\nswitch (G__53064) {\ncase 1:\nreturn lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1 = (function (n){\nreturn goog.log.getLogger(lambdaisland.glogi.name_str(n),undefined);\n}));\n\n(lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$2 = (function (n,level){\nreturn goog.log.getLogger(lambdaisland.glogi.name_str(n),level);\n}));\n\n(lambdaisland.glogi.logger.cljs$lang$maxFixedArity = 2);\n\nlambdaisland.glogi.root_logger = lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1(\"\");\nlambdaisland.glogi.predefined_level = (function lambdaisland$glogi$predefined_level(name){\nif((typeof goog !== 'undefined') && (typeof goog.log !== 'undefined') && (typeof goog.log.Level !== 'undefined')){\nreturn goog.log.Level.getPredefinedLevel(name);\n} else {\nreturn null;\n}\n});\nlambdaisland.glogi.levels = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"shout\",\"shout\",186018337),new cljs.core.Keyword(null,\"finest\",\"finest\",-1359568890),new cljs.core.Keyword(null,\"config\",\"config\",994861415),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),new cljs.core.Keyword(null,\"all\",\"all\",892129742),new cljs.core.Keyword(null,\"warning\",\"warning\",-1685650671),new cljs.core.Keyword(null,\"severe\",\"severe\",-1364500238),new cljs.core.Keyword(null,\"off\",\"off\",606440789),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"fine\",\"fine\",-873037193),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"finer\",\"finer\",974902846)],[(function (){var or__5045__auto__ = lambdaisland.glogi.Level.SHOUT;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"SHOUT\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.FINEST;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"FINEST\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.CONFIG;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"CONFIG\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.WARNING;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"WARNING\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.FINER;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"FINER\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.FINE;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"FINE\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.ALL;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"ALL\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.WARNING;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"WARNING\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.SEVERE;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"SEVERE\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.OFF;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"OFF\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.INFO;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"INFO\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.FINE;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"FINE\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.SEVERE;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"SEVERE\");\n}\n})(),(function (){var or__5045__auto__ = lambdaisland.glogi.Level.FINER;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn lambdaisland.glogi.predefined_level(\"FINER\");\n}\n})()]);\nlambdaisland.glogi.level = (function lambdaisland$glogi$level(lvl){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(lambdaisland.glogi.levels,lvl);\n});\n/**\n * Get the numeric value of a log level (keyword).\n */\nlambdaisland.glogi.level_value = (function lambdaisland$glogi$level_value(lvl){\nreturn lambdaisland.glogi.level(lvl).value;\n});\nlambdaisland.glogi.make_log_record = (function lambdaisland$glogi$make_log_record(level,message,name,exception){\nvar LogRecord = (((typeof goog !== 'undefined') && (typeof goog.debug !== 'undefined') && (typeof goog.debug.LogRecord !== 'undefined'))?goog.debug.LogRecord:goog.log.LogRecord);\nvar record = (new LogRecord(level,message,name));\nif(cljs.core.truth_(exception)){\nrecord.setException(exception);\n} else {\n}\n\nreturn record;\n});\n/**\n * Output a log message to the given logger, optionally with an exception to be\n *   logged.\n */\nlambdaisland.glogi.log = (function lambdaisland$glogi$log(var_args){\nvar G__53101 = arguments.length;\nswitch (G__53101) {\ncase 3:\nreturn lambdaisland.glogi.log.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn lambdaisland.glogi.log.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(lambdaisland.glogi.log.cljs$core$IFn$_invoke$arity$3 = (function (name,lvl,message){\nreturn lambdaisland.glogi.log.cljs$core$IFn$_invoke$arity$4(name,lvl,message,null);\n}));\n\n(lambdaisland.glogi.log.cljs$core$IFn$_invoke$arity$4 = (function (name,lvl,message,exception){\nif(cljs.core.truth_(goog.log.ENABLED)){\nvar temp__5804__auto__ = lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar l = temp__5804__auto__;\nreturn lambdaisland.glogi.goog_logRecord(l,lambdaisland.glogi.make_log_record(lambdaisland.glogi.level(lvl),message,name,exception));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\n(lambdaisland.glogi.log.cljs$lang$maxFixedArity = 4);\n\n/**\n * Set the level (a keyword) of the given logger, identified by name, or :root for\n *   the root logger.\n */\nlambdaisland.glogi.set_level = (function lambdaisland$glogi$set_level(name,lvl){\nif(cljs.core.contains_QMARK_(lambdaisland.glogi.levels,lvl)){\n} else {\nthrow (new Error(\"Assert failed: (contains? levels lvl)\"));\n}\n\nvar G__53117 = lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1(name);\nif((G__53117 == null)){\nreturn null;\n} else {\nreturn lambdaisland.glogi.goog_setLevel(G__53117,lambdaisland.glogi.level(lvl));\n}\n});\n/**\n * Convenience function for setting several levels at one.\n * \n *   Takes a map of logger name => level keyword. The logger name can be a string,\n *   keyword, or symbol. The keyword :glogi/root refers to the root logger and is\n *   equivalent to using an empty string.\n * \n *   This function is exported so it is still available in optimized builds to set\n *   levels from the javascript console. In this case use nested arrays and\n *   strings. Use `:root` for the root logger.\n * \n *   ``` javascript\n *   lambdaisland.glogi.set_levels([[\"\" \"debug\"] [\"lambdaisland\" \"trace\"]])\n *   ```\n *   \n */\nlambdaisland.glogi.set_levels = (function lambdaisland$glogi$set_levels(lvls){\nvar seq__53122 = cljs.core.seq(lvls);\nvar chunk__53124 = null;\nvar count__53125 = (0);\nvar i__53126 = (0);\nwhile(true){\nif((i__53126 < count__53125)){\nvar vec__53144 = chunk__53124.cljs$core$IIndexed$_nth$arity$2(null,i__53126);\nvar logger = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53144,(0),null);\nvar level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53144,(1),null);\nvar level_53249__$1 = ((typeof level === 'string')?cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(level):level);\nlambdaisland.glogi.set_level(logger,level_53249__$1);\n\n\nvar G__53250 = seq__53122;\nvar G__53251 = chunk__53124;\nvar G__53252 = count__53125;\nvar G__53253 = (i__53126 + (1));\nseq__53122 = G__53250;\nchunk__53124 = G__53251;\ncount__53125 = G__53252;\ni__53126 = G__53253;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__53122);\nif(temp__5804__auto__){\nvar seq__53122__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__53122__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__53122__$1);\nvar G__53257 = cljs.core.chunk_rest(seq__53122__$1);\nvar G__53258 = c__5568__auto__;\nvar G__53259 = cljs.core.count(c__5568__auto__);\nvar G__53260 = (0);\nseq__53122 = G__53257;\nchunk__53124 = G__53258;\ncount__53125 = G__53259;\ni__53126 = G__53260;\ncontinue;\n} else {\nvar vec__53154 = cljs.core.first(seq__53122__$1);\nvar logger = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53154,(0),null);\nvar level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__53154,(1),null);\nvar level_53264__$1 = ((typeof level === 'string')?cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(level):level);\nlambdaisland.glogi.set_level(logger,level_53264__$1);\n\n\nvar G__53267 = cljs.core.next(seq__53122__$1);\nvar G__53268 = null;\nvar G__53269 = (0);\nvar G__53270 = (0);\nseq__53122 = G__53267;\nchunk__53124 = G__53268;\ncount__53125 = G__53269;\ni__53126 = G__53270;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Log to the browser console. This uses goog.debug.Console directly,\n *   use [lambdaisland.glogi.console/install!] for a version that plays nicely with\n *   cljs-devtools.\n */\nlambdaisland.glogi.enable_console_logging_BANG_ = (function lambdaisland$glogi$enable_console_logging_BANG_(){\nvar temp__5804__auto___53271 = goog.debug.Console.instance;\nif(cljs.core.truth_(temp__5804__auto___53271)){\nvar instance_53272 = temp__5804__auto___53271;\ninstance_53272.setCapturing(true);\n\nvar instance_53275__$1 = (new goog.debug.Console());\n(goog.debug.Console.instance = instance_53275__$1);\n\ninstance_53275__$1.setCapturing();\n} else {\n}\n\nreturn null;\n});\n/**\n * Log to the browser console if the browser location contains Debug=true.\n */\nlambdaisland.glogi.console_autoinstall_BANG_ = (function lambdaisland$glogi$console_autoinstall_BANG_(){\ngoog.debug.Console.autoInstall();\n\nreturn null;\n});\n/**\n * Pop up a browser window which will display log messages. Returns the FancyWindow instance.\n */\nlambdaisland.glogi.popup_logger_window_BANG_ = (function lambdaisland$glogi$popup_logger_window_BANG_(){\nvar G__53172 = (new goog.debug.FancyWindow());\nG__53172.setEnabled(true);\n\nreturn G__53172;\n});\n/**\n * Log messages to an element on the page. Returns the DivConsole instance.\n */\nlambdaisland.glogi.log_to_div_BANG_ = (function lambdaisland$glogi$log_to_div_BANG_(element){\nvar G__53178 = (new goog.debug.DivConsole(element));\nG__53178.setCapturing(true);\n\nreturn G__53178;\n});\nlambdaisland.glogi.logger_glogi_handlers = (function lambdaisland$glogi$logger_glogi_handlers(logger){\nreturn lambdaisland.glogi.goog$module$goog$object.get(logger,lambdaisland.glogi.logger_handlers_prop);\n});\nlambdaisland.glogi.swap_handlers_BANG_ = (function lambdaisland$glogi$swap_handlers_BANG_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___53276 = arguments.length;\nvar i__5770__auto___53277 = (0);\nwhile(true){\nif((i__5770__auto___53277 < len__5769__auto___53276)){\nargs__5775__auto__.push((arguments[i__5770__auto___53277]));\n\nvar G__53278 = (i__5770__auto___53277 + (1));\ni__5770__auto___53277 = G__53278;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn lambdaisland.glogi.swap_handlers_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(lambdaisland.glogi.swap_handlers_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (logger,f,args){\nreturn lambdaisland.glogi.goog$module$goog$object.set(logger,lambdaisland.glogi.logger_handlers_prop,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,lambdaisland.glogi.logger_glogi_handlers(logger),args));\n}));\n\n(lambdaisland.glogi.swap_handlers_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(lambdaisland.glogi.swap_handlers_BANG_.cljs$lang$applyTo = (function (seq53187){\nvar G__53188 = cljs.core.first(seq53187);\nvar seq53187__$1 = cljs.core.next(seq53187);\nvar G__53189 = cljs.core.first(seq53187__$1);\nvar seq53187__$2 = cljs.core.next(seq53187__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__53188,G__53189,seq53187__$2);\n}));\n\n/**\n * Add a log handler to the given logger, or to the root logger if no logger is\n *   specified. The handler is a function which receives a map as its argument.\n * \n *   A given handler-fn is only added to a given logger once, even when called\n *   repeatedly.\n */\nlambdaisland.glogi.add_handler = (function lambdaisland$glogi$add_handler(var_args){\nvar G__53201 = arguments.length;\nswitch (G__53201) {\ncase 1:\nreturn lambdaisland.glogi.add_handler.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn lambdaisland.glogi.add_handler.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(lambdaisland.glogi.add_handler.cljs$core$IFn$_invoke$arity$1 = (function (handler_fn){\nreturn lambdaisland.glogi.add_handler.cljs$core$IFn$_invoke$arity$2(\"\",handler_fn);\n}));\n\n(lambdaisland.glogi.add_handler.cljs$core$IFn$_invoke$arity$2 = (function (name,handler_fn){\nvar logger = lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1(name);\nvar log_record_handler = (function (record){\nvar G__53211 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"sequenceNumber\",\"sequenceNumber\",-543983615),record.sequenceNumber_,new cljs.core.Keyword(null,\"time\",\"time\",1385887882),record.time_,new cljs.core.Keyword(null,\"level\",\"level\",1290497552),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case(record.level_.name)),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),record.msg_,new cljs.core.Keyword(null,\"logger-name\",\"logger-name\",-1988126927),record.loggerName_,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),record.exception_], null);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$1 ? handler_fn.cljs$core$IFn$_invoke$arity$1(G__53211) : handler_fn.call(null,G__53211));\n});\nif(cljs.core.truth_(logger)){\nvar temp__5804__auto___53288 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lambdaisland.glogi.logger_glogi_handlers(logger),handler_fn);\nif(cljs.core.truth_(temp__5804__auto___53288)){\nvar handler_53289 = temp__5804__auto___53288;\nlambdaisland.glogi.goog_removeHandler(logger,handler_53289);\n} else {\n}\n\nlambdaisland.glogi.swap_handlers_BANG_.cljs$core$IFn$_invoke$arity$variadic(logger,cljs.core.assoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([handler_fn,log_record_handler], 0));\n\nvar G__53215 = logger;\nif((G__53215 == null)){\nreturn null;\n} else {\nreturn lambdaisland.glogi.goog_addHandler(G__53215,log_record_handler);\n}\n} else {\nreturn null;\n}\n}));\n\n(lambdaisland.glogi.add_handler.cljs$lang$maxFixedArity = 2);\n\nlambdaisland.glogi.remove_handler = (function lambdaisland$glogi$remove_handler(var_args){\nvar G__53221 = arguments.length;\nswitch (G__53221) {\ncase 1:\nreturn lambdaisland.glogi.remove_handler.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn lambdaisland.glogi.remove_handler.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(lambdaisland.glogi.remove_handler.cljs$core$IFn$_invoke$arity$1 = (function (handler_fn){\nreturn lambdaisland.glogi.remove_handler.cljs$core$IFn$_invoke$arity$2(\"\",handler_fn);\n}));\n\n(lambdaisland.glogi.remove_handler.cljs$core$IFn$_invoke$arity$2 = (function (name,handler_fn){\nvar logger = lambdaisland.glogi.logger.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.truth_(logger)){\nvar temp__5804__auto___53292 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lambdaisland.glogi.logger_glogi_handlers(logger),handler_fn);\nif(cljs.core.truth_(temp__5804__auto___53292)){\nvar handler_53293 = temp__5804__auto___53292;\nlambdaisland.glogi.goog_removeHandler(logger,handler_53293);\n} else {\n}\n\nreturn lambdaisland.glogi.swap_handlers_BANG_.cljs$core$IFn$_invoke$arity$variadic(logger,cljs.core.dissoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([handler_fn], 0));\n} else {\nreturn null;\n}\n}));\n\n(lambdaisland.glogi.remove_handler.cljs$lang$maxFixedArity = 2);\n\nlambdaisland.glogi.add_handler_once = lambdaisland.glogi.add_handler;\nlambdaisland.glogi.set_level(new cljs.core.Keyword(null,\"root\",\"root\",-448657453),new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","lambdaisland/glogi.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",23],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$finer",["^ ","~:arglists",["~#list",[["~$&","~$keyvals"]]],"^7",41,"^8",1,"^6","lambdaisland/glogi.clj","~:name","~$lambdaisland.glogi/finer","~:ns","~$lambdaisland.glogi","~:macro",true],"~$shout",["^ ","^M",["^N",[["~$&","^O"]]],"^7",14,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/shout","^R","^S","^T",true],"~$finest",["^ ","^M",["^N",[["~$&","^O"]]],"^7",44,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/finest","^R","^S","^T",true],"~$config",["^ ","^M",["^N",[["~$&","^O"]]],"^7",32,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/config","^R","^S","^T",true],"~$spy",["^ ","^M",["^N",[["~$form"],["^10","~$&","~$forms"]]],"^7",47,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/spy","^R","^S","^T",true],"~$warn",["^ ","^M",["^N",[["~$&","^O"]]],"^7",23,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/warn","^R","^S","^T",true],"~$trace",["^ ","^M",["^N",[["~$&","^O"]]],"^7",35,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/trace","^R","^S","^T",true],"~$debug",["^ ","^M",["^N",[["~$&","^O"]]],"^7",29,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/debug","^R","^S","^T",true],"~$severe",["^ ","^M",["^N",[["~$&","^O"]]],"^7",20,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/severe","^R","^S","^T",true],"~$info",["^ ","^M",["^N",[["~$&","^O"]]],"^7",26,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/info","^R","^S","^T",true],"~$fine",["^ ","^M",["^N",[["~$&","^O"]]],"^7",38,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/fine","^R","^S","^T",true],"~$error",["^ ","^M",["^N",[["~$&","^O"]]],"^7",17,"^8",1,"^6","lambdaisland/glogi.clj","^P","~$lambdaisland.glogi/error","^R","^S","^T",true]],"^P","^S","~:reader-aliases",["^ "],"~:op","^R","~:imports",["^ ","~$Console","~$goog.debug.Console","~$FancyWindow","~$goog.debug.FancyWindow","~$DivConsole","~$goog.debug.DivConsole"],"~:requires",["^ ","~$glog","~$goog.log","^1F","^1G","^1G","^1G","^1E","^1E","^C","^C","~$gobj","~$goog.object","~$goog","^1O","^1N","^1N","^1I","^1I","^1L","^1L","~$array","~$goog.array","^1H","^1I","~$str","~$clojure.string","^1S","^1S","^1Q","^1Q","^1D","^1E"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",null,"^1V",["^ ","^S","^S","^C","^C"],"~:form",["^N",["~$ns","^S",["^N",["^1U",["^1L","~:as","^1K"],["^1E","^1Z","^1D"],["^1Q","^1Z","^1P"],["^1S","^1Z","^1R"],["^1N","^1Z","^1M"]]],["^N",["~:import",["~$goog.debug","^1D","^1F","^1H"]]],["^N",["^1V",["^S"]]]]],"~:flags",["^ ","^1U",["^J",[]],"^1V",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^1O","^C","^1L","^1E","^1Q","^1S","^1N","^1G","^1I"]],"^R","^S","~:resource-id",["~:shadow.build.classpath/resource","lambdaisland/glogi.cljs"],"~:compiled-at",1692014605714,"^1A",["^ ","^1K","^1L","^1F","^1G","^1G","^1G","^1E","^1E","^S","^S","^C","^C","^1M","^1N","^1O","^1O","^1N","^1N","^1I","^1I","^1L","^1L","^1P","^1Q","^1H","^1I","^1R","^1S","^1S","^1S","^1Q","^1Q","^1D","^1E"],"~:resource-name","lambdaisland/glogi.cljs","~:warnings",[],"~:source","(ns lambdaisland.glogi\n  (:require [goog.log :as glog]\n            [goog.debug.Console :as Console]\n            [goog.array :as array]\n            [clojure.string :as str]\n            [goog.object :as gobj])\n  (:import [goog.debug Console FancyWindow DivConsole])\n  (:require-macros [lambdaisland.glogi]))\n\n(def Level\n  (if (exists? glog/Level)\n    glog/Level\n    goog.debug.logger.Level))\n\n;; Wrappers around goog.log methods which changed in Closure v20210302, so we\n;; can retain backward compatibility. The static method call is the newer\n;; version.\n\n(defn- goog-setLevel [logger level]\n  (if (exists? glog/setLevel)\n    (^:cljs.analyzer/no-resolve glog/setLevel logger level)\n    (.setLevel logger level)))\n\n(defn- goog-logRecord [logger record]\n  (if (exists? glog/publishLogRecord)\n    (^:cljs.analyzer/no-resolve glog/publishLogRecord logger record)\n    (.logRecord logger record)))\n\n(defn- goog-addHandler [logger handler]\n  (if (exists? glog/addHandler)\n    (glog/addHandler logger handler)\n    (.addHandler logger handler)))\n\n(defn- goog-removeHandler [logger handler]\n  (if (exists? glog/removeHandler)\n    (glog/removeHandler logger handler)\n    (.removeHandler logger handler)))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def ^private logger-handlers-prop \"__glogi_handlers__\")\n\n(defn name-str [x]\n  (cond\n    (= :glogi/root x)\n    \"\"\n\n    (string? x)\n    x\n\n    (simple-ident? x)\n    (name x)\n\n    (qualified-ident? x)\n    (str (namespace x) \"/\" (name x))\n\n    :else\n    (str x)))\n\n(defn logger\n  \"Get a logger by name, and optionally set its level. Name can be a string\n  keyword, or symbol. The special keyword :glogi/root returns the root logger.\"\n  ([n]\n   (glog/getLogger (name-str n) js/undefined))\n  ([n level]\n   (glog/getLogger (name-str n) level)))\n\n(def root-logger (logger \"\"))\n\n(defn- predefined-level [name]\n  (when (exists? glog/Level)\n    (glog/Level.getPredefinedLevel name)))\n\n(def levels\n  ;; Hacky way to make this work across versions. (.-OFF Level) does not work in\n  ;; the new version after advanced compilation, but they have added a lookup\n  ;; function.\n  {:off     (or (.-OFF Level) (predefined-level \"OFF\"))\n   :shout   (or (.-SHOUT Level) (predefined-level \"SHOUT\"))\n   :severe  (or (.-SEVERE Level) (predefined-level \"SEVERE\"))\n   :warning (or (.-WARNING Level) (predefined-level \"WARNING\"))\n   :info    (or (.-INFO Level) (predefined-level \"INFO\"))\n   :config  (or (.-CONFIG Level) (predefined-level \"CONFIG\"))\n   :fine    (or (.-FINE Level) (predefined-level \"FINE\"))\n   :finer   (or (.-FINER Level) (predefined-level \"FINER\"))\n   :finest  (or (.-FINEST Level) (predefined-level \"FINEST\"))\n   :all     (or (.-ALL Level) (predefined-level \"ALL\"))\n\n   ;; pedestal style\n   :trace (or (.-FINER Level) (predefined-level \"FINER\"))\n   :debug (or (.-FINE Level) (predefined-level \"FINE\"))\n   :warn  (or (.-WARNING Level) (predefined-level \"WARNING\"))\n   :error (or (.-SEVERE Level) (predefined-level \"SEVERE\"))})\n\n(defn level [lvl]\n  (get levels lvl))\n\n(defn level-value\n  \"Get the numeric value of a log level (keyword).\"\n  [lvl]\n  (.-value (level lvl)))\n\n(defn make-log-record [level message name exception]\n  (let [LogRecord (if (exists? goog.debug.LogRecord)\n                    goog.debug.LogRecord\n                    goog.log.LogRecord)\n        record (new LogRecord level message name)]\n    (when exception\n      (.setException record exception))\n    record))\n\n(defn log\n  \"Output a log message to the given logger, optionally with an exception to be\n  logged.\"\n  ([name lvl message]\n   (log name lvl message nil))\n  ([name lvl message exception]\n   (when glog/ENABLED\n     (when-let [l (logger name)]\n       (goog-logRecord l (make-log-record (level lvl) message name exception))))))\n\n(defn set-level\n  \"Set the level (a keyword) of the given logger, identified by name, or :root for\n  the root logger.\"\n  [name lvl]\n  (assert (contains? levels lvl))\n  (some-> (logger name) (goog-setLevel (level lvl))))\n\n(defn ^:export set-levels\n  \"Convenience function for setting several levels at one.\n\n  Takes a map of logger name => level keyword. The logger name can be a string,\n  keyword, or symbol. The keyword :glogi/root refers to the root logger and is\n  equivalent to using an empty string.\n\n  This function is exported so it is still available in optimized builds to set\n  levels from the javascript console. In this case use nested arrays and\n  strings. Use `:root` for the root logger.\n\n  ``` javascript\n  lambdaisland.glogi.set_levels([[\\\"\\\" \\\"debug\\\"] [\\\"lambdaisland\\\" \\\"trace\\\"]])\n  ```\n  \"\n  [lvls]\n  (doseq [[logger level] lvls\n          :let [level (if (string? level) (keyword level) level)]]\n    (set-level logger level)))\n\n(defn enable-console-logging!\n  \"Log to the browser console. This uses goog.debug.Console directly,\n  use [lambdaisland.glogi.console/install!] for a version that plays nicely with\n  cljs-devtools.\"\n  []\n  (when-let [instance Console/instance]\n    (.setCapturing instance true)\n    (let [instance (Console.)]\n      (set! Console/instance instance)\n      (.setCapturing instance)))\n  nil)\n\n(defn console-autoinstall!\n  \"Log to the browser console if the browser location contains Debug=true.\"\n  []\n  (Console/autoInstall)\n  nil)\n\n(defn popup-logger-window!\n  \"Pop up a browser window which will display log messages. Returns the FancyWindow instance.\"\n  []\n  (doto (FancyWindow.)\n    (.setEnabled true)))\n\n(defn log-to-div!\n  \"Log messages to an element on the page. Returns the DivConsole instance.\"\n  [element]\n  (doto (DivConsole. element)\n    (.setCapturing  true)))\n\n(defn- logger-glogi-handlers [logger]\n  (gobj/get logger logger-handlers-prop))\n\n(defn- swap-handlers! [logger f & args]\n  (gobj/set\n   logger logger-handlers-prop\n   (apply f (logger-glogi-handlers logger) args)))\n\n(defn add-handler\n  \"Add a log handler to the given logger, or to the root logger if no logger is\n  specified. The handler is a function which receives a map as its argument.\n\n  A given handler-fn is only added to a given logger once, even when called\n  repeatedly.\"\n  ([handler-fn]\n   (add-handler \"\" handler-fn))\n  ([name handler-fn]\n   (let [logger (logger name)\n         log-record-handler\n         (fn [^goog.log/LogRecord record]\n           (handler-fn {:sequenceNumber (.-sequenceNumber_ record)\n                        :time (.-time_ record)\n                        :level (keyword (str/lower-case (.-name (.-level_ record))))\n                        :message (.-msg_ record)\n                        :logger-name (.-loggerName_ record)\n                        :exception (.-exception_ record)}))]\n     (when logger\n       (when-let [handler (get (logger-glogi-handlers logger) handler-fn)]\n         (goog-removeHandler logger handler))\n       (swap-handlers! logger assoc handler-fn log-record-handler)\n       (some-> logger (goog-addHandler log-record-handler))))))\n\n(defn remove-handler\n  ([handler-fn]\n   (remove-handler \"\" handler-fn))\n  ([name handler-fn]\n   (let [logger (logger name)]\n     (when logger\n       (when-let [handler (get (logger-glogi-handlers logger) handler-fn)]\n         (goog-removeHandler logger handler))\n       (swap-handlers! logger dissoc handler-fn)))))\n\n;; Retained for backward compatibility, but we don't add the same handler twice\n;; to the same logger.\n(def add-handler-once add-handler)\n\n(set-level :root :info)\n","~:reader-features",["^J",["~:cljs-release","~:cljs-dev","~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["lambdaisland.glogi/Level","js/goog","js/goog.log","js/goog.log.Level","goog.log/Level","js/goog.debug.logger.Level","lambdaisland.glogi/goog-setLevel","logger","level","js/goog.log.setLevel","goog.log/setLevel","lambdaisland.glogi/goog-logRecord","record","js/goog.log.publishLogRecord","goog.log/publishLogRecord","lambdaisland.glogi/goog-addHandler","handler","js/goog.log.addHandler","goog.log/addHandler","lambdaisland.glogi/goog-removeHandler","js/goog.log.removeHandler","goog.log/removeHandler","lambdaisland.glogi/logger-handlers-prop","lambdaisland.glogi/name-str","x","cljs.core._EQ_","cljs.core/simple-ident?","cljs.core/name","cljs.core/qualified-ident?","cljs.core/namespace","var_args","G__53064","lambdaisland.glogi/logger","js/Error","n","goog.log/getLogger","js/undefined","lambdaisland.glogi/root-logger","lambdaisland.glogi.logger","lambdaisland.glogi/predefined-level","name","goog.log/Level.getPredefinedLevel","lambdaisland.glogi/levels","or__5045__auto__","lambdaisland.glogi/level","lvl","cljs.core.get","lambdaisland.glogi/level-value","lambdaisland.glogi/make-log-record","message","exception","LogRecord","js/goog.debug","js/goog.debug.LogRecord","js/goog.log.LogRecord","G__53101","lambdaisland.glogi/log","lambdaisland.glogi.log","goog.log/ENABLED","temp__5804__auto__","l","lambdaisland.glogi/set-level","cljs.core/contains?","G__53117","lambdaisland.glogi/set-levels","lvls","seq__53122","cljs.core/seq","chunk__53124","count__53125","i__53126","vec__53144","cljs.core.nth","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__53154","cljs.core/first","cljs.core/next","cljs.core.keyword","lambdaisland.glogi/enable-console-logging!","instance","goog.debug.Console/instance","js/goog.debug.Console","lambdaisland.glogi/console-autoinstall!","goog.debug.Console/autoInstall","lambdaisland.glogi/popup-logger-window!","G__53172","js/goog.debug.FancyWindow","lambdaisland.glogi/log-to-div!","element","G__53178","js/goog.debug.DivConsole","lambdaisland.glogi/logger-glogi-handlers","lambdaisland.glogi.goog$module$goog$object.get","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","lambdaisland.glogi/swap-handlers!","seq53187","G__53188","G__53189","self__5754__auto__","f","args","lambdaisland.glogi.goog$module$goog$object.set","cljs.core.apply","G__53201","lambdaisland.glogi/add-handler","handler-fn","lambdaisland.glogi.add_handler","log-record-handler","G__53211","clojure.string/lower-case","lambdaisland.glogi.swap_handlers_BANG_","cljs.core/assoc","G__53215","G__53221","lambdaisland.glogi/remove-handler","lambdaisland.glogi.remove_handler","cljs.core/dissoc","lambdaisland.glogi/add-handler-once"]],"~:used-vars",["^J",["~$lambdaisland.glogi/console-autoinstall!","~$lambdaisland.glogi/set-level","~$cljs.core/keyword","~$js/goog.debug.Console","~$goog.log/addHandler","~$js/goog","~$js/undefined","~$lambdaisland.glogi/Level","~$lambdaisland.glogi/goog-setLevel","~$goog.debug.Console/instance","~$lambdaisland.glogi/root-logger","~$lambdaisland.glogi/logger-glogi-handlers","~$cljs.core/=","~$lambdaisland.glogi/swap-handlers!","~$js/goog.debug.DivConsole","~$js/goog.log.publishLogRecord","~$cljs.core/IndexedSeq","~$lambdaisland.glogi/logger","~$cljs.core/count","~$js/goog.log","~$lambdaisland.glogi/enable-console-logging!","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$goog.log/Level","~$lambdaisland.glogi/add-handler-once","~$cljs.core/dissoc","~$cljs.core/chunk-rest","~$lambdaisland.glogi/log","~$lambdaisland.glogi/level","~$cljs.core/qualified-ident?","~$js/goog.log.removeHandler","~$js/goog.debug.LogRecord","~$lambdaisland.glogi/predefined-level","~$lambdaisland.glogi/goog-addHandler","~$lambdaisland.glogi/goog-logRecord","~$cljs.core/contains?","~$js/goog.debug.FancyWindow","~$goog.debug.Console/autoInstall","~$lambdaisland.glogi/set-levels","~$goog.log/setLevel","~$cljs.core/namespace","~$lambdaisland.glogi/remove-handler","~$js/goog.log.setLevel","~$js/goog.log.addHandler","~$lambdaisland.glogi/log-to-div!","~$lambdaisland.glogi/goog-removeHandler","~$cljs.core/get","~$goog.log/ENABLED","~$cljs.core/-nth","~$js/goog.log.Level","~$lambdaisland.glogi/logger-handlers-prop","~$cljs.core/nth","~$cljs.core/simple-ident?","~$lambdaisland.glogi/name-str","~$js/goog.log.LogRecord","~$clojure.string/lower-case","~$cljs.core/next","~$lambdaisland.glogi/popup-logger-window!","~$lambdaisland.glogi.goog$module$goog$object.get","~$js/goog.debug.logger.Level","~$cljs.core/assoc","~$js/goog.debug","~$lambdaisland.glogi/make-log-record","~$cljs.core/first","~$cljs.core/name","~$lambdaisland.glogi/add-handler","~$lambdaisland.glogi.goog$module$goog$object.set","~$goog.log/removeHandler","~$lambdaisland.glogi/levels","~$goog.log/publishLogRecord","~$js/Error","~$lambdaisland.glogi/level-value","~$goog.log/getLogger","~$goog.log/Level.getPredefinedLevel","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^25","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^1O","~$goog.dom.HtmlElement"]]],["^25","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^25","lambdaisland/glogi.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^C","^1L","^1E","^1Q","^1S","^1N","^1G","^1I"]]],["^25","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.asserts"]]],["^25","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4?","^4@","^4C","^4>","^4A","^4B"]]],["^25","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^4>"]]],["^25","goog/style/style.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.safe","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^1N","~$goog.reflect","~$goog.string","~$goog.userAgent"]]],["^25","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C"]]],["^25","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4?","^4R","^4>"]]],["^25","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/structs/circularbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4?","^4>"]]],["^25","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^25","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^4R"]]],["^25","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","~$goog.fs.blob","^4D","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4F","^4G"]]],["^25","goog/math/irect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/math/box.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^4O"]]],["^25","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4F","~$goog.html.SafeUrl","^4G","^4C","^4>"]]],["^25","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4Z","~$goog.html.SafeStyle","^50","^4E","~$goog.html.uncheckedconversions","^4F","^4>"]]],["^25","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4J","^4C","~$goog.dom.element"]]],["^25","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4F","^4Z","^55","^4M","^50","^4J","^4E","^4G","^4C","^4U","^1Q","^1N","^4>","~$goog.dom.tags","^4["]]],["^25","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1N"]]],["^25","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1Q","^4>","^4?"]]],["^25","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1Q","^4C","^51","~$goog.dom.BrowserFeature","^4I","^4J","^4K","^54","^56","^4O","^4Q","^1N","^4S","^4F","~$goog.string.Unicode","^4T"]]],["^25","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.debug.Error","^4I"]]],["^25","goog/debug/relativetimeprovider.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/math/rect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^4N","^4O","~$goog.math.IRect","^4Q"]]],["^25","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1Q","^4C","~$goog.collections.maps","^4S","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^25","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4@"]]],["^25","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/debug/divconsole.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.debug.HtmlFormatter","~$goog.dom.DomHelper","^4J","^4K","^54","^4M","^1L","^4F","~$goog.style"]]],["^25","goog/debug/fancywindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1Q","^4C","~$goog.debug.DebugWindow","^5C","^4J","^4K","^54","^4M","^1L","^1N","^4S","^4F","^4T"]]],["^25","goog/debug/formatter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^20","~$goog.debug.RelativeTimeProvider","^54","^50","^56","^1L","^4F"]]],["^25","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",[]]],["^25","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1Q","^1N"]]],["^25","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^C","^4S","~$goog.string.StringBuffer"]]],["^25","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4K","^56","^4F","^4>"]]],["^25","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4>","^4B"]]],["^25","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^1Q","~$goog.debug.errorcontext"]]],["^25","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.math"]]],["^25","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.flags"]]],["^25","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4I","^4J"]]],["^25","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^54","^4Z","^55","^4M","^50","^4E","^4F","^4>"]]],["^25","goog/debug/debugwindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^5B","^4K","^54","^4M","^1L","^4F","~$goog.structs.CircularBuffer","^4T"]]],["^25","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O"]]],["^25","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.math.Long","~$goog.math.Integer","^4S","^1N","^1Q","~$goog.Uri","^5G"]]],["^25","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4F","^4G","^4[","^4C"]]],["^25","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^20"]]],["^25","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4F","^55","^4G","^1N","^4C","^4>"]]],["^25","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4R"]]],["^25","goog/debug/console.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","~$goog.debug.TextFormatter","^1L"]]],["^25","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4T"]]],["^25","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^4S"]]],["^25","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4C","^4G"]]],["^25","goog/dom/vendor.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^J",[]],"^4<",["^1O","^4S","^4T"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1689947054000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/com/lambdaisland/glogi/1.2.164/glogi-1.2.164.jar!/lambdaisland/glogi.clj",1689947043000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",1,"^8",5,"^9",1,"^:",23],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K",["^ ","^L",["^ ","^M",["^N",[["~$&","^O"]]],"^7",41,"^8",1,"^6","lambdaisland/glogi.clj","^P","^Q","^R","^S","^T",true],"^U",["^ ","^M",["^N",[["~$&","^O"]]],"^7",14,"^8",1,"^6","lambdaisland/glogi.clj","^P","^V","^R","^S","^T",true],"^W",["^ ","^M",["^N",[["~$&","^O"]]],"^7",44,"^8",1,"^6","lambdaisland/glogi.clj","^P","^X","^R","^S","^T",true],"^Y",["^ ","^M",["^N",[["~$&","^O"]]],"^7",32,"^8",1,"^6","lambdaisland/glogi.clj","^P","^Z","^R","^S","^T",true],"^[",["^ ","^M",["^N",[["^10"],["^10","~$&","^11"]]],"^7",47,"^8",1,"^6","lambdaisland/glogi.clj","^P","^12","^R","^S","^T",true],"^13",["^ ","^M",["^N",[["~$&","^O"]]],"^7",23,"^8",1,"^6","lambdaisland/glogi.clj","^P","^14","^R","^S","^T",true],"^15",["^ ","^M",["^N",[["~$&","^O"]]],"^7",35,"^8",1,"^6","lambdaisland/glogi.clj","^P","^16","^R","^S","^T",true],"^17",["^ ","^M",["^N",[["~$&","^O"]]],"^7",29,"^8",1,"^6","lambdaisland/glogi.clj","^P","^18","^R","^S","^T",true],"^19",["^ ","^M",["^N",[["~$&","^O"]]],"^7",20,"^8",1,"^6","lambdaisland/glogi.clj","^P","^1:","^R","^S","^T",true],"^1;",["^ ","^M",["^N",[["~$&","^O"]]],"^7",26,"^8",1,"^6","lambdaisland/glogi.clj","^P","^1<","^R","^S","^T",true],"^1=",["^ ","^M",["^N",[["~$&","^O"]]],"^7",38,"^8",1,"^6","lambdaisland/glogi.clj","^P","^1>","^R","^S","^T",true],"^1?",["^ ","^M",["^N",[["~$&","^O"]]],"^7",17,"^8",1,"^6","lambdaisland/glogi.clj","^P","^1@","^R","^S","^T",true]],"~:shadow/js-access-properties",["^J",["setEnabled","setCapturing"]],"^P","^S","^1A",["^ "],"^1C",["^ ","^1D","^1E","^1F","^1G","^1H","^1I"],"^1J",["^ ","^1K","^1L","^1F","^1G","^1G","^1G","^1E","^1E","^C","^C","^1M","^1N","^1O","^1O","^1N","^1N","^1I","^1I","^1L","^1L","^1P","^1Q","^1H","^1I","^1R","^1S","^1S","^1S","^1Q","^1Q","^1D","^1E"],"^1T",["^J",["^1U","^1V"]],"~:shadow/js-access-global",["^J",["undefined","Error"]],"^1W",null,"~:defs",["^ ","~$remove-handler",["^ ","~:protocol-inline",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",211,"^8",7,"^9",211,"^:",21,"^M",["^N",["~$quote",["^N",[["~$handler-fn"],["~$name","^6K"]]]]],"~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^6K"],["^6L","^6K"]],"^M",["^N",[["^6K"],["^6L","^6K"]]],"~:arglists-meta",["^N",[null,null]]]],"^P","^3A","^6","lambdaisland/glogi.cljs","^:",21,"^6M",["^ ","^6N",false,"^6O",2,"^6P",2,"^6Q",[["^6K"],["^6L","^6K"]],"^M",["^N",[["^6K"],["^6L","^6K"]]],"^6R",["^N",[null,null]]],"^6Q",[["^6K"],["^6L","^6K"]],"~:protocol-impl",null,"^6O",2,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"~:methods",[["^ ","^6O",1,"^6N",false,"~:tag","~$any"],["^ ","^6O",2,"^6N",false,"^6U",["^J",["~$js","~$clj-nil"]]]],"^7",211,"^9",211,"^6P",2,"~:fn-var",true,"^M",["^N",[["^6K"],["^6L","^6K"]]]],"~$logger-glogi-handlers",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",179,"^8",8,"^9",179,"^:",29,"~:private",true,"^M",["^N",["^6J",["^N",[["~$logger"]]]]]],"^6[",true,"^P","^2N","^6","lambdaisland/glogi.cljs","^:",29,"^6Q",["^N",[["^70"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",179,"~:ret-tag","^6W","^9",179,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["^70"]]]]]],"~$goog-addHandler",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",29,"^8",8,"^9",29,"^:",23,"^6[",true,"^M",["^N",["^6J",["^N",[["^70","~$handler"]]]]]],"^6[",true,"^P","^39","^6","lambdaisland/glogi.cljs","^:",23,"^6Q",["^N",[["^70","^73"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",29,"^71",["^J",["^6V","^6W"]],"^9",29,"^6P",2,"^6Y",true,"^M",["^N",["^6J",["^N",[["^70","^73"]]]]]],"~$log",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",112,"^8",7,"^9",112,"^:",10,"^M",["^N",["^6J",["^N",[["^6L","~$lvl","~$message"],["^6L","^75","^76","~$exception"]]]]],"~:doc","Output a log message to the given logger, optionally with an exception to be\n  logged.","^6M",["^ ","^6N",false,"^6O",4,"^6P",4,"^6Q",[["^6L","^75","^76"],["^6L","^75","^76","^77"]],"^M",["^N",[["^6L","^75","^76"],["^6L","^75","^76","^77"]]],"^6R",["^N",[null,null]]]],"^P","^33","^6","lambdaisland/glogi.cljs","^:",10,"^6M",["^ ","^6N",false,"^6O",4,"^6P",4,"^6Q",[["^6L","^75","^76"],["^6L","^75","^76","^77"]],"^M",["^N",[["^6L","^75","^76"],["^6L","^75","^76","^77"]]],"^6R",["^N",[null,null]]],"^6Q",[["^6L","^75","^76"],["^6L","^75","^76","^77"]],"^6S",null,"^6O",4,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^6T",[["^ ","^6O",3,"^6N",false,"^6U","^6V"],["^ ","^6O",4,"^6N",false,"^6U",["^J",["^6V","^6W","^6X"]]]],"^7",112,"^9",112,"^6P",4,"^6Y",true,"^M",["^N",[["^6L","^75","^76"],["^6L","^75","^76","^77"]]],"^78","Output a log message to the given logger, optionally with an exception to be\n  logged."],"~$level-value",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",98,"^8",7,"^9",98,"^:",18,"^M",["^N",["^6J",["^N",[["^75"]]]]],"^78","Get the numeric value of a log level (keyword)."],"^P","^43","^6","lambdaisland/glogi.cljs","^:",18,"^6Q",["^N",[["^75"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",98,"^71","^6V","^9",98,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["^75"]]]]],"^78","Get the numeric value of a log level (keyword)."],"~$set-levels",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",129,"^8",16,"^9",129,"^:",26,"~:export",true,"^M",["^N",["^6J",["^N",[["~$lvls"]]]]],"^78","Convenience function for setting several levels at one.\n\n  Takes a map of logger name => level keyword. The logger name can be a string,\n  keyword, or symbol. The keyword :glogi/root refers to the root logger and is\n  equivalent to using an empty string.\n\n  This function is exported so it is still available in optimized builds to set\n  levels from the javascript console. In this case use nested arrays and\n  strings. Use `:root` for the root logger.\n\n  ``` javascript\n  lambdaisland.glogi.set_levels([[\"\" \"debug\"] [\"lambdaisland\" \"trace\"]])\n  ```\n  "],"^P","^3>","^6","lambdaisland/glogi.cljs","^:",26,"^6Q",["^N",[["^7<"]]],"^6S",null,"^7;",true,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",129,"^71","^6X","^9",129,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["^7<"]]]]],"^78","Convenience function for setting several levels at one.\n\n  Takes a map of logger name => level keyword. The logger name can be a string,\n  keyword, or symbol. The keyword :glogi/root refers to the root logger and is\n  equivalent to using an empty string.\n\n  This function is exported so it is still available in optimized builds to set\n  levels from the javascript console. In this case use nested arrays and\n  strings. Use `:root` for the root logger.\n\n  ``` javascript\n  lambdaisland.glogi.set_levels([[\"\" \"debug\"] [\"lambdaisland\" \"trace\"]])\n  ```\n  "],"~$console-autoinstall!",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",161,"^8",7,"^9",161,"^:",27,"^M",["^N",["^6J",["^N",[[]]]]],"^78","Log to the browser console if the browser location contains Debug=true."],"^P","^2C","^6","lambdaisland/glogi.cljs","^:",27,"^6Q",["^N",[[]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",161,"^71","^6X","^9",161,"^6P",0,"^6Y",true,"^M",["^N",["^6J",["^N",[[]]]]],"^78","Log to the browser console if the browser location contains Debug=true."],"~$root-logger",["^ ","^P","^2M","^6","lambdaisland/glogi.cljs","^7",68,"^8",1,"^9",68,"^:",17,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",68,"^8",6,"^9",68,"^:",17],"^6U","^6W"],"~$predefined-level",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",70,"^8",8,"^9",70,"^:",24,"^6[",true,"^M",["^N",["^6J",["^N",[["^6L"]]]]]],"^6[",true,"^P","^38","^6","lambdaisland/glogi.cljs","^:",24,"^6Q",["^N",[["^6L"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",70,"^71",["^J",["^6W","^6X"]],"^9",70,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["^6L"]]]]]],"~$goog-setLevel",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",19,"^8",8,"^9",19,"^:",21,"^6[",true,"^M",["^N",["^6J",["^N",[["^70","~$level"]]]]]],"^6[",true,"^P","^2K","^6","lambdaisland/glogi.cljs","^:",21,"^6Q",["^N",[["^70","^7A"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",19,"^71",["^J",["^6V","^6W"]],"^9",19,"^6P",2,"^6Y",true,"^M",["^N",["^6J",["^N",[["^70","^7A"]]]]]],"^7A",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",95,"^8",7,"^9",95,"^:",12,"^M",["^N",["^6J",["^N",[["^75"]]]]]],"^P","^34","^6","lambdaisland/glogi.cljs","^:",12,"^6Q",["^N",[["^75"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",95,"^71",["^J",["^6V","^6X"]],"^9",95,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["^75"]]]]]],"~$goog-logRecord",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",24,"^8",8,"^9",24,"^:",22,"^6[",true,"^M",["^N",["^6J",["^N",[["^70","~$record"]]]]]],"^6[",true,"^P","^3:","^6","lambdaisland/glogi.cljs","^:",22,"^6Q",["^N",[["^70","^7C"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",24,"^71",["^J",["^6V","^6W"]],"^9",24,"^6P",2,"^6Y",true,"^M",["^N",["^6J",["^N",[["^70","^7C"]]]]]],"~$levels",["^ ","^P","^40","^6","lambdaisland/glogi.cljs","^7",74,"^8",1,"^9",74,"^:",12,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",74,"^8",6,"^9",74,"^:",12],"^6U","~$cljs.core/IMap"],"~$Level",["^ ","^P","^2J","^6","lambdaisland/glogi.cljs","^7",10,"^8",1,"^9",10,"^:",11,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",10,"^8",6,"^9",10,"^:",11]],"~$add-handler-once",["^ ","^P","^30","^6","lambdaisland/glogi.cljs","^7",223,"^8",1,"^9",223,"^:",22,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",223,"^8",6,"^9",223,"^:",22]],"~$enable-console-logging!",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",149,"^8",7,"^9",149,"^:",30,"^M",["^N",["^6J",["^N",[[]]]]],"^78","Log to the browser console. This uses goog.debug.Console directly,\n  use [lambdaisland.glogi.console/install!] for a version that plays nicely with\n  cljs-devtools."],"^P","^2W","^6","lambdaisland/glogi.cljs","^:",30,"^6Q",["^N",[[]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",149,"^71","^6X","^9",149,"^6P",0,"^6Y",true,"^M",["^N",["^6J",["^N",[[]]]]],"^78","Log to the browser console. This uses goog.debug.Console directly,\n  use [lambdaisland.glogi.console/install!] for a version that plays nicely with\n  cljs-devtools."],"~$logger-handlers-prop",["^ ","^P","^3J","^6","lambdaisland/glogi.cljs","^7",41,"^8",1,"^9",41,"^:",35,"^6U","~$private","^5",["^ ","^6","lambdaisland/glogi.cljs","^7",41,"^8",15,"^9",41,"^:",35,"^6U","^7J"]],"~$swap-handlers!",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",182,"^8",8,"^9",182,"^:",22,"^6[",true,"^M",["^N",["^6J",["^N",[["^70","~$f","~$&","~$args"]]]]],"^6M",["^ ","^6N",true,"^6O",2,"^6P",2,"^6Q",[["^N",["^70","~$f","^7L"]]],"^M",["^N",[["^70","~$f","~$&","^7L"]]],"^6R",["^N",[null]]]],"^6[",true,"^P","^2P","^6","lambdaisland/glogi.cljs","^:",22,"^6M",["^ ","^6N",true,"^6O",2,"^6P",2,"^6Q",[["^N",["^70","~$f","^7L"]]],"^M",["^N",[["^70","~$f","~$&","^7L"]]],"^6R",["^N",[null]]],"^6Q",[["^N",["^70","~$f","^7L"]]],"^6S",null,"^6O",2,"^6R",["^N",[null]],"^8",1,"^6N",true,"^6T",[["^ ","^6O",2,"^6N",true,"^6U","^6W"]],"^7",182,"^71","^6V","^9",182,"^6P",2,"^6Y",true,"^M",["^N",[["^70","~$f","~$&","^7L"]]]],"~$set-level",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",122,"^8",7,"^9",122,"^:",16,"^M",["^N",["^6J",["^N",[["^6L","^75"]]]]],"^78","Set the level (a keyword) of the given logger, identified by name, or :root for\n  the root logger."],"^P","^2D","^6","lambdaisland/glogi.cljs","^:",16,"^6Q",["^N",[["^6L","^75"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",122,"^71",["^J",["^6V","^6W","^6X"]],"^9",122,"^6P",2,"^6Y",true,"^M",["^N",["^6J",["^N",[["^6L","^75"]]]]],"^78","Set the level (a keyword) of the given logger, identified by name, or :root for\n  the root logger."],"~$add-handler",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",187,"^8",7,"^9",187,"^:",18,"^M",["^N",["^6J",["^N",[["^6K"],["^6L","^6K"]]]]],"^78","Add a log handler to the given logger, or to the root logger if no logger is\n  specified. The handler is a function which receives a map as its argument.\n\n  A given handler-fn is only added to a given logger once, even when called\n  repeatedly.","^6M",["^ ","^6N",false,"^6O",2,"^6P",2,"^6Q",[["^6K"],["^6L","^6K"]],"^M",["^N",[["^6K"],["^6L","^6K"]]],"^6R",["^N",[null,null]]]],"^P","^3Y","^6","lambdaisland/glogi.cljs","^:",18,"^6M",["^ ","^6N",false,"^6O",2,"^6P",2,"^6Q",[["^6K"],["^6L","^6K"]],"^M",["^N",[["^6K"],["^6L","^6K"]]],"^6R",["^N",[null,null]]],"^6Q",[["^6K"],["^6L","^6K"]],"^6S",null,"^6O",2,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^6T",[["^ ","^6O",1,"^6N",false,"^6U","^6V"],["^ ","^6O",2,"^6N",false,"^6U",["^J",["^6V","^6W","^6X"]]]],"^7",187,"^9",187,"^6P",2,"^6Y",true,"^M",["^N",[["^6K"],["^6L","^6K"]]],"^78","Add a log handler to the given logger, or to the root logger if no logger is\n  specified. The handler is a function which receives a map as its argument.\n\n  A given handler-fn is only added to a given logger once, even when called\n  repeatedly."],"~$name-str",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",43,"^8",7,"^9",43,"^:",15,"^M",["^N",["^6J",["^N",[["~$x"]]]]]],"^P","^3M","^6","lambdaisland/glogi.cljs","^:",15,"^6Q",["^N",[["~$x"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",43,"^71","~$string","^9",43,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["~$x"]]]]]],"^70",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",60,"^8",7,"^9",60,"^:",13,"^M",["^N",["^6J",["^N",[["~$n"],["~$n","^7A"]]]]],"^78","Get a logger by name, and optionally set its level. Name can be a string\n  keyword, or symbol. The special keyword :glogi/root returns the root logger.","^6M",["^ ","^6N",false,"^6O",2,"^6P",2,"^6Q",[["~$n"],["~$n","^7A"]],"^M",["^N",[["~$n"],["~$n","^7A"]]],"^6R",["^N",[null,null]]]],"^P","^2T","^6","lambdaisland/glogi.cljs","^:",13,"^6M",["^ ","^6N",false,"^6O",2,"^6P",2,"^6Q",[["~$n"],["~$n","^7A"]],"^M",["^N",[["~$n"],["~$n","^7A"]]],"^6R",["^N",[null,null]]],"^6Q",[["~$n"],["~$n","^7A"]],"^6S",null,"^6O",2,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^6T",[["^ ","^6O",1,"^6N",false,"^6U","^6W"],["^ ","^6O",2,"^6N",false,"^6U","^6W"]],"^7",60,"^9",60,"^6P",2,"^6Y",true,"^M",["^N",[["~$n"],["~$n","^7A"]]],"^78","Get a logger by name, and optionally set its level. Name can be a string\n  keyword, or symbol. The special keyword :glogi/root returns the root logger."],"~$make-log-record",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",103,"^8",7,"^9",103,"^:",22,"^M",["^N",["^6J",["^N",[["^7A","^76","^6L","^77"]]]]]],"^P","^3V","^6","lambdaisland/glogi.cljs","^:",22,"^6Q",["^N",[["^7A","^76","^6L","^77"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",103,"^71","~$LogRecord","^9",103,"^6P",4,"^6Y",true,"^M",["^N",["^6J",["^N",[["^7A","^76","^6L","^77"]]]]]],"~$log-to-div!",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",173,"^8",7,"^9",173,"^:",18,"^M",["^N",["^6J",["^N",[["~$element"]]]]],"^78","Log messages to an element on the page. Returns the DivConsole instance."],"^P","^3D","^6","lambdaisland/glogi.cljs","^:",18,"^6Q",["^N",[["^7T"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",173,"^71","^2Q","^9",173,"^6P",1,"^6Y",true,"^M",["^N",["^6J",["^N",[["^7T"]]]]],"^78","Log messages to an element on the page. Returns the DivConsole instance."],"~$goog-removeHandler",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",34,"^8",8,"^9",34,"^:",26,"^6[",true,"^M",["^N",["^6J",["^N",[["^70","^73"]]]]]],"^6[",true,"^P","^3E","^6","lambdaisland/glogi.cljs","^:",26,"^6Q",["^N",[["^70","^73"]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",34,"^71",["^J",["^6V","^6W"]],"^9",34,"^6P",2,"^6Y",true,"^M",["^N",["^6J",["^N",[["^70","^73"]]]]]],"~$popup-logger-window!",["^ ","^6I",null,"^5",["^ ","^6","lambdaisland/glogi.cljs","^7",167,"^8",7,"^9",167,"^:",27,"^M",["^N",["^6J",["^N",[[]]]]],"^78","Pop up a browser window which will display log messages. Returns the FancyWindow instance."],"^P","^3Q","^6","lambdaisland/glogi.cljs","^:",27,"^6Q",["^N",[[]]],"^6S",null,"^6R",["^N",[null,null]],"^8",1,"^6N",false,"^7",167,"^71","^3<","^9",167,"^6P",0,"^6Y",true,"^M",["^N",["^6J",["^N",[[]]]]],"^78","Pop up a browser window which will display log messages. Returns the FancyWindow instance."]],"^1V",["^ ","^S","^S","^C","^C"],"~:cljs.analyzer/constants",["^ ","^1T",["^J",["~:sequenceNumber","~:shout","~:finest","~:else","~:config","~:glogi/root","~:warn","~:trace","~:time","~:debug","~:all","~:level","~:warning","~:logger-name","~:severe","~:root","~:off","~:info","~:fine","~:error","~:exception","~:finer","~:message"]],"~:order",["^81","^7[","^7Y","^7Z","^80","^82","^83","^85","^86","^88","^8:","^8<","^8=","^8>","^8?","^8A","^7X","^84","^87","^8B","^89","^8@","^8;"]],"^21",["^ ","^1U",["^J",[]],"^1V",["^J",[]]],"^22",["^ "],"^23",["^1O","^C","^1L","^1E","^1Q","^1S","^1N","^1G","^1I"]],"^R","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^48",[["^8F","~:static-fns"],true,["^8F","~:shadow-tweaks"],null,["^8F","~:source-map-inline"],null,["^8F","~:elide-asserts"],false,["^8F","~:optimize-constants"],null,["^8F","^28"],null,["^8F","~:external-config"],null,["^8F","~:tooling-config"],null,["^8F","~:emit-constants"],null,["^8F","~:load-tests"],null,["^8F","~:form-size-threshold"],null,["^8F","~:global-goog-object&array"],null,["^8F","~:data-readers"],null,["^8F","~:infer-externs"],"~:auto",["^8F","^2:"],["^J",["^2;","^2<"]],["~:js-options","~:js-provider"],"^1U",["~:mode"],"~:dev",["^8F","~:fn-invoke-direct"],null,["^8F","~:source-map"],"/dev/null"]]]