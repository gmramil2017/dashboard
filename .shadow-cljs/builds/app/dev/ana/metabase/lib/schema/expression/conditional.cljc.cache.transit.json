["^ ","~:output",["^ ","~:js","goog.provide('metabase.lib.schema.expression.conditional');\n/**\n * For expressions like `:case` and `:coalesce` that can return different possible expressions, determine the best\n *   return type given all of the various options.\n */\nmetabase.lib.schema.expression.conditional.best_return_type = (function metabase$lib$schema$expression$conditional$best_return_type(x,y){\nif((x == null)){\nreturn y;\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"type.unknown\",\"metabase.lib.schema.expression/type.unknown\",-98159107))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y,new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"type.unknown\",\"metabase.lib.schema.expression/type.unknown\",-98159107))))){\nreturn new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"type.unknown\",\"metabase.lib.schema.expression/type.unknown\",-98159107);\n} else {\nif((((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword)))){\nreturn metabase.types.most_specific_common_ancestor(x,y);\n} else {\nif((x instanceof cljs.core.Keyword)){\nreturn x;\n} else {\nif((y instanceof cljs.core.Keyword)){\nreturn y;\n} else {\nvar or__5045__auto__ = (function (){var temp__5804__auto__ = cljs.core.not_empty(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(x,y));\nif(cljs.core.truth_(temp__5804__auto__)){\nvar intersection = temp__5804__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(intersection),(1))){\nreturn cljs.core.first(intersection);\n} else {\nreturn intersection;\n}\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$2(x,y);\n}\n\n}\n}\n}\n}\n}\n});\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema.expression.conditional\",\"case-subclause\",\"metabase.lib.schema.expression.conditional/case-subclause\",2034608676),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tuple\",\"tuple\",-472667284),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\"Valid :case [pred expr] pair\"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"boolean\",\"metabase.lib.schema.expression/boolean\",-1396506592)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"expression\",\"metabase.lib.schema.expression/expression\",-1389098704)], null)], null));\nmetabase.lib.schema.mbql_clause.define_catn_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"case\",\"case\",1143702196),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"pred-expr-pairs\",\"pred-expr-pairs\",123330907),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sequential\",\"sequential\",-1082983960),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression.conditional\",\"case-subclause\",\"metabase.lib.schema.expression.conditional/case-subclause\",2034608676)], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"?\",\"?\",-1703165233),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"expression\",\"metabase.lib.schema.expression/expression\",-1389098704)], null)], null)], null)], null)], 0));\nmetabase.lib.schema.expression.type_of_method.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"case\",\"case\",1143702196),(function (p__60706){\nvar vec__60708 = p__60706;\nvar _tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60708,(0),null);\nvar _opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60708,(1),null);\nvar pred_expr_pairs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60708,(2),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60708,(3),null);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (best_guess,p__60711){\nvar vec__60712 = p__60711;\nvar _pred = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60712,(0),null);\nvar expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60712,(1),null);\nvar expr_type = metabase.lib.schema.expression.type_of(expr);\nreturn metabase.lib.schema.expression.conditional.best_return_type(best_guess,expr_type);\n}),(((!((default$ == null))))?metabase.lib.schema.expression.type_of(default$):null),pred_expr_pairs);\n}));\nmetabase.lib.schema.mbql_clause.define_catn_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"coalesce\",\"coalesce\",654622029),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"repeat\",\"repeat\",832692087),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"expression\",\"metabase.lib.schema.expression/expression\",-1389098704)], null)], null)], null)], null)], 0));\nmetabase.lib.schema.expression.type_of_method.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"coalesce\",\"coalesce\",654622029),(function (p__60716){\nvar vec__60717 = p__60716;\nvar seq__60718 = cljs.core.seq(vec__60717);\nvar first__60719 = cljs.core.first(seq__60718);\nvar seq__60718__$1 = cljs.core.next(seq__60718);\nvar _tag = first__60719;\nvar first__60719__$1 = cljs.core.first(seq__60718__$1);\nvar seq__60718__$2 = cljs.core.next(seq__60718__$1);\nvar _opts = first__60719__$1;\nvar exprs = seq__60718__$2;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.conditional.best_return_type,cljs.core.map.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.type_of,exprs));\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Conditional expressions like `:case` and `:coalesce`.","~:file","metabase/lib/schema/expression/conditional.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",47],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$metabase.lib.schema.expression.conditional","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$mbql-clause","~$metabase.lib.schema.mbql-clause","^D","^D","~$expression","~$metabase.lib.schema.expression","~$goog","^Y","^V","^V","~$metabase.util.malli.registry","^Z","^X","^X","^T","^T","~$mr","^Z","~$types","~$metabase.types","^11","^11"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^W","^X","^Z","^Z","^X","^X","^[","^Z"],"~:form",["~#list",["~$ns","^M","Conditional expressions like `:case` and `:coalesce`.",["^17",["^13",["^T","~:as","^S"],["^X","^19","^W"],["^V","^19","^U"],["^11","^19","^10"],["^Z","^19","^["]]]]],"~:flags",["^ ","^13",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^D","^T","^X","^V","^11","^Z"]],"^P","^M","~:resource-id",["~:shadow.build.classpath/resource","metabase/lib/schema/expression/conditional.cljc"],"~:compiled-at",1692014614286,"^N",["^ ","^S","^T","^U","^V","^D","^D","^W","^X","^Y","^Y","^V","^V","^Z","^Z","^X","^X","^T","^T","^[","^Z","^10","^11","^11","^11"],"~:resource-name","metabase/lib/schema/expression/conditional.cljc","~:warnings",[],"~:source","(ns metabase.lib.schema.expression.conditional\n  \"Conditional expressions like `:case` and `:coalesce`.\"\n  (:require\n   [clojure.set :as set]\n   [metabase.lib.schema.expression :as expression]\n   [metabase.lib.schema.mbql-clause :as mbql-clause]\n   [metabase.types :as types]\n   [metabase.util.malli.registry :as mr]\n   ))\n\n;;; the logic for calculating the return type of a `:case` or similar statement is not optimal nor perfect. But it\n;;; should be ok for now and errors on the side of being permissive. See this Slack thread for more info:\n;;; https://metaboat.slack.com/archives/C04DN5VRQM6/p1678325996901389\n(defn- best-return-type\n  \"For expressions like `:case` and `:coalesce` that can return different possible expressions, determine the best\n  return type given all of the various options.\"\n  [x y]\n  (cond\n    (nil? x)\n    y\n\n    ;; if the type of either x or y is unknown, then the overall type of this has to be unknown as well.\n    (or (= x ::expression/type.unknown)\n        (= y ::expression/type.unknown))\n    ::expression/type.unknown\n\n    ;; if both types are keywords return their most-specific ancestor.\n    (and (keyword? x)\n         (keyword? y))\n    (types/most-specific-common-ancestor x y)\n\n    ;; if one type is a specific type but the other is an ambiguous union of possible types, return the specific\n    ;; type. A case can't possibly have multiple different return types, so if one expression has an unambiguous\n    ;; type then the whole thing has to have a compatible type.\n    (keyword? x)\n    x\n\n    (keyword? y)\n    y\n\n    ;; if both types are ambiguous unions of possible types then return the intersection of the two. But if the\n    ;; intersection is empty, return the union of everything instead. I don't really want to go down a rabbit\n    ;; hole of trying to find the intersection between the most-specific common ancestors\n    :else\n    (or (when-let [intersection (not-empty (set/intersection x y))]\n          (if (= (count intersection) 1)\n            (first intersection)\n            intersection))\n        (set/union x y))))\n\n;;; believe it or not, a `:case` clause really has the syntax [:case {} [[pred1 expr1] [pred2 expr2] ...]]\n(mr/def ::case-subclause\n  [:tuple\n   {:error/message \"Valid :case [pred expr] pair\"}\n   #_pred [:ref ::expression/boolean]\n   #_expr [:ref ::expression/expression]])\n\n\n(mbql-clause/define-catn-mbql-clause :case\n  ;; TODO -- we should further constrain this so all of the exprs are of the same type\n  [:pred-expr-pairs [:sequential {:min 1} [:ref ::case-subclause]]]\n  [:default [:? [:schema [:ref ::expression/expression]]]])\n\n(defmethod expression/type-of-method :case\n  [[_tag _opts pred-expr-pairs default]]\n  (reduce\n   (fn [best-guess [_pred expr]]\n     (let [expr-type (expression/type-of expr)]\n       (best-return-type best-guess expr-type)))\n   (when (some? default)\n     (expression/type-of default))\n   pred-expr-pairs))\n\n;;; TODO -- add constraint that these types have to be compatible\n(mbql-clause/define-catn-mbql-clause :coalesce\n  [:exprs [:repeat {:min 2} [:schema [:ref ::expression/expression]]]])\n\n(defmethod expression/type-of-method :coalesce\n  [[_tag _opts & exprs]]\n  #_{:clj-kondo/ignore [:reduce-without-init]}\n  (reduce best-return-type\n          (map expression/type-of exprs)))\n","~:reader-features",["^K",["~:cljs-release","~:cljs-dev","~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAaA;;;;8DAAA,9DAAOA,oIAGJC,EAAEC;AAHL,AAIE,GACE,MAAA,LAAMD;AACNC;;AAFF,GAKE,EAAI,+CAAA,/CAACC,6CAAEF,uIACH,+CAAA,/CAACE,6CAAED;AANT;;AAAA,GAUE,EAAK,cAAAE,bAAUH,qCACV,cAAAG,bAAUF;AACf,OAACG,6CAAoCJ,EAAEC;;AAZzC,GAiBE,cAAAE,bAAUH;AACVA;;AAlBF,GAoBE,cAAAG,bAAUF;AACVA;;AArBF,AA2BE,IAAAI,mBAAI,iBAAAC,qBAAwB,AAACE,oBAAU,AAACC,uDAAiBT,EAAEC;AAAvD,AAAA,oBAAAK;AAAA,AAAA,mBAAAA,fAAWC;AAAX,AACE,GAAI,2EAAA,3EAACL,6CAAE,AAACQ,gBAAMH;AACZ,OAACI,gBAAMJ;;AACPA;;;AAHJ;;;AAAJ,AAAA,oBAAAF;AAAAA;;AAII,OAACO,gDAAUZ,EAAEC;;;;;;;;;AAGrB,AAAAY,4CAAA,4JAAA,mFAAA,uDAAA,2CAAA,oEAAA,uCAAA,mFAAA,mDAAA,+HAAA,mFAAA,mDAAA;AAOA,6FAAA,uGAAA,mFAAA,0EAAA,mFAAA,kEAAA,2CAAA,kDAAA,YAAA,mFAAA,mDAAA,oLAAA,mFAAA,4DAAA,mFAAA,gDAAA,mFAAA,0DAAA,mFAAA,mDAAA,97CAACC;AAKD,AAAAC,0FAAA,qDAAA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;WAAA,AAAAE,4CAAAD,WAAA,IAAA,lEACIE;YADJ,AAAAD,4CAAAD,WAAA,IAAA,nEACSG;sBADT,AAAAF,4CAAAD,WAAA,IAAA,7EACeI;eADf,AAAAH,4CAAAD,WAAA,IAAA,tEAC+BK;AAD/B,AAEE,OAACC,+CACA,sBAAAC,XAAKE;AAAL,AAAA,IAAAD,aAAAD;YAAA,AAAAN,4CAAAO,WAAA,IAAA,nEAAiBE;WAAjB,AAAAT,4CAAAO,WAAA,IAAA,lEAAuBG;AAAvB,AACE,IAAMC,YAAU,AAACC,uCAAmBF;AAApC,AACE,OAAC7B,4DAAiB2B,WAAWG;GACjC,2BAAA,iDAAA,1EAAM,GAAA,aAAA,ZAAOP,qBACX,AAACQ,uCAAmBR,gBACtBD;;AAGH,6FAAA,8GAAA,mFAAA,uDAAA,mFAAA,wDAAA,2CAAA,kDAAA,YAAA,mFAAA,0DAAA,mFAAA,mDAAA,51BAACP;AAGD,AAAAC,0FAAA,4DAAA,WAAAgB;AAAA,AAAA,IAAAC,aAAAD;IAAAE,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAxB,gBAAAsB;IAAAA,iBAAA,AAAAG,eAAAH;WAAAE,PACIhB;IADJgB,mBAAA,AAAAxB,gBAAAsB;IAAAA,iBAAA,AAAAG,eAAAH;YAAAE,RACSf;YADTa,RACiBI;AADjB,AAGE,OAACd,+CAAOxB,4DACA,AAACuC,4CAAIR,uCAAmBO","names",["metabase.lib.schema.expression.conditional/best-return-type","x","y","cljs.core._EQ_","cljs.core/Keyword","metabase.types/most-specific-common-ancestor","or__5045__auto__","temp__5804__auto__","intersection","cljs.core/not-empty","clojure.set.intersection","cljs.core/count","cljs.core/first","clojure.set.union","metabase.util.malli.registry/register!","metabase.lib.schema.mbql_clause.define_catn_mbql_clause","metabase.lib.schema.expression/type-of-method","p__60706","vec__60708","cljs.core.nth","_tag","_opts","pred-expr-pairs","default","cljs.core.reduce","p__60711","vec__60712","best-guess","_pred","expr","expr-type","metabase.lib.schema.expression/type-of","p__60716","vec__60717","seq__60718","cljs.core/seq","first__60719","cljs.core/next","exprs","cljs.core.map"]],"~:used-vars",["^K",["~$metabase.lib.schema.mbql-clause/define-catn-mbql-clause","~$clojure.set/intersection","~$cljs.core/=","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/Keyword","~$metabase.util.malli.registry/register!","~$metabase.lib.schema.expression/type-of","~$cljs.core/map","~$metabase.lib.schema.expression/type-of-method","~$cljs.core/-add-method","~$cljs.core/not-empty","~$cljs.core/nth","~$cljs.core/next","~$cljs.core/not","~$metabase.types/most-specific-common-ancestor","~$clojure.set/union","~$cljs.core/first","~$metabase.lib.schema.expression.conditional/best-return-type"]]],"~:cache-keys",["~#cmap",[["^1>","camel_snake_kebab/internals/misc.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^Y","^D","~$camel-snake-kebab.internals.string-separator","~$clojure.string"]]],["^1>","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.dom.HtmlElement"]]],["^1>","metabase/shared/util/i18n.cljs"],["6c3c8615004b349dae9851ed547d516d45e04bd0","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$shadow.js.shim.module$ttag","^2;"]]],["^1>","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1>","metabase/types.cljc"],["00232bf78b259e26a21c218c8f2d746ba7003a15","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^T","~$metabase.types.coercion-hierarchies","~$metabase.util"]]],["^1>","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$goog.Uri"]]],["^1>","lambdaisland/glogi.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$goog.log","~$goog.debug.Console","~$goog.array","^2;","~$goog.object","~$goog.debug.FancyWindow","~$goog.debug.DivConsole"]]],["^1>","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.asserts"]]],["^1>","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.string"]]],["^1>","malli/registry.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2?","^2@","^2L","^2>","^2A","^2B"]]],["^1>","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2>"]]],["^1>","goog/style/style.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.safe","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^2I","~$goog.reflect","^2M","~$goog.userAgent"]]],["^1>","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L"]]],["^1>","metabase/lib/schema/mbql_clause.cljc"],["e5bdd00c58db706b1219843528fd3cd9dd8ab728","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$metabase.lib.schema.common","^X","^11","~$metabase.util.malli","^Z"]]],["^1>","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2?","^30","^2>"]]],["^1>","malli/generator.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^F","^2;","~$clojure.test.check","~$clojure.test.check.generators","~$clojure.test.check.properties","~$clojure.test.check.random","~$clojure.test.check.rose-tree","~$malli.core","~$malli.registry"]]],["^1>","clojure/test/check/properties.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^38","~$clojure.test.check.results"]]],["^1>","clojure/test/check/generators.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2;","^3:","^3;","^2M"]]],["^1>","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","malli/util.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^D","^3<"]]],["^1>","clojure/test/check/random/doubles.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$clojure.test.check.random.longs"]]],["^1>","net/cgrand/macrovich.cljc"],["abcb26cbfe0f8eef363b25525210c0fe1eb1f693","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","malli/destructure.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$clojure.walk","^3<","~$malli.impl.util"]]],["^1>","goog/structs/circularbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","weavejester/dependency.cljc"],["7fd7f8879313f6a7e295f7447e668bdf492c42c1","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^T"]]],["^1>","metabase/lib/schema/common.cljc"],["3f51a06335a7cb84c835d859c422919499874414","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2;","^11","^Z"]]],["^1>","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2?","^2>"]]],["^1>","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2;","^2M","~$goog.string.StringBuffer"]]],["^1>","clojure/test/check/rose_tree.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","clojure/test/check/impl.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","camel_snake_kebab/internals/string_separator.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2;"]]],["^1>","clojure/test/check/random.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$clojure.test.check.random.doubles","^3?"]]],["^1>","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^1>","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^30"]]],["^1>","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","~$goog.fs.blob","^2N","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2P","^2Q"]]],["^1>","metabase/util/format.cljc"],["875f86a08288cb3ad5a6f15df988897eaf8613af","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2M"]]],["^1>","goog/math/irect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/math/box.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^2Y"]]],["^1>","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","clojure/test/check.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^38","^3:","^3>","^3;","~$clojure.test.check.impl"]]],["^1>","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2P","~$goog.html.SafeUrl","^2Q","^2L","^2>"]]],["^1>","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3F","~$goog.html.SafeStyle","^3I","^2O","~$goog.html.uncheckedconversions","^2P","^2>"]]],["^1>","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2T","^2L","~$goog.dom.element"]]],["^1>","medley/core.cljc"],["f5117fa4c15ff14c4a0ab7db414b0f102afb0b8a","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","metabase/lib/schema/expression/conditional.cljc"],["226c4623394b90853fcb014e9a95e84ffc8bd6db","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^T","^X","^V","^11","^Z"]]],["^1>","lambdaisland/glogi/console.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$lambdaisland.glogi","~$lambdaisland.glogi.print","^2I","^2G"]]],["^1>","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2P","^3F","^3N","^2W","^3I","^2T","^2O","^2Q","^2L","^34","^2H","^2I","^2>","~$goog.dom.tags","^3G"]]],["^1>","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2I"]]],["^1>","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","malli/error.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2;","^3<","~$malli.util"]]],["^1>","metabase/lib/dispatch.cljc"],["914208cd51b78412eff1b402519bbb422845497a","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2D"]]],["^1>","metabase/util/malli.cljc"],["0f9ba23be6bb9fa629617001e985b988d2322b17","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^D","^3<","~$malli.destructure","~$malli.error","~$malli.generator","^3T","~$metabase.shared.util.i18n","^2D"]]],["^1>","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2H","^2>","^2?"]]],["^1>","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2H","^2L","^3J","~$goog.dom.BrowserFeature","^2S","^2T","^2U","^3M","^3O","^2Y","^2[","^2I","^2M","^2P","~$goog.string.Unicode","^31"]]],["^1>","borkdude/dynaload.cljc"],["accd696ba364b850b4d92e38f5a34d0e828a0ad1","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","metabase/util/log.cljs"],["7d8a3bf01eb27c2ba7269dc90dc218e46bcc1d3a","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2F","^2M","~$goog.string.format","^3Q","~$lambdaisland.glogi.console"]]],["^1>","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.debug.Error","^2S"]]],["^1>","goog/debug/relativetimeprovider.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","malli/sci.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$borkdude.dynaload"]]],["^1>","metabase/lib/schema/expression.cljc"],["f5c5c3ff3dc0f9a8b407cd7d06a68c6787061991","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$metabase.lib.dispatch","~$metabase.lib.hierarchy","^32","^3X","^11","^33","^Z"]]],["^1>","goog/math/rect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^2X","^2Y","~$goog.math.IRect","^2["]]],["^1>","flatland/ordered/map.cljs"],["3a9cb9d79e47d77ecd4f4d550371ecf01464c461","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2H","^2L","~$goog.collections.maps","^2M","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1>","metabase/util/malli/registry.cljc"],["921d4f259bbe54cbeb6b88ae56937df492bdfb5e","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^3<","^3=","^3T"]]],["^1>","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2@"]]],["^1>","metabase/types/coercion_hierarchies.cljc"],["c3d70ef6080e044d61f13ff6bfd76490e2dcd0ac","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^T"]]],["^1>","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/debug/divconsole.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.debug.HtmlFormatter","~$goog.dom.DomHelper","^2T","^2U","^3M","^2W","^2F","^2P","~$goog.style"]]],["^1>","malli/impl/util.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","goog/debug/fancywindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2H","^2L","~$goog.debug.DebugWindow","^4<","^2T","^2U","^3M","^2W","^2F","^2I","^2M","^2P","^31"]]],["^1>","goog/debug/formatter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.debug","~$goog.debug.RelativeTimeProvider","^3M","^3I","^3O","^2F","^2P"]]],["^1>","metabase/shared/util/namespaces.cljs"],["00687008abd6eb291bc9d5ff1fff73210e0bbe6e","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",[]]],["^1>","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2H","^2I"]]],["^1>","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^2M","^3B"]]],["^1>","metabase/util.cljc"],["2eb945a6741f1450ecac08a9087b862ce52b9e3a","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$camel-snake-kebab.internals.macros","~$clojure.data","^@","^T","^2;","^3@","~$flatland.ordered.map","~$medley.core","^3X","~$metabase.shared.util.namespaces","~$metabase.util.format","~$metabase.util.log","~$net.cgrand.macrovich","~$weavejester.dependency"]]],["^1>","clojure/test/check/random/longs/bit_count_impl.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","malli/impl/regex.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^3A"]]],["^1>","camel_snake_kebab/internals/macros.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$camel-snake-kebab.internals.alter-name","~$camel-snake-kebab.internals.misc"]]],["^1>","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2U","^3O","^2P","^2>"]]],["^1>","malli/core.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^D","~$malli.impl.regex","^3A","^3=","~$malli.sci"]]],["^1>","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^T"]]],["^1>","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2>","^2B"]]],["^1>","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2H","~$goog.debug.errorcontext"]]],["^1>","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["~:shadow.build.js-support/require","ttag"],["^2=","shadow.js.shim.module$ttag.js","require","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.math"]]],["^1>","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.flags"]]],["^1>","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2S","^2T"]]],["^1>","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^3M","^3F","^3N","^2W","^3I","^2O","^2P","^2>"]]],["^1>","goog/debug/debugwindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^4;","^2U","^3M","^2W","^2F","^2P","~$goog.structs.CircularBuffer","^31"]]],["^1>","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y"]]],["^1>","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.math.Long","~$goog.math.Integer","^2M","^2I","^2H","^2E","^3B"]]],["^1>","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2P","^2Q","^3G","^2L"]]],["^1>","clojure/test/check/random/longs.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","~$clojure.test.check.random.longs.bit-count-impl","^4S","^D"]]],["^1>","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^4?"]]],["^1>","camel_snake_kebab/internals/alter_name.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2P","^3N","^2Q","^2I","^2L","^2>"]]],["^1>","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^30"]]],["^1>","goog/debug/console.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","~$goog.debug.TextFormatter","^2F"]]],["^1>","lambdaisland/glogi/print.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D","^3Q","^2I"]]],["^1>","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^31"]]],["^1>","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^2M"]]],["^1>","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2L","^2Q"]]],["^1>","goog/dom/vendor.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^2M","^31"]]],["^1>","metabase/lib/hierarchy.cljc"],["c9d228603522de5c85546fb645c59736d4eb94d2","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]],["^1>","clojure/test/check/results.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^26",["^ ","^27",null,"^28",["^K",[]],"^29",["^Y","^D"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/line_col.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/viz.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/parse.cljc",1689946139000,"jar:file:/root/.m2/repository/weavejester/dependency/0.2.1/dependency-0.2.1.jar!/weavejester/dependency.cljc",1689946093000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/transform.clj",1689946146000,"jar:file:/root/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar!/ring/util/codec.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/hierarchy.cljc",1690286812000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/core.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/i18n.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/macros.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/plural.clj",1690286813000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/core.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util.cljc",1690286813000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/core.cljc",1689946171000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/dispatch.cljc",1690286812000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/schema/common.cljc",1690286812000,"file:/home/gmrworkspace/dashboard/src/metabase/plugins/classloader.clj",1692013156125,"jar:file:/root/.m2/repository/medley/medley/1.4.0/medley-1.4.0.jar!/medley/core.cljc",1689946185000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/random.clj",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util/format.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/walk.clj",1689946160000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/reduction.clj",1689946146000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/util.clj",1689946174000,"jar:file:/root/.m2/repository/camel-snake-kebab/camel-snake-kebab/0.4.3/camel-snake-kebab-0.4.3.jar!/camel_snake_kebab/internals/macros.cljc",1689946178000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/auto_flatten_seq.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/core.clj",1689946146000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/generator.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar!/clojure/core/cache.clj",1689946183000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/schema/expression.cljc",1690286812000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/sci.cljc",1689946170000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin/types.clj",1689946176000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/properties.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/math.numeric-tower/0.0.5/math.numeric-tower-0.0.5.jar!/clojure/math/numeric_tower.clj",1689946148000,"jar:file:/root/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1689946165000,"jar:file:/root/.m2/repository/colorize/colorize/0.1.1/colorize-0.1.1.jar!/colorize/core.clj",1689946104000,"jar:file:/root/.m2/repository/borkdude/dynaload/0.3.5/dynaload-0.3.5.jar!/borkdude/dynaload.cljc",1689946165000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin.clj",1689946176000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/failure.clj",1689946146000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/variant.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/impl.clj",1692013156125,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/dependency.cljc",1689946139000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/leaf.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check.cljc",1689946177000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/compiler.clj",1689946160000,"jar:file:/root/.m2/repository/org/clojure/core.memoize/1.0.257/core.memoize-1.0.257.jar!/clojure/core/memoize.clj",1689946178000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/destructure.cljc",1689946170000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/print.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/track.cljc",1689946139000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar!/clojure/java/classpath.clj",1689946162000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/impl/regex.cljc",1689946170000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/factory.clj",1689946173000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689946174000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/experimental.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1689946174000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/core.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/generators.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/experimental/time.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/parse.clj",1689946173000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n.clj",1692013156125,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/cfg.clj",1689946146000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/core.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/impl/util.cljc",1689946170000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/registry.cljc",1689946170000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/gll.clj",1689946146000,"jar:file:/root/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1689947054000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/instrument.clj",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/random.cljc",1689946171000,"jar:file:/root/.m2/repository/environ/environ/1.2.0/environ-1.2.0.jar!/environ/core.cljc",1689946163000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/collection.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/repeat.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/results.cljc",1689946177000,"jar:file:/root/.m2/repository/com/lambdaisland/glogi/1.2.164/glogi-1.2.164.jar!/lambdaisland/glogi.clj",1689947043000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/namespaces.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/file.clj",1689946139000,"jar:file:/root/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1689946117000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/error.cljc",1689946170000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/utils.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/malli/registry.cljc",1690286813000,"file:/home/gmrworkspace/dashboard/src/metabase/config.clj",1692013154929,"file:/home/gmrworkspace/dashboard/src/metabase/util/log.clj",1690286813000,"file:/home/gmrworkspace/dashboard/src/metabase/util/malli.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/rose_tree.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689946174000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/combinators_source.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/abnf.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/find.clj",1689946139000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/dynamic_classpath.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate_seq.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/util.cljc",1689946170000,"file:/home/gmrworkspace/dashboard/src/metabase/util/jvm.clj",1692013156125],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Conditional expressions like `:case` and `:coalesce`.","^7","metabase/lib/schema/expression/conditional.cljc","^8",1,"^9",5,"^:",1,"^;",47],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",[]],"^L","^M","^N",["^ "],"^Q",null,"^R",["^ ","^S","^T","^U","^V","^D","^D","^W","^X","^Y","^Y","^V","^V","^Z","^Z","^X","^X","^T","^T","^[","^Z","^10","^11","^11","^11"],"^12",["^K",["^13"]],"^14",null,"~:defs",["^ ","~$best-return-type",["^ ","~:protocol-inline",null,"^5",["^ ","^7","metabase/lib/schema/expression/conditional.cljc","^8",14,"^9",8,"^:",14,"^;",24,"~:private",true,"~:arglists",["^17",["~$quote",["^17",[["~$x","~$y"]]]]],"^6","For expressions like `:case` and `:coalesce` that can return different possible expressions, determine the best\n  return type given all of the various options."],"^7V",true,"^L","^23","^7","metabase/lib/schema/expression/conditional.cljc","^;",24,"~:method-params",["^17",[["~$x","~$y"]]],"~:protocol-impl",null,"~:arglists-meta",["^17",[null,null]],"^9",1,"~:variadic?",false,"^8",14,"~:ret-tag",["^K",[null,"~$any","^1R"]],"^:",14,"~:max-fixed-arity",2,"~:fn-var",true,"^7W",["^17",["^7X",["^17",[["~$x","~$y"]]]]],"^6","For expressions like `:case` and `:coalesce` that can return different possible expressions, determine the best\n  return type given all of the various options."]],"^15",["^ ","^D","^D","^W","^X","^Z","^Z","^X","^X","^[","^Z"],"~:cljs.analyzer/constants",["^ ","^12",["^K",["~:metabase.lib.schema.expression/boolean","~:schema","~:min","~:metabase.lib.schema.expression.conditional/case-subclause","~:exprs","~:else","~:ref","~:default","~:sequential","~:tuple","~:coalesce","~:?","~:metabase.lib.schema.expression/expression","~:case","~:error/message","~:repeat","~:pred-expr-pairs","~:metabase.lib.schema.expression/type.unknown"]],"~:order",["^8F","^8;","^89","^8?","^8C","^8<","^86","^8A","^8B","^8E","^8>","^88","^8=","~:?","^87","^8@","^8:","^8D"]],"^1:",["^ ","^13",["^K",[]]],"^1;",["^ "],"^1<",["^Y","^D","^T","^X","^V","^11","^Z"]],"^P","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^25",[["^8J","~:static-fns"],true,["^8J","~:shadow-tweaks"],null,["^8J","~:source-map-inline"],null,["^8J","~:elide-asserts"],false,["^8J","~:optimize-constants"],null,["^8J","^1A"],null,["^8J","~:external-config"],null,["^8J","~:tooling-config"],null,["^8J","~:emit-constants"],null,["^8J","~:load-tests"],null,["^8J","~:form-size-threshold"],null,["^8J","~:global-goog-object&array"],null,["^8J","~:data-readers"],null,["^8J","~:infer-externs"],"~:auto",["^8J","^1C"],["^K",["^1D","^1E"]],["~:js-options","~:js-provider"],"^13",["~:mode"],"~:dev",["^8J","~:fn-invoke-direct"],null,["^8J","~:source-map"],"/dev/null"]]]