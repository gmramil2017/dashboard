["^ ","~:output",["^ ","~:js","goog.provide('metabase.lib.schema.expression.arithmetic');\nmetabase.lib.schema.expression.arithmetic.valid_interval_for_type_QMARK_ = (function metabase$lib$schema$expression$arithmetic$valid_interval_for_type_QMARK_(p__60448,expr_type){\nvar vec__60450 = p__60448;\nvar _tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60450,(0),null);\nvar _opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60450,(1),null);\nvar _n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60450,(2),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60450,(3),null);\nvar _interval = vec__60450;\nvar unit_schema = ((cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(expr_type,new cljs.core.Keyword(\"type\",\"Date\",\"type/Date\",-690428629)))?new cljs.core.Keyword(\"metabase.lib.schema.temporal-bucketing\",\"unit.date.interval\",\"metabase.lib.schema.temporal-bucketing/unit.date.interval\",-1463811525):((cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(expr_type,new cljs.core.Keyword(\"type\",\"Time\",\"type/Time\",-814852413)))?new cljs.core.Keyword(\"metabase.lib.schema.temporal-bucketing\",\"unit.time.interval\",\"metabase.lib.schema.temporal-bucketing/unit.time.interval\",-718964325):((cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(expr_type,new cljs.core.Keyword(\"type\",\"DateTime\",\"type/DateTime\",352113310)))?new cljs.core.Keyword(\"metabase.lib.schema.temporal-bucketing\",\"unit.date-time.interval\",\"metabase.lib.schema.temporal-bucketing/unit.date-time.interval\",659301368):null)));\nif(cljs.core.truth_(unit_schema)){\nreturn malli.core.validate.cljs$core$IFn$_invoke$arity$2(unit_schema,unit);\n} else {\nreturn true;\n}\n});\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema.expression.arithmetic\",\"args.temporal\",\"metabase.lib.schema.expression.arithmetic/args.temporal\",1338604923),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catn\",\"catn\",-48807277),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"temporal\",\"metabase.lib.schema.expression/temporal\",320116754)], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"intervals\",\"intervals\",2096054013),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"+\",\"+\",1913524883),new cljs.core.Keyword(\"mbql.clause\",\"interval\",\"mbql.clause/interval\",-990446354)], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\"Temporal arithmetic expression with valid interval units for the expression type\"], null),(function (p__60458){\nvar vec__60459 = p__60458;\nvar seq__60460 = cljs.core.seq(vec__60459);\nvar first__60461 = cljs.core.first(seq__60460);\nvar seq__60460__$1 = cljs.core.next(seq__60460);\nvar expr = first__60461;\nvar intervals = seq__60460__$1;\nvar expr_type = metabase.lib.schema.expression.type_of(expr);\nreturn cljs.core.every_QMARK_((function (p1__60457_SHARP_){\nreturn metabase.lib.schema.expression.arithmetic.valid_interval_for_type_QMARK_(p1__60457_SHARP_,expr_type);\n}),intervals);\n})], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema.expression.arithmetic\",\"args.numbers\",\"metabase.lib.schema.expression.arithmetic/args.numbers\",-179216621),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"repeat\",\"repeat\",832692087),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], null));\n/**\n * Validate a `:+` or `:-` expression with temporal args. Return a string describing any errors found, or `nil` if it\n *   looks ok.\n */\nmetabase.lib.schema.expression.arithmetic.validate_plus_minus_temporal_arithmetic_expression = (function metabase$lib$schema$expression$arithmetic$validate_plus_minus_temporal_arithmetic_expression(p__60463){\nvar vec__60464 = p__60463;\nvar seq__60465 = cljs.core.seq(vec__60464);\nvar first__60466 = cljs.core.first(seq__60465);\nvar seq__60465__$1 = cljs.core.next(seq__60465);\nvar _tag = first__60466;\nvar first__60466__$1 = cljs.core.first(seq__60465__$1);\nvar seq__60465__$2 = cljs.core.next(seq__60465__$1);\nvar _opts = first__60466__$1;\nvar exprs = seq__60465__$2;\nvar map__60467 = cljs.core.group_by((function (p1__60462_SHARP_){\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.type_of(p1__60462_SHARP_),new cljs.core.Keyword(\"type\",\"Interval\",\"type/Interval\",-365323617));\n}),exprs);\nvar map__60467__$1 = cljs.core.__destructure_map(map__60467);\nvar non_intervals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60467__$1,false);\nvar intervals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60467__$1,true);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(non_intervals),(1))){\nreturn \"Temporal arithmetic expression must contain exactly one non-interval value\";\n} else {\nif((cljs.core.count(intervals) < (1))){\nreturn \"Temporal arithmetic expression must contain at least one :interval\";\n} else {\nvar expr_type = metabase.lib.schema.expression.type_of(cljs.core.first(non_intervals));\nreturn cljs.core.some((function (p__60468){\nvar vec__60469 = p__60468;\nvar _tag__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60469,(0),null);\nvar _opts__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60469,(1),null);\nvar _n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60469,(2),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60469,(3),null);\nvar interval = vec__60469;\nif(cljs.core.truth_(metabase.lib.schema.expression.arithmetic.valid_interval_for_type_QMARK_(interval,expr_type))){\nreturn null;\n} else {\nreturn [\"Cannot add a \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit),\" interval to a \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr_type),\" expression\"].join('');\n}\n}),intervals);\n\n}\n}\n});\n/**\n * Create a schema for `:+` or `:-` with temporal args: <temporal> Â± <interval(s)> in any order\n */\nmetabase.lib.schema.expression.arithmetic.plus_minus_temporal_schema = (function metabase$lib$schema$expression$arithmetic$plus_minus_temporal_schema(tag){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\" clause with a temporal expression and one or more :interval clauses\"].join('')], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cat\",\"cat\",-1457810207),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"=\",\"=\",1152933628),tag], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.common\",\"options\",\"metabase.lib.schema.common/options\",-1078359294)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"repeat\",\"repeat\",832692087),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"mbql.clause\",\"interval\",\"mbql.clause/interval\",-990446354)], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"temporal\",\"metabase.lib.schema.expression/temporal\",320116754)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"repeat\",\"repeat\",832692087),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"mbql.clause\",\"interval\",\"mbql.clause/interval\",-990446354)], null)], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"fn\",\"error/fn\",-1263293860),(function (p__60476,_){\nvar map__60477 = p__60476;\nvar map__60477__$1 = cljs.core.__destructure_map(map__60477);\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60477__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nreturn [\"Invalid \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\" clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(metabase.lib.schema.expression.arithmetic.validate_plus_minus_temporal_arithmetic_expression(value))].join('');\n})], null),cljs.core.complement(metabase.lib.schema.expression.arithmetic.validate_plus_minus_temporal_arithmetic_expression)], null)], null);\n});\n/**\n * Create a schema for `:+` or `:-` with numeric args.\n */\nmetabase.lib.schema.expression.arithmetic.plus_minus_numeric_schema = (function metabase$lib$schema$expression$arithmetic$plus_minus_numeric_schema(tag){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cat\",\"cat\",-1457810207),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\" clause with numeric args\"].join('')], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"=\",\"=\",1152933628),tag], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.common\",\"options\",\"metabase.lib.schema.common/options\",-1078359294)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"repeat\",\"repeat\",832692087),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], null)], null);\n});\nmetabase.lib.schema.expression.arithmetic.plus_minus_schema = (function metabase$lib$schema$expression$arithmetic$plus_minus_schema(tag){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"or\",\"or\",235744169),metabase.lib.schema.expression.arithmetic.plus_minus_temporal_schema(tag),metabase.lib.schema.expression.arithmetic.plus_minus_numeric_schema(tag)], null);\n});\n/**\n * Given a sequence of args to a numeric arithmetic expression like `:+`, determine the type returned by the expression\n *   by calculating the most-specific common ancestor type of all the args. E.g. `[:+ ... 2.0 2.0]` has two `:type/Float`\n *   args, and thus the most-specific common ancestor type is `:type/Float`. `[:+ ... 2.0 2]` has a `:type/Float` and a\n *   `:type/Integer` arg; the most-specific common ancestor type is `:type/Number`. For refs without type\n *   information (e.g. `:field` clauses), assume `:type/Number`.\n */\nmetabase.lib.schema.expression.arithmetic.type_of_numeric_arithmetic_args = (function metabase$lib$schema$expression$arithmetic$type_of_numeric_arithmetic_args(args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(metabase.types.most_specific_common_ancestor,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (expr){\nvar expr_type = metabase.lib.schema.expression.type_of(expr);\nif(cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(expr_type,new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"type.unknown\",\"metabase.lib.schema.expression/type.unknown\",-98159107));\nif(and__5043__auto__){\nreturn malli.core.validate.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"metabase.lib.schema.ref\",\"ref\",\"metabase.lib.schema.ref/ref\",-1124116498),expr);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn new cljs.core.Keyword(\"type\",\"Number\",\"type/Number\",-2071693690);\n} else {\nreturn expr_type;\n}\n}),args));\n});\n/**\n * Given a temporal value plus one or more intervals `args` passed to an arithmetic expression like `:+`, determine the\n *   overall type returned by the expression. This is the type of the temporal value (the arg that is not an interval),\n *   or assume `:type/Temporal` if it is a ref without type information.\n */\nmetabase.lib.schema.expression.arithmetic.type_of_temporal_arithmetic_args = (function metabase$lib$schema$expression$arithmetic$type_of_temporal_arithmetic_args(args){\nvar first_non_interval_arg_type = medley.core.find_first.cljs$core$IFn$_invoke$arity$2((function (p1__60479_SHARP_){\nreturn (!(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(p1__60479_SHARP_,new cljs.core.Keyword(\"type\",\"Interval\",\"type/Interval\",-365323617))));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.type_of,args));\nif(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(first_non_interval_arg_type,new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"type.unknown\",\"metabase.lib.schema.expression/type.unknown\",-98159107))){\nreturn new cljs.core.Keyword(\"type\",\"Temporal\",\"type/Temporal\",-237169010);\n} else {\nreturn first_non_interval_arg_type;\n}\n});\n/**\n * Given a sequence of `args` to an arithmetic expression like `:+`, determine the overall type that the expression\n *   returns. There are two types of arithmetic expressions:\n * \n *   * Ones consisting of numbers. See [[type-of-numeric-arithmetic-args]].\n * \n *   * Ones consisting of a temporal value like a Date plus one or more `:interval` clauses, in any order. See\n *  [[type-of-temporal-arithmetic-args]].\n */\nmetabase.lib.schema.expression.arithmetic.type_of_arithmetic_args = (function metabase$lib$schema$expression$arithmetic$type_of_arithmetic_args(args){\nif(cljs.core.truth_(cljs.core.some((function (p1__60481_SHARP_){\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.type_of(p1__60481_SHARP_),new cljs.core.Keyword(\"type\",\"Interval\",\"type/Interval\",-365323617));\n}),args))){\nreturn metabase.lib.schema.expression.arithmetic.type_of_temporal_arithmetic_args(args);\n} else {\nreturn metabase.lib.schema.expression.arithmetic.type_of_numeric_arithmetic_args(args);\n}\n});\nmetabase.lib.schema.mbql_clause.define_mbql_clause.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"+\",\"+\",1913524883),metabase.lib.schema.expression.arithmetic.plus_minus_schema(new cljs.core.Keyword(null,\"+\",\"+\",1913524883)));\nmetabase.lib.schema.mbql_clause.define_mbql_clause.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),metabase.lib.schema.expression.arithmetic.plus_minus_schema(new cljs.core.Keyword(null,\"-\",\"-\",-2112348439)));\nmetabase.lib.schema.mbql_clause.define_catn_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"*\",\"*\",-1294732318),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"metabase.lib.schema.expression.arithmetic\",\"args.numbers\",\"metabase.lib.schema.expression.arithmetic/args.numbers\",-179216621)], null)], 0));\nmetabase.lib.schema.mbql_clause.define_catn_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"/\",\"/\",1282502798),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),new cljs.core.Keyword(\"type\",\"Float\",\"type/Float\",1261800143),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"metabase.lib.schema.expression.arithmetic\",\"args.numbers\",\"metabase.lib.schema.expression.arithmetic/args.numbers\",-179216621)], null)], 0));\nvar seq__60486_60527 = cljs.core.seq(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"+\",\"+\",1913524883),new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),new cljs.core.Keyword(null,\"*\",\"*\",-1294732318)], null));\nvar chunk__60487_60528 = null;\nvar count__60488_60529 = (0);\nvar i__60489_60530 = (0);\nwhile(true){\nif((i__60489_60530 < count__60488_60529)){\nvar tag_60531 = chunk__60487_60528.cljs$core$IIndexed$_nth$arity$2(null,i__60489_60530);\nmetabase.lib.hierarchy.derive(tag_60531,new cljs.core.Keyword(\"lib.type-of\",\"type-is-type-of-arithmetic-args\",\"lib.type-of/type-is-type-of-arithmetic-args\",-626871615));\n\n\nvar G__60532 = seq__60486_60527;\nvar G__60533 = chunk__60487_60528;\nvar G__60534 = count__60488_60529;\nvar G__60535 = (i__60489_60530 + (1));\nseq__60486_60527 = G__60532;\nchunk__60487_60528 = G__60533;\ncount__60488_60529 = G__60534;\ni__60489_60530 = G__60535;\ncontinue;\n} else {\nvar temp__5804__auto___60536 = cljs.core.seq(seq__60486_60527);\nif(temp__5804__auto___60536){\nvar seq__60486_60537__$1 = temp__5804__auto___60536;\nif(cljs.core.chunked_seq_QMARK_(seq__60486_60537__$1)){\nvar c__5568__auto___60538 = cljs.core.chunk_first(seq__60486_60537__$1);\nvar G__60539 = cljs.core.chunk_rest(seq__60486_60537__$1);\nvar G__60540 = c__5568__auto___60538;\nvar G__60541 = cljs.core.count(c__5568__auto___60538);\nvar G__60542 = (0);\nseq__60486_60527 = G__60539;\nchunk__60487_60528 = G__60540;\ncount__60488_60529 = G__60541;\ni__60489_60530 = G__60542;\ncontinue;\n} else {\nvar tag_60543 = cljs.core.first(seq__60486_60537__$1);\nmetabase.lib.hierarchy.derive(tag_60543,new cljs.core.Keyword(\"lib.type-of\",\"type-is-type-of-arithmetic-args\",\"lib.type-of/type-is-type-of-arithmetic-args\",-626871615));\n\n\nvar G__60544 = cljs.core.next(seq__60486_60537__$1);\nvar G__60545 = null;\nvar G__60546 = (0);\nvar G__60547 = (0);\nseq__60486_60527 = G__60544;\nchunk__60487_60528 = G__60545;\ncount__60488_60529 = G__60546;\ni__60489_60530 = G__60547;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\nmetabase.lib.schema.expression.type_of_method.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(\"lib.type-of\",\"type-is-type-of-arithmetic-args\",\"lib.type-of/type-is-type-of-arithmetic-args\",-626871615),(function (p__60493){\nvar vec__60497 = p__60493;\nvar seq__60498 = cljs.core.seq(vec__60497);\nvar first__60499 = cljs.core.first(seq__60498);\nvar seq__60498__$1 = cljs.core.next(seq__60498);\nvar _tag = first__60499;\nvar first__60499__$1 = cljs.core.first(seq__60498__$1);\nvar seq__60498__$2 = cljs.core.next(seq__60498__$1);\nvar _opts = first__60499__$1;\nvar args = seq__60498__$2;\nreturn metabase.lib.schema.expression.arithmetic.type_of_arithmetic_args(args);\n}));\nmetabase.lib.schema.mbql_clause.define_tuple_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"abs\",\"abs\",-246026477),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], 0));\nmetabase.lib.hierarchy.derive(new cljs.core.Keyword(null,\"abs\",\"abs\",-246026477),new cljs.core.Keyword(\"lib.type-of\",\"type-is-type-of-first-arg\",\"lib.type-of/type-is-type-of-first-arg\",-317600808));\nvar seq__60500_60548 = cljs.core.seq(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),new cljs.core.Keyword(null,\"exp\",\"exp\",-261706262),new cljs.core.Keyword(null,\"sqrt\",\"sqrt\",-1270051929)], null));\nvar chunk__60501_60549 = null;\nvar count__60502_60550 = (0);\nvar i__60503_60551 = (0);\nwhile(true){\nif((i__60503_60551 < count__60502_60550)){\nvar op_60552 = chunk__60501_60549.cljs$core$IIndexed$_nth$arity$2(null,i__60503_60551);\nmetabase.lib.schema.mbql_clause.define_tuple_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(op_60552,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),new cljs.core.Keyword(\"type\",\"Float\",\"type/Float\",1261800143),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], 0));\n\n\nvar G__60553 = seq__60500_60548;\nvar G__60554 = chunk__60501_60549;\nvar G__60555 = count__60502_60550;\nvar G__60556 = (i__60503_60551 + (1));\nseq__60500_60548 = G__60553;\nchunk__60501_60549 = G__60554;\ncount__60502_60550 = G__60555;\ni__60503_60551 = G__60556;\ncontinue;\n} else {\nvar temp__5804__auto___60557 = cljs.core.seq(seq__60500_60548);\nif(temp__5804__auto___60557){\nvar seq__60500_60558__$1 = temp__5804__auto___60557;\nif(cljs.core.chunked_seq_QMARK_(seq__60500_60558__$1)){\nvar c__5568__auto___60559 = cljs.core.chunk_first(seq__60500_60558__$1);\nvar G__60560 = cljs.core.chunk_rest(seq__60500_60558__$1);\nvar G__60561 = c__5568__auto___60559;\nvar G__60562 = cljs.core.count(c__5568__auto___60559);\nvar G__60563 = (0);\nseq__60500_60548 = G__60560;\nchunk__60501_60549 = G__60561;\ncount__60502_60550 = G__60562;\ni__60503_60551 = G__60563;\ncontinue;\n} else {\nvar op_60564 = cljs.core.first(seq__60500_60558__$1);\nmetabase.lib.schema.mbql_clause.define_tuple_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(op_60564,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),new cljs.core.Keyword(\"type\",\"Float\",\"type/Float\",1261800143),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], 0));\n\n\nvar G__60565 = cljs.core.next(seq__60500_60558__$1);\nvar G__60566 = null;\nvar G__60567 = (0);\nvar G__60568 = (0);\nseq__60500_60548 = G__60565;\nchunk__60501_60549 = G__60566;\ncount__60502_60550 = G__60567;\ni__60503_60551 = G__60568;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\nvar seq__60504_60569 = cljs.core.seq(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ceil\",\"ceil\",-1824929952),new cljs.core.Keyword(null,\"floor\",\"floor\",1882041021),new cljs.core.Keyword(null,\"round\",\"round\",2009433328)], null));\nvar chunk__60505_60570 = null;\nvar count__60506_60571 = (0);\nvar i__60507_60572 = (0);\nwhile(true){\nif((i__60507_60572 < count__60506_60571)){\nvar op_60573 = chunk__60505_60570.cljs$core$IIndexed$_nth$arity$2(null,i__60507_60572);\nmetabase.lib.schema.mbql_clause.define_tuple_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(op_60573,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),new cljs.core.Keyword(\"type\",\"Integer\",\"type/Integer\",-638928316),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], 0));\n\n\nvar G__60574 = seq__60504_60569;\nvar G__60575 = chunk__60505_60570;\nvar G__60576 = count__60506_60571;\nvar G__60577 = (i__60507_60572 + (1));\nseq__60504_60569 = G__60574;\nchunk__60505_60570 = G__60575;\ncount__60506_60571 = G__60576;\ni__60507_60572 = G__60577;\ncontinue;\n} else {\nvar temp__5804__auto___60578 = cljs.core.seq(seq__60504_60569);\nif(temp__5804__auto___60578){\nvar seq__60504_60580__$1 = temp__5804__auto___60578;\nif(cljs.core.chunked_seq_QMARK_(seq__60504_60580__$1)){\nvar c__5568__auto___60581 = cljs.core.chunk_first(seq__60504_60580__$1);\nvar G__60582 = cljs.core.chunk_rest(seq__60504_60580__$1);\nvar G__60583 = c__5568__auto___60581;\nvar G__60584 = cljs.core.count(c__5568__auto___60581);\nvar G__60585 = (0);\nseq__60504_60569 = G__60582;\nchunk__60505_60570 = G__60583;\ncount__60506_60571 = G__60584;\ni__60507_60572 = G__60585;\ncontinue;\n} else {\nvar op_60586 = cljs.core.first(seq__60504_60580__$1);\nmetabase.lib.schema.mbql_clause.define_tuple_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(op_60586,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"-\",\"-\",-2112348439),new cljs.core.Keyword(\"type\",\"Integer\",\"type/Integer\",-638928316),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], 0));\n\n\nvar G__60587 = cljs.core.next(seq__60504_60580__$1);\nvar G__60588 = null;\nvar G__60589 = (0);\nvar G__60590 = (0);\nseq__60504_60569 = G__60587;\nchunk__60505_60570 = G__60588;\ncount__60506_60571 = G__60589;\ni__60507_60572 = G__60590;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\nmetabase.lib.schema.mbql_clause.define_tuple_mbql_clause.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"power\",\"power\",-937852079),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"number\",\"metabase.lib.schema.expression/number\",779948930)], null)], null)], 0));\nmetabase.lib.schema.expression.type_of_method.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"power\",\"power\",-937852079),(function (p__60512){\nvar vec__60513 = p__60512;\nvar _tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60513,(0),null);\nvar _opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60513,(1),null);\nvar expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60513,(2),null);\nvar exponent = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60513,(3),null);\nif(((cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.type_of(expr),new cljs.core.Keyword(\"type\",\"Integer\",\"type/Integer\",-638928316))) && (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression.type_of(exponent),new cljs.core.Keyword(\"type\",\"Integer\",\"type/Integer\",-638928316))))){\nreturn new cljs.core.Keyword(\"type\",\"Integer\",\"type/Integer\",-638928316);\n} else {\nreturn new cljs.core.Keyword(\"type\",\"Float\",\"type/Float\",1261800143);\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Arithmetic expressions like `:+`.","~:file","metabase/lib/schema/expression/arithmetic.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",46],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$metabase.lib.schema.expression.arithmetic","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mc","~$malli.core","~$mbql-clause","~$metabase.lib.schema.mbql-clause","^D","^D","~$expression","~$metabase.lib.schema.expression","~$goog","^Y","^V","^V","~$metabase.util.malli.registry","^Z","~$metabase.lib.schema.common","^[","^T","^T","^X","^X","~$lib.hierarchy","~$metabase.lib.hierarchy","~$m","~$medley.core","~$temporal-bucketing","~$metabase.lib.schema.temporal-bucketing","~$mr","^Z","~$types","~$metabase.types","~$common","^[","^11","^11","^14","^14","^12","^12","^17","^17"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^S","^T","^W","^X","^Z","^Z","^T","^T","^X","^X","^15","^Z"],"~:form",["~#list",["~$ns","^M","Arithmetic expressions like `:+`.",["^1>",["^1:",["^T","~:as","^S"],["^12","^1@","~$m"],["^11","^1@","^10"],["^[","^1@","^18"],["^X","^1@","^W"],["^V","^1@","^U"],["^14","^1@","^13"],["^17","^1@","^16"],["^Z","^1@","^15"]]]]],"~:flags",["^ ","^1:",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^D","^T","^12","^11","^[","^X","^V","^14","^17","^Z"]],"^P","^M","~:resource-id",["~:shadow.build.classpath/resource","metabase/lib/schema/expression/arithmetic.cljc"],"~:compiled-at",1692014614182,"^N",["^ ","^S","^T","^U","^V","^D","^D","^W","^X","^Y","^Y","^V","^V","^Z","^Z","^[","^[","^T","^T","^X","^X","^10","^11","~$m","^12","^13","^14","^15","^Z","^16","^17","^18","^[","^11","^11","^14","^14","^12","^12","^17","^17"],"~:resource-name","metabase/lib/schema/expression/arithmetic.cljc","~:warnings",[],"~:source","(ns metabase.lib.schema.expression.arithmetic\n  \"Arithmetic expressions like `:+`.\"\n  (:require\n   [malli.core :as mc]\n   [medley.core :as m]\n   [metabase.lib.hierarchy :as lib.hierarchy]\n   [metabase.lib.schema.common :as common]\n   [metabase.lib.schema.expression :as expression]\n   [metabase.lib.schema.mbql-clause :as mbql-clause]\n   [metabase.lib.schema.temporal-bucketing :as temporal-bucketing]\n   [metabase.types :as types]\n   [metabase.util.malli.registry :as mr]))\n\n(defn- valid-interval-for-type? [[_tag _opts _n unit :as _interval] expr-type]\n  (let [unit-schema (cond\n                      (isa? expr-type :type/Date)     ::temporal-bucketing/unit.date.interval\n                      (isa? expr-type :type/Time)     ::temporal-bucketing/unit.time.interval\n                      (isa? expr-type :type/DateTime) ::temporal-bucketing/unit.date-time.interval)]\n    (if unit-schema\n      (mc/validate unit-schema unit)\n      true)))\n\n(mr/def ::args.temporal\n  [:and\n   [:catn\n    [:expr      [:schema [:ref ::expression/temporal]]]\n    [:intervals [:+ :mbql.clause/interval]]]\n   [:fn\n    {:error/message \"Temporal arithmetic expression with valid interval units for the expression type\"}\n    (fn [[expr & intervals]]\n      (let [expr-type (expression/type-of expr)]\n        (every? #(valid-interval-for-type? % expr-type) intervals)))]])\n\n(mr/def ::args.numbers\n  [:repeat {:min 2} [:schema [:ref ::expression/number]]])\n\n(defn- validate-plus-minus-temporal-arithmetic-expression\n  \"Validate a `:+` or `:-` expression with temporal args. Return a string describing any errors found, or `nil` if it\n  looks ok.\"\n  [[_tag _opts & exprs]]\n  (let [{non-intervals false, intervals true} (group-by #(isa? (expression/type-of %) :type/Interval) exprs)]\n    (cond\n      (not= (count non-intervals) 1)\n      \"Temporal arithmetic expression must contain exactly one non-interval value\"\n\n      (< (count intervals) 1)\n      \"Temporal arithmetic expression must contain at least one :interval\"\n\n      :else\n      (let [expr-type (expression/type-of (first non-intervals))]\n        (some (fn [[_tag _opts _n unit :as interval]]\n                (when-not (valid-interval-for-type? interval expr-type)\n                  (str \"Cannot add a \" unit \" interval to a \" expr-type \" expression\")))\n              intervals)))))\n\n(defn- plus-minus-temporal-schema\n  \"Create a schema for `:+` or `:-` with temporal args: <temporal> Â± <interval(s)> in any order\"\n  [tag]\n  [:and\n   {:error/message (str tag \" clause with a temporal expression and one or more :interval clauses\")}\n   [:cat\n    [:= tag]\n    [:schema [:ref ::common/options]]\n    [:repeat [:schema [:ref :mbql.clause/interval]]]\n    [:schema [:ref ::expression/temporal]]\n    [:repeat [:schema [:ref :mbql.clause/interval]]]]\n   [:fn\n    {:error/fn (fn [{:keys [value]} _]\n                 (str \"Invalid \" tag \" clause: \" (validate-plus-minus-temporal-arithmetic-expression value)))}\n    (complement validate-plus-minus-temporal-arithmetic-expression)]])\n\n(defn- plus-minus-numeric-schema\n  \"Create a schema for `:+` or `:-` with numeric args.\"\n  [tag]\n  [:cat\n   {:error/message (str tag \" clause with numeric args\")}\n   [:= tag]\n   [:schema [:ref ::common/options]]\n   [:repeat {:min 2} [:schema [:ref ::expression/number]]]])\n\n(defn- plus-minus-schema [tag]\n  [:or\n   (plus-minus-temporal-schema tag)\n   (plus-minus-numeric-schema tag)])\n\n(defn- type-of-numeric-arithmetic-args\n  \"Given a sequence of args to a numeric arithmetic expression like `:+`, determine the type returned by the expression\n  by calculating the most-specific common ancestor type of all the args. E.g. `[:+ ... 2.0 2.0]` has two `:type/Float`\n  args, and thus the most-specific common ancestor type is `:type/Float`. `[:+ ... 2.0 2]` has a `:type/Float` and a\n  `:type/Integer` arg; the most-specific common ancestor type is `:type/Number`. For refs without type\n  information (e.g. `:field` clauses), assume `:type/Number`.\"\n  [args]\n  ;; Okay to use reduce without an init value here since we know we have >= 2 args\n  #_{:clj-kondo/ignore [:reduce-without-init]}\n  (reduce\n   types/most-specific-common-ancestor\n   (map (fn [expr]\n          (let [expr-type (expression/type-of expr)]\n            (if (and (isa? expr-type ::expression/type.unknown)\n                     (mc/validate :metabase.lib.schema.ref/ref expr))\n              :type/Number\n              expr-type)))\n        args)))\n\n(defn- type-of-temporal-arithmetic-args\n  \"Given a temporal value plus one or more intervals `args` passed to an arithmetic expression like `:+`, determine the\n  overall type returned by the expression. This is the type of the temporal value (the arg that is not an interval),\n  or assume `:type/Temporal` if it is a ref without type information.\"\n  [args]\n  (let [first-non-interval-arg-type (m/find-first #(not (isa? % :type/Interval))\n                                                  (map expression/type-of args))]\n    (if (isa? first-non-interval-arg-type ::expression/type.unknown)\n      :type/Temporal\n      first-non-interval-arg-type)))\n\n(defn- type-of-arithmetic-args\n  \"Given a sequence of `args` to an arithmetic expression like `:+`, determine the overall type that the expression\n  returns. There are two types of arithmetic expressions:\n\n  * Ones consisting of numbers. See [[type-of-numeric-arithmetic-args]].\n\n  * Ones consisting of a temporal value like a Date plus one or more `:interval` clauses, in any order. See\n    [[type-of-temporal-arithmetic-args]].\"\n  [args]\n  (if (some #(isa? (expression/type-of %) :type/Interval) args)\n    ;; temporal value + intervals\n    (type-of-temporal-arithmetic-args args)\n    (type-of-numeric-arithmetic-args args)))\n\n(mbql-clause/define-mbql-clause :+\n  (plus-minus-schema :+))\n\n;;; TODO -- should `:-` support just a single arg (for numbers)? What about `:+`?\n(mbql-clause/define-mbql-clause :-\n  (plus-minus-schema :-))\n\n(mbql-clause/define-catn-mbql-clause :*\n  [:args ::args.numbers])\n\n;;; we always do non-integer real division even if all the expressions are integers, e.g.\n;;;\n;;;    [:/ <int-field>  2] => my_int_field / 2.0\n;;;\n;;; so the results are 0.5 as opposed to 0. This is what people expect division to do\n(mbql-clause/define-catn-mbql-clause :/ :- :type/Float\n  [:args ::args.numbers])\n\n(doseq [tag [:+ :- :*]]\n  (lib.hierarchy/derive tag :lib.type-of/type-is-type-of-arithmetic-args))\n\n;;; `:+`, `:-`, and `:*` all have the same logic; also used for [[metabase.lib.metadata.calculation/type-of-method]]\n(defmethod expression/type-of-method :lib.type-of/type-is-type-of-arithmetic-args\n  [[_tag _opts & args]]\n  (type-of-arithmetic-args args))\n\n(mbql-clause/define-tuple-mbql-clause :abs\n  [:schema [:ref ::expression/number]])\n\n(lib.hierarchy/derive :abs :lib.type-of/type-is-type-of-first-arg)\n\n(doseq [op [:log :exp :sqrt]]\n  (mbql-clause/define-tuple-mbql-clause op :- :type/Float\n    [:schema [:ref ::expression/number]]))\n\n(doseq [op [:ceil :floor :round]]\n  (mbql-clause/define-tuple-mbql-clause op :- :type/Integer\n    [:schema [:ref ::expression/number]]))\n\n(mbql-clause/define-tuple-mbql-clause :power\n  #_num [:schema [:ref ::expression/number]]\n  #_exp [:schema [:ref ::expression/number]])\n\n(defmethod expression/type-of-method :power\n  [[_tag _opts expr exponent]]\n  ;; if both expr and exponent are integers, this will return an integer.\n  (if (and (isa? (expression/type-of expr) :type/Integer)\n           (isa? (expression/type-of exponent) :type/Integer))\n    :type/Integer\n    ;; otherwise this will return some sort of number with a decimal place. e.g.\n    ;;\n    ;;    (Math/pow 2 2.1) => 4.2870938501451725\n    ;;\n    ;; If we don't know the type of `expr` or `exponent` it's safe to assume `:type/Float` anyway, maybe not as\n    ;; specific as `:type/Integer` but better than `:type/*` or `::expression/type.unknown`.\n    :type/Float))\n","~:reader-features",["^K",["~:cljs-release","~:cljs-dev","~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["p__60448","vec__60450","cljs.core.nth","metabase.lib.schema.expression.arithmetic/valid-interval-for-type?","_tag","_opts","_n","unit","_interval","expr-type","unit-schema","cljs.core.isa_QMARK_","malli.core.validate","metabase.util.malli.registry/register!","p__60458","vec__60459","seq__60460","cljs.core/seq","first__60461","cljs.core/first","cljs.core/next","expr","intervals","metabase.lib.schema.expression/type-of","p1__60457#","cljs.core/every?","p__60463","vec__60464","seq__60465","first__60466","metabase.lib.schema.expression.arithmetic/validate-plus-minus-temporal-arithmetic-expression","exprs","map__60467","cljs.core/--destructure-map","cljs.core.get","non-intervals","p1__60462#","cljs.core/group-by","cljs.core.not_EQ_","cljs.core/count","cljs.core/some","p__60468","vec__60469","interval","metabase.lib.schema.expression.arithmetic/plus-minus-temporal-schema","tag","p__60476","map__60477","value","_","cljs.core/complement","metabase.lib.schema.expression.arithmetic/plus-minus-numeric-schema","metabase.lib.schema.expression.arithmetic/plus-minus-schema","metabase.lib.schema.expression.arithmetic/type-of-numeric-arithmetic-args","args","cljs.core.reduce","metabase.types/most-specific-common-ancestor","cljs.core.map","and__5043__auto__","metabase.lib.schema.expression.arithmetic/type-of-temporal-arithmetic-args","first-non-interval-arg-type","p1__60479#","medley.core.find_first","metabase.lib.schema.expression.arithmetic/type-of-arithmetic-args","p1__60481#","metabase.lib.schema.mbql_clause.define_mbql_clause","metabase.lib.schema.mbql_clause.define_catn_mbql_clause","seq__60486","chunk__60487","count__60488","i__60489","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","metabase.lib.hierarchy/derive","metabase.lib.schema.expression/type-of-method","p__60493","vec__60497","seq__60498","first__60499","metabase.lib.schema.mbql_clause.define_tuple_mbql_clause","seq__60500","chunk__60501","count__60502","i__60503","op","seq__60504","chunk__60505","count__60506","i__60507","p__60512","vec__60513","exponent"]],"~:used-vars",["^K",["~$cljs.core/--destructure-map","~$metabase.lib.schema.mbql-clause/define-catn-mbql-clause","~$metabase.lib.schema.expression.arithmetic/type-of-numeric-arithmetic-args","~$metabase.lib.schema.expression.arithmetic/type-of-arithmetic-args","~$malli.core/validate","~$metabase.lib.schema.expression.arithmetic/plus-minus-numeric-schema","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$cljs.core/not=","~$metabase.util.malli.registry/register!","~$cljs.core/chunk-rest","~$metabase.lib.schema.mbql-clause/define-mbql-clause","~$metabase.lib.schema.expression/type-of","~$metabase.lib.hierarchy/derive","~$metabase.lib.schema.mbql-clause/define-tuple-mbql-clause","~$metabase.lib.schema.expression.arithmetic/type-of-temporal-arithmetic-args","~$metabase.lib.schema.expression.arithmetic/valid-interval-for-type?","~$cljs.core/map","~$metabase.lib.schema.expression/type-of-method","~$medley.core/find-first","~$cljs.core/-add-method","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/nth","~$metabase.lib.schema.expression.arithmetic/plus-minus-schema","~$cljs.core/next","~$cljs.core/not","~$cljs.core/complement","~$metabase.types/most-specific-common-ancestor","~$metabase.lib.schema.expression.arithmetic/plus-minus-temporal-schema","~$cljs.core/isa?","~$cljs.core/first","~$cljs.core/every?","~$cljs.core/some","~$metabase.lib.schema.expression.arithmetic/validate-plus-minus-temporal-arithmetic-expression","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1E","camel_snake_kebab/internals/misc.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^Y","^D","~$camel-snake-kebab.internals.string-separator","~$clojure.string"]]],["^1E","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.dom.HtmlElement"]]],["^1E","metabase/shared/util/i18n.cljs"],["6c3c8615004b349dae9851ed547d516d45e04bd0","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$shadow.js.shim.module$ttag","^2U"]]],["^1E","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1E","metabase/types.cljc"],["00232bf78b259e26a21c218c8f2d746ba7003a15","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$clojure.set","~$metabase.types.coercion-hierarchies","~$metabase.util"]]],["^1E","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$goog.Uri"]]],["^1E","lambdaisland/glogi.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$goog.log","~$goog.debug.Console","~$goog.array","^2U","~$goog.object","~$goog.debug.FancyWindow","~$goog.debug.DivConsole"]]],["^1E","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.asserts"]]],["^1E","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.string"]]],["^1E","malli/registry.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^2Y","^2Z","^3;","^2X","^2[","^30"]]],["^1E","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2X"]]],["^1E","goog/style/style.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.safe","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^38","~$goog.reflect","^3<","~$goog.userAgent"]]],["^1E","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;"]]],["^1E","metabase/lib/schema/mbql_clause.cljc"],["e5bdd00c58db706b1219843528fd3cd9dd8ab728","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^[","^X","^17","~$metabase.util.malli","^Z"]]],["^1E","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Y","^3K","^2X"]]],["^1E","malli/generator.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^F","^2U","~$clojure.test.check","~$clojure.test.check.generators","~$clojure.test.check.properties","~$clojure.test.check.random","~$clojure.test.check.rose-tree","^T","~$malli.registry"]]],["^1E","clojure/test/check/properties.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^3R","~$clojure.test.check.results"]]],["^1E","clojure/test/check/generators.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^2U","^3T","^3U","^3<"]]],["^1E","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","malli/util.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^D","^T"]]],["^1E","clojure/test/check/random/doubles.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$clojure.test.check.random.longs"]]],["^1E","net/cgrand/macrovich.cljc"],["abcb26cbfe0f8eef363b25525210c0fe1eb1f693","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","malli/destructure.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$clojure.walk","^T","~$malli.impl.util"]]],["^1E","goog/structs/circularbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","weavejester/dependency.cljc"],["7fd7f8879313f6a7e295f7447e668bdf492c42c1","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^31"]]],["^1E","metabase/lib/schema/common.cljc"],["3f51a06335a7cb84c835d859c422919499874414","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^2U","^17","^Z"]]],["^1E","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^2Y","^2X"]]],["^1E","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^2U","^3<","~$goog.string.StringBuffer"]]],["^1E","clojure/test/check/rose_tree.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","clojure/test/check/impl.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","camel_snake_kebab/internals/string_separator.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^2U"]]],["^1E","clojure/test/check/random.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$clojure.test.check.random.doubles","^3X"]]],["^1E","metabase/lib/schema/expression/arithmetic.cljc"],["e6936a3e0b11bc3cd40d4e396c708af4622c21cb","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^T","^12","^11","^[","^X","^V","^14","^17","^Z"]]],["^1E","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^1E","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^3K"]]],["^1E","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","~$goog.fs.blob","^3=","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3?","^3@"]]],["^1E","metabase/util/format.cljc"],["875f86a08288cb3ad5a6f15df988897eaf8613af","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^3<"]]],["^1E","goog/math/irect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/math/box.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^3H"]]],["^1E","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","clojure/test/check.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^3R","^3T","^3W","^3U","~$clojure.test.check.impl"]]],["^1E","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3?","~$goog.html.SafeUrl","^3@","^3;","^2X"]]],["^1E","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^43","~$goog.html.SafeStyle","^46","^3>","~$goog.html.uncheckedconversions","^3?","^2X"]]],["^1E","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3C","^3;","~$goog.dom.element"]]],["^1E","medley/core.cljc"],["f5117fa4c15ff14c4a0ab7db414b0f102afb0b8a","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","lambdaisland/glogi/console.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$lambdaisland.glogi","~$lambdaisland.glogi.print","^38","^36"]]],["^1E","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3?","^43","^4;","^3F","^46","^3C","^3>","^3@","^3;","^3N","^37","^38","^2X","~$goog.dom.tags","^44"]]],["^1E","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^38"]]],["^1E","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","malli/error.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^2U","^T","~$malli.util"]]],["^1E","metabase/lib/dispatch.cljc"],["914208cd51b78412eff1b402519bbb422845497a","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^33"]]],["^1E","metabase/util/malli.cljc"],["0f9ba23be6bb9fa629617001e985b988d2322b17","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^D","^T","~$malli.destructure","~$malli.error","~$malli.generator","^4A","~$metabase.shared.util.i18n","^33"]]],["^1E","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^37","^2X","^2Y"]]],["^1E","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^37","^3;","^47","~$goog.dom.BrowserFeature","^3B","^3C","^3D","^4:","^4<","^3H","^3J","^38","^3<","^3?","~$goog.string.Unicode","^3L"]]],["^1E","borkdude/dynaload.cljc"],["accd696ba364b850b4d92e38f5a34d0e828a0ad1","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","metabase/util/log.cljs"],["7d8a3bf01eb27c2ba7269dc90dc218e46bcc1d3a","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^35","^3<","~$goog.string.format","^4>","~$lambdaisland.glogi.console"]]],["^1E","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.debug.Error","^3B"]]],["^1E","goog/debug/relativetimeprovider.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","malli/sci.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$borkdude.dynaload"]]],["^1E","metabase/lib/schema/expression.cljc"],["f5c5c3ff3dc0f9a8b407cd7d06a68c6787061991","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$metabase.lib.dispatch","^11","^[","^4E","^17","^3M","^Z"]]],["^1E","goog/math/rect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^3G","^3H","~$goog.math.IRect","^3J"]]],["^1E","flatland/ordered/map.cljs"],["3a9cb9d79e47d77ecd4f4d550371ecf01464c461","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^37","^3;","~$goog.collections.maps","^3<","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1E","metabase/util/malli/registry.cljc"],["921d4f259bbe54cbeb6b88ae56937df492bdfb5e","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^T","^3V","^4A"]]],["^1E","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^2Z"]]],["^1E","metabase/types/coercion_hierarchies.cljc"],["c3d70ef6080e044d61f13ff6bfd76490e2dcd0ac","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^31"]]],["^1E","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/debug/divconsole.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.debug.HtmlFormatter","~$goog.dom.DomHelper","^3C","^3D","^4:","^3F","^35","^3?","~$goog.style"]]],["^1E","malli/impl/util.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","goog/debug/fancywindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^37","^3;","~$goog.debug.DebugWindow","^4T","^3C","^3D","^4:","^3F","^35","^38","^3<","^3?","^3L"]]],["^1E","goog/debug/formatter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.debug","~$goog.debug.RelativeTimeProvider","^4:","^46","^4<","^35","^3?"]]],["^1E","metabase/shared/util/namespaces.cljs"],["00687008abd6eb291bc9d5ff1fff73210e0bbe6e","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",[]]],["^1E","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^37","^38"]]],["^1E","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^3<","^3["]]],["^1E","metabase/lib/schema/temporal_bucketing.cljc"],["9cb7bba3e46e1de2fbb37d61df332336da6d9f66","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^31","^Z"]]],["^1E","metabase/util.cljc"],["2eb945a6741f1450ecac08a9087b862ce52b9e3a","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$camel-snake-kebab.internals.macros","~$clojure.data","^@","^31","^2U","^3Y","~$flatland.ordered.map","^12","^4E","~$metabase.shared.util.namespaces","~$metabase.util.format","~$metabase.util.log","~$net.cgrand.macrovich","~$weavejester.dependency"]]],["^1E","clojure/test/check/random/longs/bit_count_impl.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","malli/impl/regex.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^3Z"]]],["^1E","camel_snake_kebab/internals/macros.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$camel-snake-kebab.internals.alter-name","~$camel-snake-kebab.internals.misc"]]],["^1E","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3D","^4<","^3?","^2X"]]],["^1E","malli/core.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^D","~$malli.impl.regex","^3Z","^3V","~$malli.sci"]]],["^1E","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^31"]]],["^1E","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^2X","^30"]]],["^1E","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^37","~$goog.debug.errorcontext"]]],["^1E","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["~:shadow.build.js-support/require","ttag"],["^2W","shadow.js.shim.module$ttag.js","require","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.math"]]],["^1E","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.flags"]]],["^1E","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3B","^3C"]]],["^1E","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^4:","^43","^4;","^3F","^46","^3>","^3?","^2X"]]],["^1E","goog/debug/debugwindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^4S","^3D","^4:","^3F","^35","^3?","~$goog.structs.CircularBuffer","^3L"]]],["^1E","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y"]]],["^1E","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.math.Long","~$goog.math.Integer","^3<","^38","^37","^34","^3["]]],["^1E","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3?","^3@","^44","^3;"]]],["^1E","clojure/test/check/random/longs.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","~$clojure.test.check.random.longs.bit-count-impl","^5>","^D"]]],["^1E","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^4W"]]],["^1E","camel_snake_kebab/internals/alter_name.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3?","^4;","^3@","^38","^3;","^2X"]]],["^1E","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3K"]]],["^1E","goog/debug/console.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","~$goog.debug.TextFormatter","^35"]]],["^1E","lambdaisland/glogi/print.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D","^4>","^38"]]],["^1E","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3L"]]],["^1E","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^3<"]]],["^1E","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3;","^3@"]]],["^1E","goog/dom/vendor.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^3<","^3L"]]],["^1E","metabase/lib/hierarchy.cljc"],["c9d228603522de5c85546fb645c59736d4eb94d2","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]],["^1E","clojure/test/check/results.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2P",["^ ","^2Q",null,"^2R",["^K",[]],"^2S",["^Y","^D"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/line_col.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/viz.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/parse.cljc",1689946139000,"jar:file:/root/.m2/repository/weavejester/dependency/0.2.1/dependency-0.2.1.jar!/weavejester/dependency.cljc",1689946093000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/transform.clj",1689946146000,"jar:file:/root/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar!/ring/util/codec.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/hierarchy.cljc",1690286812000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/core.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/i18n.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/macros.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/plural.clj",1690286813000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/core.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util.cljc",1690286813000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/core.cljc",1689946171000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/dispatch.cljc",1690286812000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/schema/common.cljc",1690286812000,"file:/home/gmrworkspace/dashboard/src/metabase/plugins/classloader.clj",1692013156125,"jar:file:/root/.m2/repository/medley/medley/1.4.0/medley-1.4.0.jar!/medley/core.cljc",1689946185000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/random.clj",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util/format.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/walk.clj",1689946160000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/reduction.clj",1689946146000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/util.clj",1689946174000,"jar:file:/root/.m2/repository/camel-snake-kebab/camel-snake-kebab/0.4.3/camel-snake-kebab-0.4.3.jar!/camel_snake_kebab/internals/macros.cljc",1689946178000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/auto_flatten_seq.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/core.clj",1689946146000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/generator.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar!/clojure/core/cache.clj",1689946183000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/schema/expression.cljc",1690286812000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/sci.cljc",1689946170000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin/types.clj",1689946176000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/properties.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/math.numeric-tower/0.0.5/math.numeric-tower-0.0.5.jar!/clojure/math/numeric_tower.clj",1689946148000,"jar:file:/root/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1689946165000,"jar:file:/root/.m2/repository/colorize/colorize/0.1.1/colorize-0.1.1.jar!/colorize/core.clj",1689946104000,"jar:file:/root/.m2/repository/borkdude/dynaload/0.3.5/dynaload-0.3.5.jar!/borkdude/dynaload.cljc",1689946165000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin.clj",1689946176000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/failure.clj",1689946146000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/variant.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/impl.clj",1692013156125,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/dependency.cljc",1689946139000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/leaf.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check.cljc",1689946177000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/compiler.clj",1689946160000,"jar:file:/root/.m2/repository/org/clojure/core.memoize/1.0.257/core.memoize-1.0.257.jar!/clojure/core/memoize.clj",1689946178000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/destructure.cljc",1689946170000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/print.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/track.cljc",1689946139000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar!/clojure/java/classpath.clj",1689946162000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/impl/regex.cljc",1689946170000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/factory.clj",1689946173000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689946174000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/experimental.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1689946174000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/core.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/generators.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/experimental/time.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/parse.clj",1689946173000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n.clj",1692013156125,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/cfg.clj",1689946146000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/core.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/impl/util.cljc",1689946170000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/registry.cljc",1689946170000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/gll.clj",1689946146000,"jar:file:/root/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1689947054000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/instrument.clj",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/random.cljc",1689946171000,"jar:file:/root/.m2/repository/environ/environ/1.2.0/environ-1.2.0.jar!/environ/core.cljc",1689946163000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/collection.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/repeat.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/results.cljc",1689946177000,"jar:file:/root/.m2/repository/com/lambdaisland/glogi/1.2.164/glogi-1.2.164.jar!/lambdaisland/glogi.clj",1689947043000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/namespaces.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/file.clj",1689946139000,"jar:file:/root/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1689946117000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/error.cljc",1689946170000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/utils.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/malli/registry.cljc",1690286813000,"file:/home/gmrworkspace/dashboard/src/metabase/config.clj",1692013154929,"file:/home/gmrworkspace/dashboard/src/metabase/util/log.clj",1690286813000,"file:/home/gmrworkspace/dashboard/src/metabase/util/malli.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/rose_tree.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689946174000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/combinators_source.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/abnf.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/find.clj",1689946139000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/dynamic_classpath.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate_seq.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/util.cljc",1689946170000,"file:/home/gmrworkspace/dashboard/src/metabase/util/jvm.clj",1692013156125],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Arithmetic expressions like `:+`.","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",1,"^9",5,"^:",1,"^;",46],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",[]],"^L","^M","^N",["^ "],"^Q",null,"^R",["^ ","^S","^T","^U","^V","^D","^D","^W","^X","^Y","^Y","^V","^V","^Z","^Z","^[","^[","^T","^T","^X","^X","^10","^11","~$m","^12","^13","^14","^15","^Z","^16","^17","^18","^[","^11","^11","^14","^14","^12","^12","^17","^17"],"^19",["^K",["^1:"]],"^1;",null,"~:defs",["^ ","~$valid-interval-for-type?",["^ ","~:protocol-inline",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",14,"^9",8,"^:",14,"^;",32,"~:private",true,"~:arglists",["^1>",["~$quote",["^1>",[[["~$_tag","~$_opts","~$_n","~$unit","^1@","~$_interval"],"~$expr-type"]]]]]],"^8A",true,"^L","^2:","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",32,"~:method-params",["^1>",[["~$p__60448","^8I"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^9",1,"~:variadic?",false,"^8",14,"~:ret-tag",["^K",["~$boolean","~$any"]],"^:",14,"~:max-fixed-arity",2,"~:fn-var",true,"^8B",["^1>",["^8C",["^1>",[[["^8D","^8E","^8F","^8G","^1@","^8H"],"^8I"]]]]]],"~$validate-plus-minus-temporal-arithmetic-expression",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",37,"^9",8,"^:",37,"^;",58,"^8A",true,"^8B",["^1>",["^8C",["^1>",[[["^8D","^8E","~$&","~$exprs"]]]]]],"^6","Validate a `:+` or `:-` expression with temporal args. Return a string describing any errors found, or `nil` if it\n  looks ok."],"^8A",true,"^L","^2L","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",58,"^8J",["^1>",[["~$p__60463"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",37,"^8O",["^K",["^8Q","~$string","~$clj-nil"]],"^:",37,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[[["^8D","^8E","~$&","^8U"]]]]]],"^6","Validate a `:+` or `:-` expression with temporal args. Return a string describing any errors found, or `nil` if it\n  looks ok."],"~$plus-minus-temporal-schema",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",56,"^9",8,"^:",56,"^;",34,"^8A",true,"^8B",["^1>",["^8C",["^1>",[["~$tag"]]]]],"^6","Create a schema for `:+` or `:-` with temporal args: <temporal> Â± <interval(s)> in any order"],"^8A",true,"^L","^2G","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",34,"^8J",["^1>",[["^8Z"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",56,"^8O","~$cljs.core/IVector","^:",56,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[["^8Z"]]]]],"^6","Create a schema for `:+` or `:-` with temporal args: <temporal> Â± <interval(s)> in any order"],"~$plus-minus-numeric-schema",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",72,"^9",8,"^:",72,"^;",33,"^8A",true,"^8B",["^1>",["^8C",["^1>",[["^8Z"]]]]],"^6","Create a schema for `:+` or `:-` with numeric args."],"^8A",true,"^L","^1X","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",33,"^8J",["^1>",[["^8Z"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",72,"^8O","^8[","^:",72,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[["^8Z"]]]]],"^6","Create a schema for `:+` or `:-` with numeric args."],"~$plus-minus-schema",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",81,"^9",8,"^:",81,"^;",25,"^8A",true,"^8B",["^1>",["^8C",["^1>",[["^8Z"]]]]]],"^8A",true,"^L","^2B","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",25,"^8J",["^1>",[["^8Z"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",81,"^8O","^8[","^:",81,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[["^8Z"]]]]]],"~$type-of-numeric-arithmetic-args",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",86,"^9",8,"^:",86,"^;",39,"^8A",true,"^8B",["^1>",["^8C",["^1>",[["~$args"]]]]],"^6","Given a sequence of args to a numeric arithmetic expression like `:+`, determine the type returned by the expression\n  by calculating the most-specific common ancestor type of all the args. E.g. `[:+ ... 2.0 2.0]` has two `:type/Float`\n  args, and thus the most-specific common ancestor type is `:type/Float`. `[:+ ... 2.0 2]` has a `:type/Float` and a\n  `:type/Integer` arg; the most-specific common ancestor type is `:type/Number`. For refs without type\n  information (e.g. `:field` clauses), assume `:type/Number`."],"^8A",true,"^L","^1U","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",39,"^8J",["^1>",[["^93"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",86,"^8O","^8Q","^:",86,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[["^93"]]]]],"^6","Given a sequence of args to a numeric arithmetic expression like `:+`, determine the type returned by the expression\n  by calculating the most-specific common ancestor type of all the args. E.g. `[:+ ... 2.0 2.0]` has two `:type/Float`\n  args, and thus the most-specific common ancestor type is `:type/Float`. `[:+ ... 2.0 2]` has a `:type/Float` and a\n  `:type/Integer` arg; the most-specific common ancestor type is `:type/Number`. For refs without type\n  information (e.g. `:field` clauses), assume `:type/Number`."],"~$type-of-temporal-arithmetic-args",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",105,"^9",8,"^:",105,"^;",40,"^8A",true,"^8B",["^1>",["^8C",["^1>",[["^93"]]]]],"^6","Given a temporal value plus one or more intervals `args` passed to an arithmetic expression like `:+`, determine the\n  overall type returned by the expression. This is the type of the temporal value (the arg that is not an interval),\n  or assume `:type/Temporal` if it is a ref without type information."],"^8A",true,"^L","^29","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",40,"^8J",["^1>",[["^93"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",105,"^8O",["^K",[null,"^8Q","~$cljs.core/Keyword"]],"^:",105,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[["^93"]]]]],"^6","Given a temporal value plus one or more intervals `args` passed to an arithmetic expression like `:+`, determine the\n  overall type returned by the expression. This is the type of the temporal value (the arg that is not an interval),\n  or assume `:type/Temporal` if it is a ref without type information."],"~$type-of-arithmetic-args",["^ ","^8@",null,"^5",["^ ","^7","metabase/lib/schema/expression/arithmetic.cljc","^8",116,"^9",8,"^:",116,"^;",31,"^8A",true,"^8B",["^1>",["^8C",["^1>",[["^93"]]]]],"^6","Given a sequence of `args` to an arithmetic expression like `:+`, determine the overall type that the expression\n  returns. There are two types of arithmetic expressions:\n\n  * Ones consisting of numbers. See [[type-of-numeric-arithmetic-args]].\n\n  * Ones consisting of a temporal value like a Date plus one or more `:interval` clauses, in any order. See\n    [[type-of-temporal-arithmetic-args]]."],"^8A",true,"^L","^1V","^7","metabase/lib/schema/expression/arithmetic.cljc","^;",31,"^8J",["^1>",[["^93"]]],"^8L",null,"^8M",["^1>",[null,null]],"^9",1,"^8N",false,"^8",116,"^8O",["^K",[null,"^8Q","^95"]],"^:",116,"^8R",1,"^8S",true,"^8B",["^1>",["^8C",["^1>",[["^93"]]]]],"^6","Given a sequence of `args` to an arithmetic expression like `:+`, determine the overall type that the expression\n  returns. There are two types of arithmetic expressions:\n\n  * Ones consisting of numbers. See [[type-of-numeric-arithmetic-args]].\n\n  * Ones consisting of a temporal value like a Date plus one or more `:interval` clauses, in any order. See\n    [[type-of-temporal-arithmetic-args]]."]],"^1<",["^ ","^D","^D","^S","^T","^W","^X","^Z","^Z","^T","^T","^X","^X","^15","^Z"],"~:cljs.analyzer/constants",["^ ","^19",["^K",["~:args","~:ceil","~:cat","~:schema","~:lib.type-of/type-is-type-of-arithmetic-args","~:min","~:metabase.lib.schema.common/options","~:metabase.lib.schema.expression/number","~:*","~:type/Time","~:fn","~:type/Integer","~:else","~:type/Number","~:ref","~:sqrt","~:-","~:value","~:or","~:exp","~:type/Date","~:/","~:mbql.clause/interval","~:type/Temporal","~:metabase.lib.schema.ref/ref","~:type/Float","~:round","~:power","~:metabase.lib.schema.expression/temporal","~:expr","~:+","~:catn","~:metabase.lib.schema.expression.arithmetic/args.numbers","~:abs","~:error/message","~:and","~:repeat","~:lib.type-of/type-is-type-of-first-arg","~:metabase.lib.schema.temporal-bucketing/unit.date-time.interval","~:metabase.lib.schema.expression.arithmetic/args.temporal","~:metabase.lib.schema.temporal-bucketing/unit.time.interval","~:metabase.lib.schema.temporal-bucketing/unit.date.interval","~:error/fn","~:=","~:log","~:metabase.lib.schema.expression/type.unknown","~:floor","~:intervals","~:type/DateTime","~:type/Interval"]],"~:order",["^9J","^:1","^9@","^:0","^:7","^9Z","^9[","^9W","^9S","^9R","^9;","^9E","^9Q","^:6","~:+","^9K","^9A","^9V","^9T","^9X","^9=","^9?","^:8","^9C","^9:","~:=","^9>","^:2","^9G","^9H","^:4","^9M","^9D","^9L","~:-","~:*","^98","~:/","^9N","^9<","^9U","^9Y","^:3","^9I","^9F","^99","^:5","^9O","^9B","^9P"]],"^1A",["^ ","^1:",["^K",[]]],"^1B",["^ "],"^1C",["^Y","^D","^T","^12","^11","^[","^X","^V","^14","^17","^Z"]],"^P","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^2O",[["^:<","~:static-fns"],true,["^:<","~:shadow-tweaks"],null,["^:<","~:source-map-inline"],null,["^:<","~:elide-asserts"],false,["^:<","~:optimize-constants"],null,["^:<","^1H"],null,["^:<","~:external-config"],null,["^:<","~:tooling-config"],null,["^:<","~:emit-constants"],null,["^:<","~:load-tests"],null,["^:<","~:form-size-threshold"],null,["^:<","~:global-goog-object&array"],null,["^:<","~:data-readers"],null,["^:<","~:infer-externs"],"~:auto",["^:<","^1J"],["^K",["^1K","^1L"]],["~:js-options","~:js-provider"],"^1:",["~:mode"],"~:dev",["^:<","~:fn-invoke-direct"],null,["^:<","~:source-map"],"/dev/null"]]]