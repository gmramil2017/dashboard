["^ ","~:output",["^ ","~:js","goog.provide('metabase.shared.formatting.internal.numbers');\nmetabase.shared.formatting.internal.numbers.default_number_separators = \".,\";\nmetabase.shared.formatting.internal.numbers.adjust_number_separators = (function metabase$shared$formatting$internal$numbers$adjust_number_separators(text,separators){\nif(cljs.core.truth_((function (){var and__5043__auto__ = separators;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(separators,metabase.shared.formatting.internal.numbers.default_number_separators);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar decimal = cljs.core.first(separators);\nvar grouping = (function (){var or__5045__auto__ = cljs.core.second(separators);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \"\";\n}\n})();\nvar transform = new cljs.core.PersistentArrayMap(null, 2, [\",\",grouping,\".\",decimal], null);\nreturn clojure.string.replace(text,/[\\.,]/,transform);\n} else {\nreturn text;\n}\n});\nmetabase.shared.formatting.internal.numbers.fix_currency_symbols = (function metabase$shared$formatting$internal$numbers$fix_currency_symbols(text,currency){\nvar sym = metabase.shared.util.currency.currency_symbol(currency);\nreturn clojure.string.replace(clojure.string.replace(text,[cljs.core.name(currency),metabase.shared.formatting.internal.numbers_core.non_breaking_space].join(''),sym),cljs.core.name(currency),sym);\n});\nmetabase.shared.formatting.internal.numbers.base_format_scientific = (function metabase$shared$formatting$internal$numbers$base_format_scientific(nf,number){\nvar transform = (function metabase$shared$formatting$internal$numbers$base_format_scientific_$_transform(p__63072){\nvar map__63073 = p__63072;\nvar map__63073__$1 = cljs.core.__destructure_map(map__63073);\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63073__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63073__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nvar G__63081 = type;\nswitch (G__63081) {\ncase \"exponentSeparator\":\nreturn \"e\";\n\nbreak;\ndefault:\nreturn value;\n\n}\n});\nvar parts = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(nf.formatToParts(number),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keywordize-keys\",\"keywordize-keys\",1310784252),true], null)], 0));\nvar parts__$1 = (cljs.core.truth_(cljs.core.some((function (p1__63058_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(p1__63058_SHARP_),\"exponentMinusSign\");\n}),parts))?parts:(function (){var vec__63082 = cljs.core.split_with((function (p1__63059_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(p1__63059_SHARP_),\"exponentInteger\");\n}),parts);\nvar pre = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63082,(0),null);\nvar post = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__63082,(1),null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(pre,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"exponentPlusSign\",new cljs.core.Keyword(null,\"value\",\"value\",305978217),\"+\"], null)], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([post], 0));\n})());\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.map.cljs$core$IFn$_invoke$arity$2(transform,parts__$1));\n});\nmetabase.shared.formatting.internal.numbers.number_formatter_for_options_baseline = (function metabase$shared$formatting$internal$numbers$number_formatter_for_options_baseline(options){\nvar default_fraction_digits = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"number-style\",\"number-style\",-1326567402).cljs$core$IFn$_invoke$arity$1(options),\"currency\"))?(2):null);\nreturn (new Intl.NumberFormat(\"en\",cljs.core.clj__GT_js(metabase.util.remove_nils(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"maximumFractionDigits\",\"maximumFractionDigits\",-1989827678),new cljs.core.Keyword(null,\"currencyDisplay\",\"currencyDisplay\",853992613),new cljs.core.Keyword(null,\"maximumSignificantDigits\",\"maximumSignificantDigits\",-1174196981),new cljs.core.Keyword(null,\"minimumIntegerDigits\",\"minimumIntegerDigits\",-858445265),new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.Keyword(null,\"currency\",\"currency\",-898327568),new cljs.core.Keyword(null,\"useGrouping\",\"useGrouping\",-1755386126),new cljs.core.Keyword(null,\"minimumFractionDigits\",\"minimumFractionDigits\",-1266761579),new cljs.core.Keyword(null,\"notation\",\"notation\",-906109671),new cljs.core.Keyword(null,\"minimumSignificantDigits\",\"minimumSignificantDigits\",1936852126)],[new cljs.core.Keyword(null,\"maximum-fraction-digits\",\"maximum-fraction-digits\",1232463505).cljs$core$IFn$_invoke$arity$2(options,default_fraction_digits),new cljs.core.Keyword(null,\"currency-style\",\"currency-style\",-1629734318).cljs$core$IFn$_invoke$arity$1(options),new cljs.core.Keyword(null,\"maximum-significant-digits\",\"maximum-significant-digits\",599508904).cljs$core$IFn$_invoke$arity$1(options),new cljs.core.Keyword(null,\"minimum-integer-digits\",\"minimum-integer-digits\",-1035850713).cljs$core$IFn$_invoke$arity$1(options),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"number-style\",\"number-style\",-1326567402).cljs$core$IFn$_invoke$arity$1(options),\"scientific\"))?null:new cljs.core.Keyword(null,\"number-style\",\"number-style\",-1326567402).cljs$core$IFn$_invoke$arity$2(options,\"decimal\")),new cljs.core.Keyword(null,\"currency\",\"currency\",-898327568).cljs$core$IFn$_invoke$arity$1(options),true,new cljs.core.Keyword(null,\"minimum-fraction-digits\",\"minimum-fraction-digits\",994355100).cljs$core$IFn$_invoke$arity$2(options,default_fraction_digits),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"number-style\",\"number-style\",-1326567402).cljs$core$IFn$_invoke$arity$1(options),\"scientific\"))?\"scientific\":null),new cljs.core.Keyword(null,\"minimum-significant-digits\",\"minimum-significant-digits\",-1841461464).cljs$core$IFn$_invoke$arity$1(options)])))));\n});\nmetabase.shared.formatting.internal.numbers.currency_symbols_QMARK_ = (function metabase$shared$formatting$internal$numbers$currency_symbols_QMARK_(options){\nvar style = new cljs.core.Keyword(null,\"currency-style\",\"currency-style\",-1629734318).cljs$core$IFn$_invoke$arity$1(options);\nvar and__5043__auto__ = new cljs.core.Keyword(null,\"currency\",\"currency\",-898327568).cljs$core$IFn$_invoke$arity$1(options);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (((style == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(style,\"symbol\")));\n} else {\nreturn and__5043__auto__;\n}\n});\nmetabase.shared.formatting.internal.numbers.formatter_fn = (function metabase$shared$formatting$internal$numbers$formatter_fn(nf,options){\nvar G__63098 = new cljs.core.Keyword(null,\"number-style\",\"number-style\",-1326567402).cljs$core$IFn$_invoke$arity$1(options);\nswitch (G__63098) {\ncase \"scientific\":\nreturn (function (p1__63096_SHARP_){\nreturn metabase.shared.formatting.internal.numbers.base_format_scientific(nf,p1__63096_SHARP_);\n});\n\nbreak;\ndefault:\nreturn (function (p1__63097_SHARP_){\nreturn nf.format(p1__63097_SHARP_);\n});\n\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {metabase.shared.formatting.internal.numbers_core.NumberFormatter}\n * @implements {cljs.core.IWithMeta}\n*/\nmetabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102 = (function (options,nf,symbols_QMARK_,formatter,meta63103){\nthis.options = options;\nthis.nf = nf;\nthis.symbols_QMARK_ = symbols_QMARK_;\nthis.formatter = formatter;\nthis.meta63103 = meta63103;\nthis.cljs$lang$protocol_mask$partition0$ = 393216;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_63104,meta63103__$1){\nvar self__ = this;\nvar _63104__$1 = this;\nreturn (new metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102(self__.options,self__.nf,self__.symbols_QMARK_,self__.formatter,meta63103__$1));\n}));\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_63104){\nvar self__ = this;\nvar _63104__$1 = this;\nreturn self__.meta63103;\n}));\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.prototype.metabase$shared$formatting$internal$numbers_core$NumberFormatter$ = cljs.core.PROTOCOL_SENTINEL);\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.prototype.metabase$shared$formatting$internal$numbers_core$NumberFormatter$format_number_basic$arity$2 = (function (_,number){\nvar self__ = this;\nvar ___$1 = this;\nvar G__63111 = (self__.formatter.cljs$core$IFn$_invoke$arity$1 ? self__.formatter.cljs$core$IFn$_invoke$arity$1(number) : self__.formatter.call(null,number));\nvar G__63111__$1 = metabase.shared.formatting.internal.numbers.adjust_number_separators(G__63111,new cljs.core.Keyword(null,\"number-separators\",\"number-separators\",-885442734).cljs$core$IFn$_invoke$arity$1(self__.options))\n;\nif(cljs.core.truth_(self__.symbols_QMARK_)){\nreturn metabase.shared.formatting.internal.numbers.fix_currency_symbols(G__63111__$1,new cljs.core.Keyword(null,\"currency\",\"currency\",-898327568).cljs$core$IFn$_invoke$arity$1(self__.options));\n} else {\nreturn G__63111__$1;\n}\n}));\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.prototype.metabase$shared$formatting$internal$numbers_core$NumberFormatter$wrap_currency$arity$2 = (function (_,text){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,(function (){var iter__5523__auto__ = (function metabase$shared$formatting$internal$numbers$iter__63115(s__63116){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__63116__$1 = s__63116;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__63116__$1);\nif(temp__5804__auto__){\nvar s__63116__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__63116__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__63116__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__63118 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__63117 = (0);\nwhile(true){\nif((i__63117 < size__5522__auto__)){\nvar map__63119 = cljs.core._nth(c__5521__auto__,i__63117);\nvar map__63119__$1 = cljs.core.__destructure_map(map__63119);\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63119__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63119__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nif(cljs.core.truth_((function (){var fexpr__63123 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"currency\",null,\"integer\",null], null), null);\nreturn (fexpr__63123.cljs$core$IFn$_invoke$arity$1 ? fexpr__63123.cljs$core$IFn$_invoke$arity$1(type) : fexpr__63123.call(null,type));\n})())){\ncljs.core.chunk_append(b__63118,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,\"integer\"))?text:value));\n\nvar G__63193 = (i__63117 + (1));\ni__63117 = G__63193;\ncontinue;\n} else {\nvar G__63194 = (i__63117 + (1));\ni__63117 = G__63194;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__63118),metabase$shared$formatting$internal$numbers$iter__63115(cljs.core.chunk_rest(s__63116__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__63118),null);\n}\n} else {\nvar map__63124 = cljs.core.first(s__63116__$2);\nvar map__63124__$1 = cljs.core.__destructure_map(map__63124);\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63124__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__63124__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nif(cljs.core.truth_((function (){var fexpr__63125 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"currency\",null,\"integer\",null], null), null);\nreturn (fexpr__63125.cljs$core$IFn$_invoke$arity$1 ? fexpr__63125.cljs$core$IFn$_invoke$arity$1(type) : fexpr__63125.call(null,type));\n})())){\nreturn cljs.core.cons(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,\"integer\"))?text:value),metabase$shared$formatting$internal$numbers$iter__63115(cljs.core.rest(s__63116__$2)));\n} else {\nvar G__63257 = cljs.core.rest(s__63116__$2);\ns__63116__$1 = G__63257;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(self__.nf.formatToParts((1)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"keywordize-keys\",\"keywordize-keys\",1310784252),true], 0)));\n})());\n}));\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.prototype.metabase$shared$formatting$internal$numbers_core$NumberFormatter$split_exponent$arity$2 = (function (_,formatted){\nvar self__ = this;\nvar ___$1 = this;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"split-exponent not implemented\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),formatted], null));\n}));\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"options\",\"options\",1740170016,null),new cljs.core.Symbol(null,\"nf\",\"nf\",1717289478,null),new cljs.core.Symbol(null,\"symbols?\",\"symbols?\",-1708822311,null),new cljs.core.Symbol(null,\"formatter\",\"formatter\",1157522704,null),new cljs.core.Symbol(null,\"meta63103\",\"meta63103\",-384684996,null)], null);\n}));\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.cljs$lang$type = true);\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.cljs$lang$ctorStr = \"metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102\");\n\n(metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102\");\n}));\n\n/**\n * Positional factory function for metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102.\n */\nmetabase.shared.formatting.internal.numbers.__GT_t_metabase$shared$formatting$internal$numbers63102 = (function metabase$shared$formatting$internal$numbers$__GT_t_metabase$shared$formatting$internal$numbers63102(options,nf,symbols_QMARK_,formatter,meta63103){\nreturn (new metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102(options,nf,symbols_QMARK_,formatter,meta63103));\n});\n\n\n/**\n * The key function implemented for each language, and called by the top-level number formatting.\n *   Returns a [[core/NumberFormatter]] instance for each set of options.\n *   These formatters are reusable, but this does no caching.\n */\nmetabase.shared.formatting.internal.numbers.number_formatter_for_options = (function metabase$shared$formatting$internal$numbers$number_formatter_for_options(options){\nvar nf = metabase.shared.formatting.internal.numbers.number_formatter_for_options_baseline(options);\nvar symbols_QMARK_ = metabase.shared.formatting.internal.numbers.currency_symbols_QMARK_(options);\nvar formatter = metabase.shared.formatting.internal.numbers.formatter_fn(nf,options);\nreturn (new metabase.shared.formatting.internal.numbers.t_metabase$shared$formatting$internal$numbers63102(options,nf,symbols_QMARK_,formatter,cljs.core.PersistentArrayMap.EMPTY));\n});\n/**\n * Formats a number in scientific notation. The wrangling required differs by platform.\n */\nmetabase.shared.formatting.internal.numbers.format_number_scientific = (function metabase$shared$formatting$internal$numbers$format_number_scientific(number,options){\nreturn metabase.shared.formatting.internal.numbers.number_formatter_for_options(metabase.shared.formatting.internal.numbers_core.prep_options(options)).metabase$shared$formatting$internal$numbers_core$NumberFormatter$format_number_basic$arity$2(null,number);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","ClojureScript implementation of number formatting.\n  Implements the [[NumberFormatter]] protocol from numbers_core, plus some helpers.","~:file","metabase/shared/formatting/internal/numbers.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",48],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$metabase.shared.formatting.internal.numbers","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$u","~$metabase.util","^@","^@","~$goog","^R","~$metabase.shared.util.currency","^S","^Q","^Q","~$currency","^S","~$str","~$clojure.string","^V","^V","~$metabase.shared.formatting.internal.numbers-core","^W","~$core","^W"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^@","^@","~$u","^Q","^Q","^Q"],"~:form",["~#list",["~$ns","^K","ClojureScript implementation of number formatting.\n  Implements the [[NumberFormatter]] protocol from numbers_core, plus some helpers.",["^12",["^Z",["^V","~:as","^U"],["^W","^14","^X"],["^S","^14","^T"],["^Q","^14","~$u"]]]]],"~:flags",["^ ","^Z",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^R","^@","^V","^W","^S","^Q"]],"^N","^K","~:resource-id",["~:shadow.build.classpath/resource","metabase/shared/formatting/internal/numbers.cljs"],"~:compiled-at",1692612545276,"^L",["^ ","~$u","^Q","^@","^@","^R","^R","^S","^S","^Q","^Q","^T","^S","^U","^V","^V","^V","^W","^W","^X","^W"],"~:resource-name","metabase/shared/formatting/internal/numbers.cljs","~:warnings",[],"~:source","(ns metabase.shared.formatting.internal.numbers\n  \"ClojureScript implementation of number formatting.\n  Implements the [[NumberFormatter]] protocol from numbers_core, plus some helpers.\"\n  (:require\n   [clojure.string :as str]\n   [metabase.shared.formatting.internal.numbers-core :as core]\n   [metabase.shared.util.currency :as currency]\n   [metabase.util :as u]))\n\n(def ^:private default-number-separators \".,\")\n\n(defn- adjust-number-separators [text separators]\n  (if (and separators\n           (not= separators default-number-separators))\n    (let [decimal    (first separators)\n          grouping   (or (second separators) \"\") ; grouping separators are optional\n          transform  {\",\" grouping \".\" decimal}]\n      (str/replace text #\"[\\.,]\" transform))\n    text))\n\n(defn- fix-currency-symbols [text currency]\n  (let [sym (currency/currency-symbol currency)]\n    (-> text\n        ;; Some have spaces and some don't - remove the space if it's there.\n        (str/replace (str (name currency) core/non-breaking-space) sym)\n        (str/replace (name currency) sym))))\n\n(defn- base-format-scientific [nf number]\n  (letfn [(transform [{:keys [type value]}]\n            (case type\n              \"exponentSeparator\" \"e\"\n              value))]\n    (let [parts  (js->clj (.formatToParts nf number) {:keywordize-keys true})\n          ;; If there's no exponent minus sign, add a plus sign.\n          parts  (if (some #(= (:type %) \"exponentMinusSign\") parts)\n                   parts\n                   (let [[pre post] (split-with #(not= (:type %) \"exponentInteger\") parts)]\n                     (concat pre [{:type \"exponentPlusSign\" :value \"+\"}] post)))]\n      (apply str (map transform parts)))))\n\n;; Core internals =================================================================================================\n;; TODO(braden) We could get more nicely localized currency values by using the user's locale.\n;; The problem is that then we don't know what the number separators are. We could determine it\n;; with a simple test like formatting 12345.67, though.\n;; Using \"en\" here means, among other things, that currency values are not localized as well\n;; as they could be. Many European languages put currency signs as suffixes, eg. 123 euros is:\n;; - \"€123.00\" in \"en\"\n;; - \"€123,00\" with \"en\" but fixing up the separators for a German locale\n;; - \"123,00 €\" in actual German convention, which is what we would get with a native \"de\" locale here.\n(defn- number-formatter-for-options-baseline [options]\n  (let [default-fraction-digits (when (= (:number-style options) \"currency\")\n                                  2)]\n    (js/Intl.NumberFormat.\n      \"en\"\n      (clj->js (u/remove-nils\n                 {:style    (when-not (= (:number-style options) \"scientific\")\n                              (:number-style options \"decimal\"))\n                  :notation (when (= (:number-style options) \"scientific\")\n                              \"scientific\")\n                  :currency (:currency options)\n                  :currencyDisplay (:currency-style options)\n                  ;; Always use grouping separators, but we may remove them per number_separators.\n                  :useGrouping              true\n                  :minimumIntegerDigits     (:minimum-integer-digits     options)\n                  :minimumFractionDigits    (:minimum-fraction-digits    options default-fraction-digits)\n                  :maximumFractionDigits    (:maximum-fraction-digits    options default-fraction-digits)\n                  :minimumSignificantDigits (:minimum-significant-digits options)\n                  :maximumSignificantDigits (:maximum-significant-digits options)})))))\n\n(defn- currency-symbols? [options]\n  (let [style (:currency-style options)]\n    (and (:currency options)\n         (or (nil? style)\n             (= style \"symbol\")))))\n\n(defn- formatter-fn [nf options]\n  (case (:number-style options)\n    \"scientific\" #(base-format-scientific nf %)\n    #(.format nf %)))\n\n(defn number-formatter-for-options\n  \"The key function implemented for each language, and called by the top-level number formatting.\n  Returns a [[core/NumberFormatter]] instance for each set of options.\n  These formatters are reusable, but this does no caching.\"\n  [options]\n  (let [nf        (number-formatter-for-options-baseline options)\n        symbols?  (currency-symbols? options)\n        formatter (formatter-fn nf options)]\n    (reify\n      core/NumberFormatter\n      (format-number-basic [_ number]\n        (cond-> (formatter number)\n          true     (adjust-number-separators (:number-separators options))\n          symbols? (fix-currency-symbols (:currency options))))\n\n      (wrap-currency [_ text]\n        ;; Intl.NumberFormat.formatToParts(1) returns, eg. [currency, integer, decimal, fraction]\n        ;; Keep only currency and integer, and replace integer's :value with our provided text.\n        (apply str (for [{:keys [type value]} (js->clj (.formatToParts nf 1) :keywordize-keys true)\n                         :when (#{\"currency\" \"integer\"} type)]\n                     (if (= type \"integer\")\n                       text\n                       value))))\n\n      (split-exponent [_ formatted] (throw (ex-info \"split-exponent not implemented\" {:text formatted}))))))\n\n;; Scientific notation ============================================================================================\n(defn format-number-scientific\n  \"Formats a number in scientific notation. The wrangling required differs by platform.\"\n  [number options]\n  (-> (core/prep-options options)\n      number-formatter-for-options\n      (core/format-number-basic number)))\n","~:reader-features",["^I",["~:cljs-release","~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["metabase.shared.formatting.internal.numbers/default-number-separators","metabase.shared.formatting.internal.numbers/adjust-number-separators","text","separators","and__5043__auto__","cljs.core.not_EQ_","decimal","cljs.core/first","grouping","or__5045__auto__","cljs.core/second","transform","clojure.string/replace","metabase.shared.formatting.internal.numbers/fix-currency-symbols","currency","sym","metabase.shared.util.currency/currency-symbol","cljs.core/name","metabase.shared.formatting.internal.numbers-core/non-breaking-space","metabase.shared.formatting.internal.numbers/base-format-scientific","nf","number","p__63072","map__63073","cljs.core/--destructure-map","cljs.core.get","type","value","G__63081","parts","cljs.core.js__GT_clj","p1__63058#","cljs.core/some","cljs.core._EQ_","vec__63082","cljs.core.nth","pre","post","p1__63059#","cljs.core/split-with","cljs.core.concat","cljs.core.apply","cljs.core/str","cljs.core.map","metabase.shared.formatting.internal.numbers/number-formatter-for-options-baseline","options","default-fraction-digits","js/Intl.NumberFormat","cljs.core/clj->js","metabase.util/remove-nils","metabase.shared.formatting.internal.numbers/currency-symbols?","style","metabase.shared.formatting.internal.numbers/formatter-fn","G__63098","p1__63096#","p1__63097#","metabase.shared.formatting.internal.numbers/number-formatter-for-options","symbols?","formatter","metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102","_","G__63111","iter__5523__auto__","s__63116","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__63118","cljs.core/chunk-buffer","i__63117","map__63119","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__63115","cljs.core/chunk-rest","map__63124","cljs.core/cons","cljs.core/rest","fexpr__63123","fexpr__63125","formatted","cljs.core.ex_info","metabase.shared.formatting.internal.numbers/format-number-scientific","metabase.shared.formatting.internal.numbers-core/prep-options","cljs.core/chunk-first"]],"~:used-vars",["^I",["~$cljs.core/--destructure-map","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$cljs.core/str","~$metabase.shared.formatting.internal.numbers-core/prep-options","~$metabase.shared.formatting.internal.numbers/number-formatter-for-options-baseline","~$metabase.util/remove-nils","~$metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102","~$cljs.core/=","~$metabase.shared.formatting.internal.numbers/fix-currency-symbols","~$cljs.core/-write","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$cljs.core/chunk","~$cljs.core/not=","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$cljs.core/concat","~$cljs.core/js->clj","~$metabase.shared.formatting.internal.numbers/format-number-scientific","~$cljs.core/map","~$metabase.shared.formatting.internal.numbers/->t_metabase$shared$formatting$internal$numbers63102","~$metabase.shared.util.currency/currency-symbol","~$cljs.core/get","~$cljs.core/chunk-append","~$cljs.core/-nth","~$cljs.core/clj->js","~$metabase.shared.formatting.internal.numbers/currency-symbols?","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/second","~$clojure.string/replace","~$js/Intl.NumberFormat","~$cljs.core/split-with","~$metabase.shared.formatting.internal.numbers/default-number-separators","~$cljs.core/chunk-cons","~$cljs.core/cons","~$cljs.core/chunk-buffer","~$metabase.shared.formatting.internal.numbers/number-formatter-for-options","~$cljs.core/first","~$metabase.shared.formatting.internal.numbers-core/non-breaking-space","~$metabase.shared.formatting.internal.numbers-core/format-number-basic","~$cljs.core/name","~$metabase.shared.formatting.internal.numbers/adjust-number-separators","~$metabase.shared.formatting.internal.numbers/formatter-fn","~$cljs.core/some","~$metabase.shared.formatting.internal.numbers/base-format-scientific","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^19","camel_snake_kebab/internals/misc.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^R","^@","~$camel-snake-kebab.internals.string-separator","^V"]]],["^19","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.dom.HtmlElement"]]],["^19","metabase/shared/util/i18n.cljs"],["6c3c8615004b349dae9851ed547d516d45e04bd0","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","~$shadow.js.shim.module$ttag","^V"]]],["^19","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^19","lambdaisland/glogi.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","~$goog.log","~$goog.debug.Console","~$goog.array","^V","~$goog.object","~$goog.debug.FancyWindow","~$goog.debug.DivConsole"]]],["^19","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.asserts"]]],["^19","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.string"]]],["^19","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^2V","^2W","^34","^2U","^2X","^2Y"]]],["^19","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2U"]]],["^19","metabase/shared/util/currency.cljc"],["eebcc7f82aa7cb7e46caf6a9633d84c6b4396e93","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","goog/style/style.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.safe","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^31","~$goog.reflect","^35","~$goog.userAgent"]]],["^19","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34"]]],["^19","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2V","^3D","^2U"]]],["^19","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","net/cgrand/macrovich.cljc"],["abcb26cbfe0f8eef363b25525210c0fe1eb1f693","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","goog/structs/circularbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","weavejester/dependency.cljc"],["7fd7f8879313f6a7e295f7447e668bdf492c42c1","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","~$clojure.set"]]],["^19","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^2V","^2U"]]],["^19","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^V","^35","~$goog.string.StringBuffer"]]],["^19","camel_snake_kebab/internals/string_separator.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^V"]]],["^19","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^19","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^3D"]]],["^19","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","~$goog.fs.blob","^36","~$goog.html.SafeScript","~$goog.html.trustedtypes","^38","^39"]]],["^19","metabase/util/format.cljc"],["875f86a08288cb3ad5a6f15df988897eaf8613af","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^35"]]],["^19","goog/math/irect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/math/box.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^3A"]]],["^19","metabase/shared/formatting/internal/numbers.cljs"],["efe49c9ffcc7bb82081aea64e55fd1a6b5038abc","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^V","^W","^S","^Q"]]],["^19","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^38","~$goog.html.SafeUrl","^39","^34","^2U"]]],["^19","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3M","~$goog.html.SafeStyle","^3O","^37","~$goog.html.uncheckedconversions","^38","^2U"]]],["^19","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^3<","^34","~$goog.dom.element"]]],["^19","medley/core.cljc"],["f5117fa4c15ff14c4a0ab7db414b0f102afb0b8a","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","lambdaisland/glogi/console.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","~$lambdaisland.glogi","~$lambdaisland.glogi.print","^31","^2["]]],["^19","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^38","^3M","^3T","^3?","^3O","^3<","^37","^39","^34","^3F","^30","^31","^2U","~$goog.dom.tags","^3N"]]],["^19","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^31"]]],["^19","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^30","^2U","^2V"]]],["^19","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","metabase/shared/formatting/internal/numbers_core.cljc"],["f66b4b98917cee5113ea423b71b7f98ae53d8f00","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^S"]]],["^19","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^30","^34","^3P","~$goog.dom.BrowserFeature","^3;","^3<","^3=","^3S","^3U","^3A","^3C","^31","^35","^38","~$goog.string.Unicode","^3E"]]],["^19","metabase/util/log.cljs"],["7d8a3bf01eb27c2ba7269dc90dc218e46bcc1d3a","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^2Z","^35","~$goog.string.format","^3W","~$lambdaisland.glogi.console"]]],["^19","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.debug.Error","^3;"]]],["^19","goog/debug/relativetimeprovider.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/math/rect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^3@","^3A","~$goog.math.IRect","^3C"]]],["^19","flatland/ordered/map.cljs"],["3a9cb9d79e47d77ecd4f4d550371ecf01464c461","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^30","^34","~$goog.collections.maps","^35","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^19","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^2W"]]],["^19","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/debug/divconsole.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.debug.HtmlFormatter","~$goog.dom.DomHelper","^3<","^3=","^3S","^3?","^2Z","^38","~$goog.style"]]],["^19","goog/debug/fancywindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^30","^34","~$goog.debug.DebugWindow","^4:","^3<","^3=","^3S","^3?","^2Z","^31","^35","^38","^3E"]]],["^19","goog/debug/formatter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.debug","~$goog.debug.RelativeTimeProvider","^3S","^3O","^3U","^2Z","^38"]]],["^19","metabase/shared/util/namespaces.cljs"],["00687008abd6eb291bc9d5ff1fff73210e0bbe6e","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",[]]],["^19","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^30","^31"]]],["^19","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^35","^3J"]]],["^19","metabase/util.cljc"],["2eb945a6741f1450ecac08a9087b862ce52b9e3a","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","~$camel-snake-kebab.internals.macros","~$clojure.data","^D","^3I","^V","~$clojure.walk","~$flatland.ordered.map","~$medley.core","~$metabase.shared.util.i18n","~$metabase.shared.util.namespaces","~$metabase.util.format","~$metabase.util.log","~$net.cgrand.macrovich","~$weavejester.dependency"]]],["^19","camel_snake_kebab/internals/macros.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","~$camel-snake-kebab.internals.alter-name","~$camel-snake-kebab.internals.misc"]]],["^19","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^3=","^3U","^38","^2U"]]],["^19","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^3I"]]],["^19","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^2U","^2Y"]]],["^19","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^30","~$goog.debug.errorcontext"]]],["^19","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["~:shadow.build.js-support/require","ttag"],["^2T","shadow.js.shim.module$ttag.js","require","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.math"]]],["^19","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.flags"]]],["^19","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^3;","^3<"]]],["^19","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^3S","^3M","^3T","^3?","^3O","^37","^38","^2U"]]],["^19","goog/debug/debugwindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^49","^3=","^3S","^3?","^2Z","^38","~$goog.structs.CircularBuffer","^3E"]]],["^19","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R"]]],["^19","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.math.Long","~$goog.math.Integer","^35","^31","^30","~$goog.Uri","^3J"]]],["^19","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^38","^39","^3N","^34"]]],["^19","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^4="]]],["^19","camel_snake_kebab/internals/alter_name.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^38","^3T","^39","^31","^34","^2U"]]],["^19","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^3D"]]],["^19","goog/debug/console.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","~$goog.debug.TextFormatter","^2Z"]]],["^19","lambdaisland/glogi/print.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@","^3W","^31"]]],["^19","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^3E"]]],["^19","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^@"]]],["^19","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^35"]]],["^19","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^34","^39"]]],["^19","goog/dom/vendor.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2N",["^ ","^2O",null,"^2P",["^I",[]],"^2Q",["^R","^35","^3E"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/line_col.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/viz.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/parse.cljc",1689946139000,"jar:file:/root/.m2/repository/weavejester/dependency/0.2.1/dependency-0.2.1.jar!/weavejester/dependency.cljc",1689946093000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/transform.clj",1689946146000,"jar:file:/root/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar!/ring/util/codec.clj",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/core.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/i18n.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/macros.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/plural.clj",1690286813000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util.cljc",1690286813000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/core.cljc",1689946171000,"file:/home/gmrworkspace/dashboard/src/metabase/plugins/classloader.clj",1692013156125,"jar:file:/root/.m2/repository/medley/medley/1.4.0/medley-1.4.0.jar!/medley/core.cljc",1689946185000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util/format.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/walk.clj",1689946160000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/reduction.clj",1689946146000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/util.clj",1689946174000,"jar:file:/root/.m2/repository/camel-snake-kebab/camel-snake-kebab/0.4.3/camel-snake-kebab-0.4.3.jar!/camel_snake_kebab/internals/macros.cljc",1689946178000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/auto_flatten_seq.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/core.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar!/clojure/core/cache.clj",1689946183000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin/types.clj",1689946176000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/math.numeric-tower/0.0.5/math.numeric-tower-0.0.5.jar!/clojure/math/numeric_tower.clj",1689946148000,"jar:file:/root/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1689946165000,"jar:file:/root/.m2/repository/colorize/colorize/0.1.1/colorize-0.1.1.jar!/colorize/core.clj",1689946104000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin.clj",1689946176000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/failure.clj",1689946146000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/variant.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/impl.clj",1692013156125,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/dependency.cljc",1689946139000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/leaf.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/compiler.clj",1689946160000,"jar:file:/root/.m2/repository/org/clojure/core.memoize/1.0.257/core.memoize-1.0.257.jar!/clojure/core/memoize.clj",1689946178000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/print.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/track.cljc",1689946139000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar!/clojure/java/classpath.clj",1689946162000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/factory.clj",1689946173000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1689946174000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/core.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate.clj",1689946173000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/parse.clj",1689946173000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n.clj",1692013156125,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/cfg.clj",1689946146000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/core.clj",1689946173000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/gll.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/random.cljc",1689946171000,"jar:file:/root/.m2/repository/environ/environ/1.2.0/environ-1.2.0.jar!/environ/core.cljc",1689946163000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/collection.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/repeat.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/com/lambdaisland/glogi/1.2.164/glogi-1.2.164.jar!/lambdaisland/glogi.clj",1689947043000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/namespaces.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/file.clj",1689946139000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/utils.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/config.clj",1692013154929,"file:/home/gmrworkspace/dashboard/src/metabase/util/log.clj",1690286813000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689946174000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/combinators_source.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/abnf.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/find.clj",1689946139000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/dynamic_classpath.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate_seq.clj",1689946173000,"file:/home/gmrworkspace/dashboard/src/metabase/util/jvm.clj",1692013156125],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","ClojureScript implementation of number formatting.\n  Implements the [[NumberFormatter]] protocol from numbers_core, plus some helpers.","^7","metabase/shared/formatting/internal/numbers.cljs","^8",1,"^9",5,"^:",1,"^;",48],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"~:shadow/js-access-properties",["^I",["NumberFormat"]],"^J","^K","^L",["^ "],"^O",null,"^P",["^ ","~$u","^Q","^@","^@","^R","^R","^S","^S","^Q","^Q","^T","^S","^U","^V","^V","^V","^W","^W","^X","^W"],"^Y",["^I",["^Z"]],"~:shadow/js-access-global",["^I",["Intl"]],"^[",null,"~:defs",["^ ","~$currency-symbols?",["^ ","~:protocol-inline",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",70,"^9",8,"^:",70,"^;",25,"~:private",true,"~:arglists",["^12",["~$quote",["^12",[["~$options"]]]]]],"^7:",true,"^J","^27","^7","metabase/shared/formatting/internal/numbers.cljs","^;",25,"~:method-params",["^12",[["^7="]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^9",1,"~:variadic?",false,"^8",70,"~:ret-tag",["^I",["~$boolean","~$any"]],"^:",70,"~:max-fixed-arity",1,"~:fn-var",true,"^7;",["^12",["^7<",["^12",[["^7="]]]]]],"~$default-number-separators",["^ ","^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",10,"^9",16,"^:",10,"^;",41,"^7:",true],"^7:",true,"^J","^2>","^7","metabase/shared/formatting/internal/numbers.cljs","^;",41,"^9",1,"^8",10,"^:",10,"~:tag","~$string"],"~$adjust-number-separators",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",12,"^9",8,"^:",12,"^;",32,"^7:",true,"^7;",["^12",["^7<",["^12",[["~$text","~$separators"]]]]]],"^7:",true,"^J","^2G","^7","metabase/shared/formatting/internal/numbers.cljs","^;",32,"^7>",["^12",[["^7K","^7L"]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",12,"^7B",["^I",[null,"^7I"]],"^:",12,"^7E",2,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7K","^7L"]]]]]],"~$number-formatter-for-options",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",81,"^9",7,"^:",81,"^;",35,"^7;",["^12",["^7<",["^12",[["^7="]]]]],"^6","The key function implemented for each language, and called by the top-level number formatting.\n  Returns a [[core/NumberFormatter]] instance for each set of options.\n  These formatters are reusable, but this does no caching."],"^J","^2B","^7","metabase/shared/formatting/internal/numbers.cljs","^;",35,"^7>",["^12",[["^7="]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",81,"^7B","^1M","^:",81,"^7E",1,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7="]]]]],"^6","The key function implemented for each language, and called by the top-level number formatting.\n  Returns a [[core/NumberFormatter]] instance for each set of options.\n  These formatters are reusable, but this does no caching."],"~$base-format-scientific",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",28,"^9",8,"^:",28,"^;",30,"^7:",true,"^7;",["^12",["^7<",["^12",[["~$nf","~$number"]]]]]],"^7:",true,"^J","^2J","^7","metabase/shared/formatting/internal/numbers.cljs","^;",30,"^7>",["^12",[["^7O","^7P"]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",28,"^:",28,"^7E",2,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7O","^7P"]]]]]],"~$formatter-fn",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",76,"^9",8,"^:",76,"^;",20,"^7:",true,"^7;",["^12",["^7<",["^12",[["^7O","^7="]]]]]],"^7:",true,"^J","^2H","^7","metabase/shared/formatting/internal/numbers.cljs","^;",20,"^7>",["^12",[["^7O","^7="]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",76,"^:",76,"^7E",2,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7O","^7="]]]]]],"~$fix-currency-symbols",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",21,"^9",8,"^:",21,"^;",28,"^7:",true,"^7;",["^12",["^7<",["^12",[["^7K","^T"]]]]]],"^7:",true,"^J","^1O","^7","metabase/shared/formatting/internal/numbers.cljs","^;",28,"^7>",["^12",[["^7K","^T"]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",21,"^7B","^7I","^:",21,"^7E",2,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7K","^T"]]]]]],"~$number-formatter-for-options-baseline",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",50,"^9",8,"^:",50,"^;",45,"^7:",true,"^7;",["^12",["^7<",["^12",[["^7="]]]]]],"^7:",true,"^J","^1K","^7","metabase/shared/formatting/internal/numbers.cljs","^;",45,"^7>",["^12",[["^7="]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",50,"^7B","~$js","^:",50,"^7E",1,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7="]]]]]],"~$t_metabase$shared$formatting$internal$numbers63102",["^ ","~:num-fields",5,"~:protocols",["^I",["~$cljs.core/IMeta","~$metabase.shared.formatting.internal.numbers-core/NumberFormatter","~$cljs.core/IWithMeta"]],"^J","^1M","^7","metabase/shared/formatting/internal/numbers.cljs","~:type",true,"~:anonymous",true,"^9",null,"^8",null,"~:record",false,"^7H","~$function","~:skip-protocol-flag",["^I",["^7X","^7Z"]]],"~$->t_metabase$shared$formatting$internal$numbers63102",["^ ","^79",null,"^5",["^ ","^80",true,"^7W",["^I",["^7X","^7Y","^7Z"]],"^83",["^I",["^7X","^7Z"]],"~:factory","~:positional","^7;",["^12",["^7<",["^12",[["^7=","^7O","~$symbols?","~$formatter","~$meta63103"]]]]],"^6","Positional factory function for metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102.","^7",null],"^7W",["^I",["^7X","^7Y","^7Z"]],"^J","^21","^7","metabase/shared/formatting/internal/numbers.cljs","^7>",["^12",[["^7=","^7O","^87","^88","^89"]]],"^7?",null,"^7@",["^12",[null,null]],"^80",true,"^9",null,"^7A",false,"^85","^86","^8",null,"^7B","^1M","^7E",5,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7=","^7O","^87","^88","^89"]]]]],"^83",["^I",["^7X","^7Z"]],"^6","Positional factory function for metabase.shared.formatting.internal.numbers/t_metabase$shared$formatting$internal$numbers63102."],"~$format-number-scientific",["^ ","^79",null,"^5",["^ ","^7","metabase/shared/formatting/internal/numbers.cljs","^8",108,"^9",7,"^:",108,"^;",31,"^7;",["^12",["^7<",["^12",[["^7P","^7="]]]]],"^6","Formats a number in scientific notation. The wrangling required differs by platform."],"^J","^1[","^7","metabase/shared/formatting/internal/numbers.cljs","^;",31,"^7>",["^12",[["^7P","^7="]]],"^7?",null,"^7@",["^12",[null,null]],"^9",1,"^7A",false,"^8",108,"^7B","^7D","^:",108,"^7E",2,"^7F",true,"^7;",["^12",["^7<",["^12",[["^7P","^7="]]]]],"^6","Formats a number in scientific notation. The wrangling required differs by platform."]],"^10",["^ ","^@","^@","~$u","^Q","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^Y",["^I",["^7=","~:maximumFractionDigits","~:currencyDisplay","^7O","~:minimum-integer-digits","~:minimum-significant-digits","~:maximum-significant-digits","~:value","~:maximumSignificantDigits","^7[","~:minimumIntegerDigits","^88","~:style","~:currency","~:maximum-fraction-digits","~:currency-style","~:useGrouping","~:number-separators","~:minimumFractionDigits","~:number-style","^87","~:notation","^89","~:keywordize-keys","~:minimum-fraction-digits","~:minimumSignificantDigits","~:text"]],"~:order",["^7[","^8A","^8M","^8K","^8<","^8=","^8B","^8C","^8D","^8E","^8H","^8J","^8L","^8O","^8F","^8G","^8@","^8>","^8N","^8?","^8I","^8P","^7=","^7O","^87","^88","^89"]],"^15",["^ ","^Z",["^I",[]]],"^16",["^ "],"^17",["^R","^@","^V","^W","^S","^Q"]],"^N","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^2M",[["^8T","~:static-fns"],true,["^8T","~:shadow-tweaks"],null,["^8T","~:source-map-inline"],null,["^8T","~:elide-asserts"],true,["^8T","~:optimize-constants"],null,["^8T","^1<"],null,["^8T","~:external-config"],null,["^8T","~:tooling-config"],null,["^8T","~:emit-constants"],null,["^8T","~:load-tests"],false,["^8T","~:form-size-threshold"],null,["^8T","~:global-goog-object&array"],null,["^8T","~:data-readers"],null,["^8T","~:infer-externs"],"~:auto",["^8T","^1>"],["^I",["^1?"]],["~:js-options","~:js-provider"],"^Z",["~:mode"],"~:release",["^8T","~:fn-invoke-direct"],null,["^8T","~:source-map"],null]]]