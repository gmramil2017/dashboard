["^ ","~:output",["^ ","~:js","goog.provide('metabase.lib.schema');\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.native\",\"metabase.lib.schema/stage.native\",-1206212320),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"=\",\"=\",1152933628),new cljs.core.Keyword(\"mbql.stage\",\"native\",\"mbql.stage/native\",359422194)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native\",\"native\",-613060878),cljs.core.some_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sequential\",\"sequential\",-1082983960),cljs.core.any_QMARK_], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"collection\",\"collection\",-683361892),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.Keyword(\"metabase.lib.schema.common\",\"non-blank-string\",\"metabase.lib.schema.common/non-blank-string\",-2032366619)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"template-tags\",\"template-tags\",1853115685),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.template-tag\",\"template-tag-map\",\"metabase.lib.schema.template-tag/template-tag-map\",1471181299)], null)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"breakouts\",\"metabase.lib.schema/breakouts\",1354104361),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sequential\",\"sequential\",-1082983960),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.ref\",\"ref\",\"metabase.lib.schema.ref/ref\",-1124116498)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"fields\",\"metabase.lib.schema/fields\",-2010307316),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sequential\",\"sequential\",-1082983960),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.ref\",\"ref\",\"metabase.lib.schema.ref/ref\",-1124116498)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"filters\",\"metabase.lib.schema/filters\",889389881),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sequential\",\"sequential\",-1082983960),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"min\",\"min\",444991522),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"boolean\",\"metabase.lib.schema.expression/boolean\",-1396506592)], null)], null));\nmetabase.lib.schema.expression_ref_error_for_stage = (function metabase$lib$schema$expression_ref_error_for_stage(stage){\nvar expression_names = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"lib\",\"expression-name\",\"lib/expression-name\",-1799326590),cljs.core.second)),new cljs.core.Keyword(null,\"expressions\",\"expressions\",255689909).cljs$core$IFn$_invoke$arity$1(stage));\nreturn cljs.core.first(cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.some_QMARK_,(function metabase$lib$schema$expression_ref_error_for_stage_$_match_47847(_AMPERSAND_parents,_AMPERSAND_match){\ntry{if(((cljs.core.vector_QMARK_(_AMPERSAND_match)) && ((cljs.core.count(_AMPERSAND_match) === 3)))){\ntry{var _AMPERSAND_match_0__47858 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(0));\nif(cljs.core.keyword_identical_QMARK_(_AMPERSAND_match_0__47858,new cljs.core.Keyword(null,\"expression\",\"expression\",202311876))){\ntry{var _AMPERSAND_match_2__47861 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(2));\nif(cljs.core.truth_(cljs.core.complement(expression_names)(_AMPERSAND_match_2__47861))){\nvar expression_name = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(2));\nvar _opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(1));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\"Invalid :expression reference: no expression named \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([expression_name], 0))].join('')], null);\n} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47868){if((e47868 instanceof Error)){\nvar e__46040__auto__ = e47868;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47868;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47866){if((e47866 instanceof Error)){\nvar e__46040__auto__ = e47866;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47866;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47863){if((e47863 instanceof Error)){\nvar e__46040__auto__ = e47863;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nreturn metabase.mbql.util.match.impl.match_in_collection(metabase$lib$schema$expression_ref_error_for_stage_$_match_47847,_AMPERSAND_parents,_AMPERSAND_match);\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47863;\n\n}\n}})(cljs.core.PersistentVector.EMPTY,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(stage,new cljs.core.Keyword(null,\"joins\",\"joins\",1033962699),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"lib\",\"stage-metadata\",\"lib/stage-metadata\",1079153610)], 0))))));\n});\nmetabase.lib.schema.aggregation_ref_error_for_stage = (function metabase$lib$schema$aggregation_ref_error_for_stage(stage){\nvar uuids = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"lib\",\"uuid\",\"lib/uuid\",-2145250720),cljs.core.second)),new cljs.core.Keyword(null,\"aggregation\",\"aggregation\",1597476696).cljs$core$IFn$_invoke$arity$1(stage));\nreturn cljs.core.first(cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.some_QMARK_,(function metabase$lib$schema$aggregation_ref_error_for_stage_$_match_47873(_AMPERSAND_parents,_AMPERSAND_match){\ntry{if(((cljs.core.vector_QMARK_(_AMPERSAND_match)) && ((cljs.core.count(_AMPERSAND_match) === 3)))){\ntry{var _AMPERSAND_match_0__47895 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(0));\nif(cljs.core.keyword_identical_QMARK_(_AMPERSAND_match_0__47895,new cljs.core.Keyword(null,\"aggregation\",\"aggregation\",1597476696))){\ntry{var _AMPERSAND_match_2__47897 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(2));\nif(cljs.core.truth_(cljs.core.complement(uuids)(_AMPERSAND_match_2__47897))){\nvar ag_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(2));\nvar _opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(1));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\"Invalid :aggregation reference: no aggregation with uuid \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ag_uuid)].join('')], null);\n} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47907){if((e47907 instanceof Error)){\nvar e__46040__auto__ = e47907;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47907;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47904){if((e47904 instanceof Error)){\nvar e__46040__auto__ = e47904;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47904;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47903){if((e47903 instanceof Error)){\nvar e__46040__auto__ = e47903;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nreturn metabase.mbql.util.match.impl.match_in_collection(metabase$lib$schema$aggregation_ref_error_for_stage_$_match_47873,_AMPERSAND_parents,_AMPERSAND_match);\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47903;\n\n}\n}})(cljs.core.PersistentVector.EMPTY,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(stage,new cljs.core.Keyword(null,\"joins\",\"joins\",1033962699),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"lib\",\"stage-metadata\",\"lib/stage-metadata\",1079153610)], 0))))));\n});\n/**\n * Validate references in the context of a single `stage`, independent of any previous stages. If there is an error with\n *   a reference, return a string describing the error.\n */\nmetabase.lib.schema.ref_error_for_stage = cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(metabase.lib.schema.expression_ref_error_for_stage,metabase.lib.schema.aggregation_ref_error_for_stage);\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.valid-refs\",\"metabase.lib.schema/stage.valid-refs\",-383625241),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\"Valid references for a single query stage\",new cljs.core.Keyword(\"error\",\"fn\",\"error/fn\",-1263293860),(function (p__47916,_){\nvar map__47917 = p__47916;\nvar map__47917__$1 = cljs.core.__destructure_map(map__47917);\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47917__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nreturn metabase.lib.schema.ref_error_for_stage(value);\n})], null),cljs.core.complement(metabase.lib.schema.ref_error_for_stage)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql\",\"metabase.lib.schema/stage.mbql\",1051351388),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"=\",\"=\",1152933628),new cljs.core.Keyword(\"mbql.stage\",\"mbql\",\"mbql.stage/mbql\",1578747798)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"joins\",\"joins\",1033962699),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.join\",\"joins\",\"metabase.lib.schema.join/joins\",106891649)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expressions\",\"expressions\",255689909),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.expression\",\"expressions\",\"metabase.lib.schema.expression/expressions\",790922225)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"breakout\",\"breakout\",-732419050),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.Keyword(\"metabase.lib.schema\",\"breakouts\",\"metabase.lib.schema/breakouts\",1354104361)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aggregation\",\"aggregation\",1597476696),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.aggregation\",\"aggregations\",\"metabase.lib.schema.aggregation/aggregations\",-203649172)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.Keyword(\"metabase.lib.schema\",\"fields\",\"metabase.lib.schema/fields\",-2010307316)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"filters\",\"filters\",974726919),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.Keyword(\"metabase.lib.schema\",\"filters\",\"metabase.lib.schema/filters\",889389881)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"order-by\",\"order-by\",1527318070),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.order-by\",\"order-bys\",\"metabase.lib.schema.order-by/order-bys\",-524479705)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"source-table\",\"source-table\",-225307692),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.id\",\"table\",\"metabase.lib.schema.id/table\",-583250693)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"source-card\",\"source-card\",-1580820390),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"optional\",\"optional\",2053951509),true], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.id\",\"card\",\"metabase.lib.schema.id/card\",-801728009)], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\":source-query is not allowed in pMBQL queries.\"], null),(function (p1__47919_SHARP_){\nreturn (!(cljs.core.contains_QMARK_(p1__47919_SHARP_,new cljs.core.Keyword(null,\"source-query\",\"source-query\",198004422))));\n})], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\"A query cannot have both a :source-table and a :source-card.\"], null),cljs.core.complement(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"source-table\",\"source-table\",-225307692),new cljs.core.Keyword(null,\"source-card\",\"source-card\",-1580820390)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.valid-refs\",\"metabase.lib.schema/stage.valid-refs\",-383625241)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.with-source-table\",\"metabase.lib.schema/stage.mbql.with-source-table\",-2119049176),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"merge\",\"merge\",-1804319409),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql\",\"metabase.lib.schema/stage.mbql\",1051351388)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"source-table\",\"source-table\",-225307692),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.id\",\"table\",\"metabase.lib.schema.id/table\",-583250693)], null)], null)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.with-source-card\",\"metabase.lib.schema/stage.mbql.with-source-card\",-1292215799),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"merge\",\"merge\",-1804319409),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql\",\"metabase.lib.schema/stage.mbql\",1051351388)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"source-card\",\"source-card\",-1580820390),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema.id\",\"card\",\"metabase.lib.schema.id/card\",-801728009)], null)], null)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.with-source\",\"metabase.lib.schema/stage.mbql.with-source\",1947556064),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"or\",\"or\",235744169),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.with-source-table\",\"metabase.lib.schema/stage.mbql.with-source-table\",-2119049176)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.with-source-card\",\"metabase.lib.schema/stage.mbql.with-source-card\",-1292215799)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.without-source\",\"metabase.lib.schema/stage.mbql.without-source\",1507072886),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql\",\"metabase.lib.schema/stage.mbql\",1051351388)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\"Only the initial stage of a query can have a :source-table or :source-card.\"], null),cljs.core.complement(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"source-table\",\"source-table\",-225307692),new cljs.core.Keyword(null,\"source-card\",\"source-card\",-1580820390)))], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.type\",\"metabase.lib.schema/stage.type\",1362996639),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"enum\",\"enum\",1679018432),new cljs.core.Keyword(\"mbql.stage\",\"native\",\"mbql.stage/native\",359422194),new cljs.core.Keyword(\"mbql.stage\",\"mbql\",\"mbql.stage/mbql\",1578747798)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage\",\"metabase.lib.schema/stage\",1626908550),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.type\",\"metabase.lib.schema/stage.type\",1362996639)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"multi\",\"multi\",-190293005),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"mbql.stage\",\"native\",\"mbql.stage/native\",359422194),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.native\",\"metabase.lib.schema/stage.native\",-1206212320)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"mbql.stage\",\"mbql\",\"mbql.stage/mbql\",1578747798),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql\",\"metabase.lib.schema/stage.mbql\",1051351388)], null)], null)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.initial\",\"metabase.lib.schema/stage.initial\",-1483255395),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.type\",\"metabase.lib.schema/stage.type\",1362996639)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"multi\",\"multi\",-190293005),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"mbql.stage\",\"native\",\"mbql.stage/native\",359422194),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.native\",\"metabase.lib.schema/stage.native\",-1206212320)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"mbql.stage\",\"mbql\",\"mbql.stage/mbql\",1578747798),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.with-source\",\"metabase.lib.schema/stage.mbql.with-source\",1947556064)], null)], null)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.additional\",\"metabase.lib.schema/stage.additional\",1347605157),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.mbql.without-source\",\"metabase.lib.schema/stage.mbql.without-source\",1507072886));\n/**\n * Apparently you're allowed to use a join alias for a join that appeared in any previous stage or the current stage, or\n *   *inside* any join in any previous stage or the current stage. Why? Who knows, but this is a real thing.\n *   See [[metabase.driver.sql.query-processor-test/join-source-queries-with-joins-test]] for example.\n * \n *   This doesn't really make sense IMO (you should use string field refs to refer to things from a previous\n *   stage...right?) but for now we'll have to allow it until we can figure out how to go fix all of the old broken queries.\n * \n *   Also, it's apparently legal to use a join alias to refer to a column that comes from a join in a source Card, and\n *   there is no way for us to know what joins exist in the source Card without a metadata provider, so we're just going\n *   to have to go ahead and skip validation in that case. Icky! But it's better than being overly strict and rejecting\n *   queries that the QP could have fixed.\n * \n *   Anyways, this function returns a function with the signature:\n * \n *  (visible-join-alias? <join-alias>) => boolean\n */\nmetabase.lib.schema.visible_join_alias_QMARK__fn = (function metabase$lib$schema$visible_join_alias_QMARK__fn(stage){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"source-card\",\"source-card\",-1580820390).cljs$core$IFn$_invoke$arity$1(stage))){\nreturn cljs.core.constantly(true);\n} else {\nvar join_aliases_in_join = (function metabase$lib$schema$visible_join_alias_QMARK__fn_$_join_aliases_in_join(join){\nreturn cljs.core.cons(new cljs.core.Keyword(null,\"alias\",\"alias\",-2039751630).cljs$core$IFn$_invoke$arity$1(join),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(join_aliases_in_stage,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"stages\",\"stages\",-442109532).cljs$core$IFn$_invoke$arity$1(join)], 0)));\n});\nvar join_aliases_in_stage = (function metabase$lib$schema$visible_join_alias_QMARK__fn_$_join_aliases_in_stage(stage__$1){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(join_aliases_in_join,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"joins\",\"joins\",1033962699).cljs$core$IFn$_invoke$arity$1(stage__$1)], 0));\n});\nreturn cljs.core.set(join_aliases_in_stage(stage));\n}\n});\nmetabase.lib.schema.join_ref_error_for_stages = (function metabase$lib$schema$join_ref_error_for_stages(stages){\nvar visible_join_alias_QMARK_ = cljs.core.constantly(false);\nvar i = (0);\nvar G__47930 = stages;\nvar vec__47932 = G__47930;\nvar seq__47933 = cljs.core.seq(vec__47932);\nvar first__47934 = cljs.core.first(seq__47933);\nvar seq__47933__$1 = cljs.core.next(seq__47933);\nvar stage = first__47934;\nvar more = seq__47933__$1;\nvar visible_join_alias_QMARK___$1 = visible_join_alias_QMARK_;\nvar i__$1 = i;\nvar G__47930__$1 = G__47930;\nwhile(true){\nvar visible_join_alias_QMARK___$2 = visible_join_alias_QMARK___$1;\nvar i__$2 = i__$1;\nvar vec__47937 = G__47930__$1;\nvar seq__47938 = cljs.core.seq(vec__47937);\nvar first__47939 = cljs.core.first(seq__47938);\nvar seq__47938__$1 = cljs.core.next(seq__47938);\nvar stage__$1 = first__47939;\nvar more__$1 = seq__47938__$1;\nvar visible_join_alias_QMARK___$3 = cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(visible_join_alias_QMARK___$2,metabase.lib.schema.visible_join_alias_QMARK__fn(stage__$1));\nvar or__5045__auto__ = cljs.core.first(cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.some_QMARK_,((function (visible_join_alias_QMARK___$1,i__$1,G__47930__$1,visible_join_alias_QMARK___$3,visible_join_alias_QMARK___$2,i__$2,vec__47937,seq__47938,first__47939,seq__47938__$1,stage__$1,more__$1,visible_join_alias_QMARK_,i,G__47930,vec__47932,seq__47933,first__47934,seq__47933__$1,stage,more){\nreturn (function metabase$lib$schema$join_ref_error_for_stages_$_match_47940(_AMPERSAND_parents,_AMPERSAND_match){\ntry{if(((cljs.core.vector_QMARK_(_AMPERSAND_match)) && ((cljs.core.count(_AMPERSAND_match) === 3)))){\ntry{var _AMPERSAND_match_0__47943 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(0));\nif(cljs.core.keyword_identical_QMARK_(_AMPERSAND_match_0__47943,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500))){\ntry{var _AMPERSAND_match_1__47944 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(1));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"join-alias\",\"join-alias\",1454206794).cljs$core$IFn$_invoke$arity$1(_AMPERSAND_match_1__47944))){\ntry{var _AMPERSAND_match_1__47944__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(1));\nif((((!((_AMPERSAND_match_1__47944__$1 == null))))?(((((_AMPERSAND_match_1__47944__$1.cljs$lang$protocol_mask$partition0$ & (256))) || ((cljs.core.PROTOCOL_SENTINEL === _AMPERSAND_match_1__47944__$1.cljs$core$ILookup$))))?true:(((!_AMPERSAND_match_1__47944__$1.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,_AMPERSAND_match_1__47944__$1):false)):cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,_AMPERSAND_match_1__47944__$1))){\ntry{var _AMPERSAND_match_1__47944_join_alias__47948 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(_AMPERSAND_match_1__47944__$1,new cljs.core.Keyword(null,\"join-alias\",\"join-alias\",1454206794),new cljs.core.Keyword(\"clojure.core.match\",\"not-found\",\"clojure.core.match/not-found\",1553053780));\nif(cljs.core.truth_(cljs.core.complement(visible_join_alias_QMARK___$3)(_AMPERSAND_match_1__47944_join_alias__47948))){\nvar join_alias = cljs.core.get.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match_1__47944__$1,new cljs.core.Keyword(null,\"join-alias\",\"join-alias\",1454206794));\nvar _id_or_name = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_match,(2));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\"Invalid :field reference in stage \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i__$2),\": no join named \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([join_alias], 0))].join('')], null);\n} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47958){if((e47958 instanceof Error)){\nvar e__46040__auto__ = e47958;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47958;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47955){if((e47955 instanceof Error)){\nvar e__46040__auto__ = e47955;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47955;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47952){if((e47952 instanceof Error)){\nvar e__46040__auto__ = e47952;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47952;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47951){if((e47951 instanceof Error)){\nvar e__46040__auto__ = e47951;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nthrow cljs.core.match.backtrack;\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47951;\n\n}\n}} else {\nthrow cljs.core.match.backtrack;\n\n}\n}catch (e47950){if((e47950 instanceof Error)){\nvar e__46040__auto__ = e47950;\nif((e__46040__auto__ === cljs.core.match.backtrack)){\nreturn metabase.mbql.util.match.impl.match_in_collection(metabase$lib$schema$join_ref_error_for_stages_$_match_47940,_AMPERSAND_parents,_AMPERSAND_match);\n} else {\nthrow e__46040__auto__;\n}\n} else {\nthrow e47950;\n\n}\n}});})(visible_join_alias_QMARK___$1,i__$1,G__47930__$1,visible_join_alias_QMARK___$3,visible_join_alias_QMARK___$2,i__$2,vec__47937,seq__47938,first__47939,seq__47938__$1,stage__$1,more__$1,visible_join_alias_QMARK_,i,G__47930,vec__47932,seq__47933,first__47934,seq__47933__$1,stage,more))\n(cljs.core.PersistentVector.EMPTY,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(stage__$1,new cljs.core.Keyword(null,\"joins\",\"joins\",1033962699),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"stage\",\"metadata\",\"stage/metadata\",1707239131)], 0))))));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nif(cljs.core.seq(more__$1)){\nvar G__47981 = visible_join_alias_QMARK___$3;\nvar G__47982 = (i__$2 + (1));\nvar G__47983 = more__$1;\nvisible_join_alias_QMARK___$1 = G__47981;\ni__$1 = G__47982;\nG__47930__$1 = G__47983;\ncontinue;\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Like [[ref-error-for-stage]], but validate references in the context of a sequence of several stages; for validations\n *   that can't be done on the basis of just a single stage. For example join alias validation needs to take into account\n *   previous stages.\n */\nmetabase.lib.schema.ref_error_for_stages = metabase.lib.schema.join_ref_error_for_stages;\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stages.valid-refs\",\"metabase.lib.schema/stages.valid-refs\",-193458245),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"error\",\"message\",\"error/message\",-502809098),\"Valid references for all query stages\",new cljs.core.Keyword(\"error\",\"fn\",\"error/fn\",-1263293860),(function (p__47963,_){\nvar map__47964 = p__47963;\nvar map__47964__$1 = cljs.core.__destructure_map(map__47964);\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47964__$1,new cljs.core.Keyword(null,\"value\",\"value\",305978217));\nreturn (metabase.lib.schema.ref_error_for_stages.cljs$core$IFn$_invoke$arity$1 ? metabase.lib.schema.ref_error_for_stages.cljs$core$IFn$_invoke$arity$1(value) : metabase.lib.schema.ref_error_for_stages.call(null,value));\n})], null),cljs.core.complement(metabase.lib.schema.ref_error_for_stages)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"stages\",\"metabase.lib.schema/stages\",-391672350),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cat\",\"cat\",-1457810207),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.initial\",\"metabase.lib.schema/stage.initial\",-1483255395)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"*\",\"*\",-1294732318),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stage.additional\",\"metabase.lib.schema/stage.additional\",1347605157)], null)], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stages.valid-refs\",\"metabase.lib.schema/stages.valid-refs\",-193458245)], null)], null));\nmetabase.util.malli.registry.register_BANG_(new cljs.core.Keyword(\"metabase.lib.schema\",\"query\",\"metabase.lib.schema/query\",-1207387140),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"and\",\"and\",-971899817),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"lib\",\"type\",\"lib/type\",1175424801),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"=\",\"=\",1152933628),new cljs.core.Keyword(\"mbql\",\"query\",\"mbql/query\",-1285688662)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"database\",\"database\",1849087575),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"or\",\"or\",235744169),new cljs.core.Keyword(\"metabase.lib.schema.id\",\"database\",\"metabase.lib.schema.id/database\",2063511424),new cljs.core.Keyword(\"metabase.lib.schema.id\",\"saved-questions-virtual-database\",\"metabase.lib.schema.id/saved-questions-virtual-database\",700243236)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"stages\",\"stages\",-442109532),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),new cljs.core.Keyword(\"metabase.lib.schema\",\"stages\",\"metabase.lib.schema/stages\",-391672350)], null)], null)], null),metabase.lib.schema.util.UniqueUUIDs], null));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Malli schema for the pMBQL query type, the version of MBQL produced and manipulated by the new Cljc\n  Dashboard lib. Currently this is a little different from the version of MBQL consumed by the QP, specified\n  in [[metabase.mbql.schema]]. Hopefully these versions will converge in the future.\n\n  Some primitives below are duplicated from [[metabase.util.malli.schema]] since that's not `.cljc`. Other stuff is\n  copied from [[metabase.mbql.schema]] so this can exist completely independently; hopefully at some point in the\n  future we can deprecate that namespace and eventually do away with it entirely.","~:file","metabase/lib/schema.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",24],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$metabase.lib.schema","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$metabase.lib.schema.template-tag","^Q","~$metabase.lib.schema.expression.temporal","^R","~$metabase.lib.schema.util","^S","~$join","~$metabase.lib.schema.join","~$metabase.mbql.util.match","^V","~$lib.schema.util","^S","~$metabase.lib.schema.expression.conditional","^X","~$mbql.match","^V","~$metabase.lib.schema.literal","^Z","~$metabase.lib.schema.ref","^[","^@","^@","~$expression","~$metabase.lib.schema.expression","~$goog","^12","~$metabase.util.malli.registry","^13","~$metabase.lib.schema.common","^14","~$ref","^[","^11","^11","~$metabase.lib.schema.id","^16","~$mr","^13","~$template-tag","^Q","~$common","^14","~$metabase.lib.schema.order-by","^1:","~$metabase.lib.schema.expression.string","^1;","~$metabase.lib.schema.expression.arithmetic","^1<","~$id","^16","^U","^U","~$order-by","^1:","~$metabase.lib.schema.aggregation","^1?","~$metabase.lib.schema.filter","^1@","~$aggregation","^1?"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^@","^@","^V","^V","^Y","^V","^10","^11","^13","^13","^11","^11","^17","^13"],"~:form",["~#list",["~$ns","^K","Malli schema for the pMBQL query type, the version of MBQL produced and manipulated by the new Cljc\n  Dashboard lib. Currently this is a little different from the version of MBQL consumed by the QP, specified\n  in [[metabase.mbql.schema]]. Hopefully these versions will converge in the future.\n\n  Some primitives below are duplicated from [[metabase.util.malli.schema]] since that's not `.cljc`. Other stuff is\n  copied from [[metabase.mbql.schema]] so this can exist completely independently; hopefully at some point in the\n  future we can deprecate that namespace and eventually do away with it entirely.",["^1G",["^1C",["^1?","~:as","^1A"],["^14","^1I","^19"],["^11","^1I","^10"],["^1<"],["^X"],["^1;"],["^R"],["^1@"],["^16","^1I","^1="],["^U","^1I","^T"],["^Z"],["^1:","^1I","^1>"],["^[","^1I","^15"],["^Q","^1I","^18"],["^S","^1I","^W"],["^V","^1I","^Y"],["^13","^1I","^17"]]]]],"~:flags",["^ ","^1C",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^12","^@","^1?","^14","^11","^1<","^X","^1;","^R","^1@","^16","^U","^Z","^1:","^[","^Q","^S","^V","^13"]],"^N","^K","~:resource-id",["~:shadow.build.classpath/resource","metabase/lib/schema.cljc"],"~:compiled-at",1692612526780,"^L",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^U","^V","^V","^W","^S","^X","^X","^Y","^V","^Z","^Z","^[","^[","^@","^@","^10","^11","^12","^12","^13","^13","^14","^14","^15","^[","^11","^11","^16","^16","^17","^13","^18","^Q","^19","^14","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^16","^U","^U","^1>","^1:","^1?","^1?","^1@","^1@","^1A","^1?"],"~:resource-name","metabase/lib/schema.cljc","~:warnings",[],"~:source","(ns metabase.lib.schema\n  \"Malli schema for the pMBQL query type, the version of MBQL produced and manipulated by the new Cljc\n  Dashboard lib. Currently this is a little different from the version of MBQL consumed by the QP, specified\n  in [[metabase.mbql.schema]]. Hopefully these versions will converge in the future.\n\n  Some primitives below are duplicated from [[metabase.util.malli.schema]] since that's not `.cljc`. Other stuff is\n  copied from [[metabase.mbql.schema]] so this can exist completely independently; hopefully at some point in the\n  future we can deprecate that namespace and eventually do away with it entirely.\"\n  (:require\n   [metabase.lib.schema.aggregation :as aggregation]\n   [metabase.lib.schema.common :as common]\n   [metabase.lib.schema.expression :as expression]\n   [metabase.lib.schema.expression.arithmetic]\n   [metabase.lib.schema.expression.conditional]\n   [metabase.lib.schema.expression.string]\n   [metabase.lib.schema.expression.temporal]\n   [metabase.lib.schema.filter]\n   [metabase.lib.schema.id :as id]\n   [metabase.lib.schema.join :as join]\n   [metabase.lib.schema.literal]\n   [metabase.lib.schema.order-by :as order-by]\n   [metabase.lib.schema.ref :as ref]\n   [metabase.lib.schema.template-tag :as template-tag]\n   [metabase.lib.schema.util :as lib.schema.util]\n   [metabase.mbql.util.match :as mbql.match]\n   [metabase.util.malli.registry :as mr]))\n\n(comment metabase.lib.schema.expression.arithmetic/keep-me\n         metabase.lib.schema.expression.conditional/keep-me\n         metabase.lib.schema.expression.string/keep-me\n         metabase.lib.schema.expression.temporal/keep-me\n         metabase.lib.schema.filter/keep-me\n         metabase.lib.schema.literal/keep-me)\n\n(mr/def ::stage.native\n  [:map\n   [:lib/type [:= :mbql.stage/native]]\n   ;; the actual native query, depends on the underlying database. Could be a raw SQL string or something like that.\n   ;; Only restriction is that it is non-nil.\n   [:native some?]\n   ;; any parameters that should be passed in along with the query to the underlying query engine, e.g. for JDBC these\n   ;; are the parameters we pass in for a `PreparedStatement` for `?` placeholders. These can be anything, including\n   ;; nil.\n   [:args {:optional true} [:sequential any?]]\n   ;; the Table/Collection/etc. that this query should be executed against; currently only used for MongoDB, where it\n   ;; is required.\n   [:collection {:optional true} ::common/non-blank-string]\n   ;; optional template tag declarations. Template tags are things like `{{x}}` in the query (the value of the\n   ;; `:native` key), but their definition lives under this key.\n   [:template-tags {:optional true} [:ref ::template-tag/template-tag-map]]])\n\n(mr/def ::breakouts\n  [:sequential {:min 1} [:ref ::ref/ref]])\n\n;;; TODO -- `:fields` is supposed to be distinct (ignoring UUID), e.g. you can't have `[:field {} 1]` in there\n;;; twice. (#32489)\n(mr/def ::fields\n  [:sequential {:min 1} [:ref ::ref/ref]])\n\n(mr/def ::filters\n  [:sequential {:min 1} [:ref ::expression/boolean]])\n\n(defn- expression-ref-error-for-stage [stage]\n  (let [expression-names (into #{} (map (comp :lib/expression-name second)) (:expressions stage))]\n    (mbql.match/match-one (dissoc stage :joins :lib/stage-metadata)\n      [:expression _opts (expression-name :guard (complement expression-names))]\n      (str \"Invalid :expression reference: no expression named \" (pr-str expression-name)))))\n\n(defn- aggregation-ref-error-for-stage [stage]\n  (let [uuids (into #{} (map (comp :lib/uuid second)) (:aggregation stage))]\n    (mbql.match/match-one (dissoc stage :joins :lib/stage-metadata)\n      [:aggregation _opts (ag-uuid :guard (complement uuids))]\n      (str \"Invalid :aggregation reference: no aggregation with uuid \" ag-uuid))))\n\n(def ^:private ^{:arglists '([stage])} ref-error-for-stage\n  \"Validate references in the context of a single `stage`, independent of any previous stages. If there is an error with\n  a reference, return a string describing the error.\"\n  (some-fn expression-ref-error-for-stage\n           aggregation-ref-error-for-stage))\n\n(mr/def ::stage.valid-refs\n  [:fn\n   {:error/message \"Valid references for a single query stage\"\n    :error/fn      (fn [{:keys [value]} _]\n                     (ref-error-for-stage value))}\n   (complement ref-error-for-stage)])\n\n(mr/def ::stage.mbql\n  [:and\n   [:map\n    [:lib/type     [:= :mbql.stage/mbql]]\n    [:joins        {:optional true} [:ref ::join/joins]]\n    [:expressions  {:optional true} [:ref ::expression/expressions]]\n    [:breakout     {:optional true} ::breakouts]\n    [:aggregation  {:optional true} [:ref ::aggregation/aggregations]]\n    [:fields       {:optional true} ::fields]\n    [:filters      {:optional true} ::filters]\n    [:order-by     {:optional true} [:ref ::order-by/order-bys]]\n    [:source-table {:optional true} [:ref ::id/table]]\n    [:source-card  {:optional true} [:ref ::id/card]]]\n   [:fn\n    {:error/message \":source-query is not allowed in pMBQL queries.\"}\n    #(not (contains? % :source-query))]\n   [:fn\n    {:error/message \"A query cannot have both a :source-table and a :source-card.\"}\n    (complement (every-pred :source-table :source-card))]\n   [:ref ::stage.valid-refs]])\n\n;;; Schema for an MBQL stage that includes either `:source-table` or `:source-query`.\n(mr/def ::stage.mbql.with-source-table\n  [:merge\n   [:ref ::stage.mbql]\n   [:map\n    [:source-table [:ref ::id/table]]]])\n\n(mr/def ::stage.mbql.with-source-card\n  [:merge\n   [:ref ::stage.mbql]\n   [:map\n    [:source-card [:ref ::id/card]]]])\n\n(mr/def ::stage.mbql.with-source\n  [:or\n   [:ref ::stage.mbql.with-source-table]\n   [:ref ::stage.mbql.with-source-card]])\n\n;;; Schema for an MBQL stage that DOES NOT include `:source-table` -- an MBQL stage that is not the initial stage.\n(mr/def ::stage.mbql.without-source\n  [:and\n   [:ref ::stage.mbql]\n   [:fn\n    {:error/message \"Only the initial stage of a query can have a :source-table or :source-card.\"}\n    (complement (some-fn :source-table :source-card))]])\n\n;;; the schemas are constructed this way instead of using `:or` because they give better error messages\n(mr/def ::stage.type\n  [:enum :mbql.stage/native :mbql.stage/mbql])\n\n(mr/def ::stage\n  [:and\n   [:map\n    [:lib/type ::stage.type]]\n   [:multi {:dispatch :lib/type}\n    [:mbql.stage/native [:ref ::stage.native]]\n    [:mbql.stage/mbql   [:ref ::stage.mbql]]]])\n\n(mr/def ::stage.initial\n  [:and\n   [:map\n    [:lib/type ::stage.type]]\n   [:multi {:dispatch :lib/type}\n    [:mbql.stage/native [:ref ::stage.native]]\n    [:mbql.stage/mbql   [:ref ::stage.mbql.with-source]]]])\n\n(mr/def ::stage.additional\n  ::stage.mbql.without-source)\n\n(defn- visible-join-alias?-fn\n  \"Apparently you're allowed to use a join alias for a join that appeared in any previous stage or the current stage, or\n  *inside* any join in any previous stage or the current stage. Why? Who knows, but this is a real thing.\n  See [[metabase.driver.sql.query-processor-test/join-source-queries-with-joins-test]] for example.\n\n  This doesn't really make sense IMO (you should use string field refs to refer to things from a previous\n  stage...right?) but for now we'll have to allow it until we can figure out how to go fix all of the old broken queries.\n\n  Also, it's apparently legal to use a join alias to refer to a column that comes from a join in a source Card, and\n  there is no way for us to know what joins exist in the source Card without a metadata provider, so we're just going\n  to have to go ahead and skip validation in that case. Icky! But it's better than being overly strict and rejecting\n  queries that the QP could have fixed.\n\n  Anyways, this function returns a function with the signature:\n\n    (visible-join-alias? <join-alias>) => boolean\"\n  [stage]\n  (if (:source-card stage)\n    (constantly true)\n    (letfn [(join-aliases-in-join [join]\n              (cons\n               (:alias join)\n               (mapcat join-aliases-in-stage (:stages join))))\n            (join-aliases-in-stage [stage]\n              (mapcat join-aliases-in-join (:joins stage)))]\n      (set (join-aliases-in-stage stage)))))\n\n(defn- join-ref-error-for-stages [stages]\n  (loop [visible-join-alias? (constantly false), i 0, [stage & more] stages]\n    (let [visible-join-alias? (some-fn visible-join-alias? (visible-join-alias?-fn stage))]\n      (or\n       (mbql.match/match-one (dissoc stage :joins :stage/metadata)\n         [:field ({:join-alias (join-alias :guard (complement visible-join-alias?))} :guard :join-alias) _id-or-name]\n         (str \"Invalid :field reference in stage \" i \": no join named \" (pr-str join-alias)))\n       (when (seq more)\n         (recur visible-join-alias? (inc i) more))))))\n\n(def ^:private ^{:arglists '([stages])} ref-error-for-stages\n  \"Like [[ref-error-for-stage]], but validate references in the context of a sequence of several stages; for validations\n  that can't be done on the basis of just a single stage. For example join alias validation needs to take into account\n  previous stages.\"\n  ;; this var is ultimately redundant for now since it just points to one function but I'm leaving it here so we can\n  ;; add more stuff to it the future as we validate more things.\n  join-ref-error-for-stages)\n\n(mr/def ::stages.valid-refs\n  [:fn\n   {:error/message \"Valid references for all query stages\"\n    :error/fn      (fn [{:keys [value]} _]\n                     (ref-error-for-stages value))}\n   (complement ref-error-for-stages)])\n\n(mr/def ::stages\n  [:and\n   [:cat\n    [:schema [:ref ::stage.initial]]\n    [:* [:schema [:ref ::stage.additional]]]]\n   [:ref ::stages.valid-refs]])\n\n(mr/def ::query\n  [:and\n   [:map\n    [:lib/type [:= :mbql/query]]\n    [:database [:or\n                ::id/database\n                ::id/saved-questions-virtual-database]]\n    [:stages   [:ref ::stages]]]\n   lib.schema.util/UniqueUUIDs])\n","~:reader-features",["^I",["~:cljs-release","~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["metabase.util.malli.registry/register!","cljs.core/some?","cljs.core/any?","metabase.lib.schema/expression-ref-error-for-stage","stage","expression-names","cljs.core.into","cljs.core.map","cljs.core.comp","cljs.core/second","cljs.core/first","cljs.core/seq","cljs.core.filter","&parents","&match","cljs.core/vector?","cljs.core/count","&match_0__47858","cljs.core.nth","cljs.core/keyword-identical?","&match_2__47861","cljs.core.match/backtrack","e47868","js/Error","e__46040__auto__","e47866","e47863","metabase.mbql.util.match.impl/match-in-collection","match-47847","cljs.core.dissoc","_opts","expression-name","cljs.core/complement","cljs.core.pr_str","metabase.lib.schema/aggregation-ref-error-for-stage","uuids","&match_0__47895","&match_2__47897","e47907","e47904","e47903","match-47873","ag-uuid","metabase.lib.schema/ref-error-for-stage","cljs.core.some_fn","p__47916","map__47917","cljs.core/--destructure-map","cljs.core.get","value","_","p1__47919#","cljs.core/contains?","cljs.core.every_pred","metabase.lib.schema/visible-join-alias?-fn","cljs.core/constantly","join","cljs.core/cons","cljs.core.mapcat","join-aliases-in-stage","join-aliases-in-join","cljs.core/set","metabase.lib.schema/join-ref-error-for-stages","stages","G__47930","vec__47932","seq__47933","first__47934","cljs.core/next","vec__47937","seq__47938","first__47939","visible-join-alias?","i","more","or__5045__auto__","&match_0__47943","&match_1__47944","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core/ILookup","&match_1__47944_join-alias__47948","e47958","e47955","e47952","e47951","e47950","match-47940","join-alias","_id-or-name","metabase.lib.schema/ref-error-for-stages","p__47963","map__47964","metabase.lib.schema.util/UniqueUUIDs"]],"~:used-vars",["^I",["~$cljs.core/mapcat","~$cljs.core/--destructure-map","~$cljs.core/some?","~$cljs.core.match/backtrack","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/comp","~$cljs.core/vector?","~$cljs.core/filter","~$cljs.core/count","~$metabase.lib.schema.util/UniqueUUIDs","~$cljs.core/seq","~$metabase.lib.schema/aggregation-ref-error-for-stage","~$metabase.util.malli.registry/register!","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.core/pr-str","~$cljs.core/set","~$cljs.core/native-satisfies?","~$cljs.core/contains?","~$cljs.core/into","~$metabase.lib.schema/visible-join-alias?-fn","~$cljs.core/map","~$metabase.lib.schema/join-ref-error-for-stages","~$cljs.core/get","~$cljs.core/constantly","~$cljs.core/nth","~$cljs.core/second","~$metabase.lib.schema/ref-error-for-stage","~$cljs.core/next","~$metabase.lib.schema/ref-error-for-stages","~$cljs.core/not","~$cljs.core/complement","~$cljs.core/cons","~$cljs.core/some-fn","~$cljs.core/first","~$metabase.lib.schema/expression-ref-error-for-stage","~$cljs.core/every-pred","~$js/Error","~$cljs.core/any?","~$metabase.mbql.util.match.impl/match-in-collection","~$cljs.core/ILookup"]]],"~:cache-keys",["~#cmap",[["^1N","camel_snake_kebab/internals/misc.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^12","^@","~$camel-snake-kebab.internals.string-separator","~$clojure.string"]]],["^1N","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.dom.HtmlElement"]]],["^1N","metabase/shared/util/i18n.cljs"],["6c3c8615004b349dae9851ed547d516d45e04bd0","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$shadow.js.shim.module$ttag","^33"]]],["^1N","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1N","metabase/types.cljc"],["00232bf78b259e26a21c218c8f2d746ba7003a15","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$clojure.set","~$metabase.types.coercion-hierarchies","~$metabase.util"]]],["^1N","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$goog.Uri"]]],["^1N","lambdaisland/glogi.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$goog.log","~$goog.debug.Console","~$goog.array","^33","~$goog.object","~$goog.debug.FancyWindow","~$goog.debug.DivConsole"]]],["^1N","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.asserts"]]],["^1N","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.string"]]],["^1N","malli/registry.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^37","^38","^3E","^36","^39","^3:"]]],["^1N","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^36"]]],["^1N","goog/style/style.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.safe","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^3B","~$goog.reflect","^3F","~$goog.userAgent"]]],["^1N","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E"]]],["~:shadow.build.js-support/require","moment"],["~$shadow.js.shim.module$moment","shadow.js.shim.module$moment.js","require","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^3W","moment-timezone"],["~$shadow.js.shim.module$moment_timezone","shadow.js.shim.module$moment_timezone.js","require","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","metabase/mbql/schema/macros.cljs"],["2af09bd42ffb1e15b66723cf7ba15db7dc75d10b","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","metabase/lib/schema/mbql_clause.cljc"],["e5bdd00c58db706b1219843528fd3cd9dd8ab728","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^14","^11","~$metabase.types","~$metabase.util.malli","^13"]]],["^1N","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^37","^3U","^36"]]],["^1N","malli/generator.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^B","^33","~$clojure.test.check","~$clojure.test.check.generators","~$clojure.test.check.properties","~$clojure.test.check.random","~$clojure.test.check.rose-tree","~$malli.core","~$malli.registry"]]],["^1N","clojure/test/check/properties.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^44","~$clojure.test.check.results"]]],["^1N","clojure/test/check/generators.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","^46","^47","^3F"]]],["^1N","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","metabase/lib/schema/util.cljc"],["14a9e8a90c56f5e44b4ecd361e962722fd97aecf","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$metabase.lib.options"]]],["^1N","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","malli/util.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^@","^48"]]],["^1N","clojure/test/check/random/doubles.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$clojure.test.check.random.longs"]]],["^1N","net/cgrand/macrovich.cljc"],["abcb26cbfe0f8eef363b25525210c0fe1eb1f693","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","malli/destructure.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$clojure.walk","^48","~$malli.impl.util"]]],["^1N","schema/spec/variant.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$schema.utils","~$schema.spec.core"]]],["^1N","goog/structs/circularbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","weavejester/dependency.cljc"],["7fd7f8879313f6a7e295f7447e668bdf492c42c1","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3;"]]],["^1N","metabase/lib/schema/common.cljc"],["3f51a06335a7cb84c835d859c422919499874414","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","^3Z","^13"]]],["^1N","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^37","^36"]]],["^1N","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","^3F","~$goog.string.StringBuffer"]]],["^1N","metabase/lib/schema/template_tag.cljc"],["f1b6289b8e576857fe667aed3da134e4ad1ea26a","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^48","^14","^16","~$metabase.mbql.schema","^13"]]],["^1N","metabase/lib/schema/ref.cljc"],["5037a60b3d2f427702cf5cedf23f02bcc394d051","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","~$metabase.lib.dispatch","~$metabase.lib.hierarchy","^14","^11","^16","~$metabase.lib.schema.mbql-clause","~$metabase.lib.schema.temporal-bucketing","^3Z","^13"]]],["^1N","clojure/test/check/rose_tree.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","clojure/test/check/impl.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","camel_snake_kebab/internals/string_separator.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33"]]],["^1N","clojure/test/check/random.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$clojure.test.check.random.doubles","^4<"]]],["^1N","metabase/lib/schema/expression/arithmetic.cljc"],["e6936a3e0b11bc3cd40d4e396c708af4622c21cb","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^48","~$medley.core","^4D","^14","^11","^4E","^4F","^3Z","^13"]]],["^1N","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","metabase/lib/schema/expression/string.cljc"],["b2d7de575aaaa880fdc88dfc31642c8e002c3669","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^11","^4E"]]],["^1N","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","metabase/lib/schema/filter.cljc"],["0147dea423ebfd097bf1edb97f0325c9e2908a85","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^14","^11","^4E","^4F","^13"]]],["^1N","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^1N","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^3U"]]],["^1N","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","~$goog.fs.blob","^3G","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3I","^3J"]]],["^1N","schema/spec/leaf.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4@"]]],["^1N","metabase/util/format.cljc"],["875f86a08288cb3ad5a6f15df988897eaf8613af","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3F"]]],["^1N","goog/math/irect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/math/box.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^3R"]]],["^1N","metabase/lib/options.cljc"],["1870276153adf026e09a3e9ed1ba8beaad80e1c8","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^14","~$metabase.shared.util.i18n","^3=","^3["]]],["^1N","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","clojure/test/check.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^44","^46","^4:","^47","~$clojure.test.check.impl"]]],["^1N","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3I","~$goog.html.SafeUrl","^3J","^3E","^36"]]],["^1N","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4K","~$goog.html.SafeStyle","^4O","^3H","~$goog.html.uncheckedconversions","^3I","^36"]]],["^1N","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3M","^3E","~$goog.dom.element"]]],["^1N","medley/core.cljc"],["f5117fa4c15ff14c4a0ab7db414b0f102afb0b8a","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","metabase/lib/schema/expression/conditional.cljc"],["226c4623394b90853fcb014e9a95e84ffc8bd6db","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3;","^11","^4E","^3Z","^13"]]],["^1N","lambdaisland/glogi/console.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$lambdaisland.glogi","~$lambdaisland.glogi.print","^3B","^3@"]]],["^1N","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3I","^4K","^4T","^3P","^4O","^3M","^3H","^3J","^3E","^40","^3A","^3B","^36","~$goog.dom.tags","^4L"]]],["^1N","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3B"]]],["^1N","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","malli/error.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","^48","~$malli.util"]]],["^1N","metabase/lib/dispatch.cljc"],["914208cd51b78412eff1b402519bbb422845497a","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3="]]],["^1N","metabase/util/malli.cljc"],["0f9ba23be6bb9fa629617001e985b988d2322b17","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^@","^48","~$malli.destructure","~$malli.error","~$malli.generator","^4Z","^4M","^3="]]],["^1N","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3A","^36","^37"]]],["^1N","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","metabase/mbql/schema/helpers.cljc"],["b1f6002b97b59423b504abb666e13c9b0228b768","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","^3Z","~$schema.core"]]],["^1N","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3A","^3E","^4P","~$goog.dom.BrowserFeature","^3L","^3M","^3N","^4S","^4U","^3R","^3T","^3B","^3F","^3I","~$goog.string.Unicode","^3V"]]],["^1N","borkdude/dynaload.cljc"],["accd696ba364b850b4d92e38f5a34d0e828a0ad1","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","metabase/util/log.cljs"],["7d8a3bf01eb27c2ba7269dc90dc218e46bcc1d3a","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3?","^3F","~$goog.string.format","^4W","~$lambdaisland.glogi.console"]]],["^1N","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.debug.Error","^3L"]]],["^1N","goog/debug/relativetimeprovider.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","malli/sci.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$borkdude.dynaload"]]],["^1N","metabase/lib/schema/expression.cljc"],["f5c5c3ff3dc0f9a8b407cd7d06a68c6787061991","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4C","^4D","^14","^4M","^3Z","^3[","^13"]]],["^1N","goog/math/rect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^3Q","^3R","~$goog.math.IRect","^3T"]]],["^1N","flatland/ordered/map.cljs"],["3a9cb9d79e47d77ecd4f4d550371ecf01464c461","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3A","^3E","~$goog.collections.maps","^3F","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1N","metabase/util/malli/registry.cljc"],["921d4f259bbe54cbeb6b88ae56937df492bdfb5e","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^48","^49","^4Z"]]],["^1N","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^38"]]],["^1N","metabase/types/coercion_hierarchies.cljc"],["c3d70ef6080e044d61f13ff6bfd76490e2dcd0ac","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3;"]]],["^1N","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/debug/divconsole.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.debug.HtmlFormatter","~$goog.dom.DomHelper","^3M","^3N","^4S","^3P","^3?","^3I","~$goog.style"]]],["^1N","schema/spec/collection.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4?","^4@"]]],["^1N","malli/impl/util.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","metabase/lib/schema/order_by.cljc"],["3f577f71e4ecba1aa1061f2228f6026ab45312ff","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^11","^4E","^13"]]],["^1N","schema/utils.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^55","^3B","^3F","^33"]]],["^1N","metabase/lib/schema/aggregation.cljc"],["ea4a70903cfc3ffeaa60ebdedb5ea00892da4dbe","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4D","^11","^4E","^4M","^13"]]],["^1N","cljs/core/match.cljs"],["f419c02deee501e9f4b29f81215ba81ffcefe9b6","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","goog/debug/fancywindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3A","^3E","~$goog.debug.DebugWindow","^5@","^3M","^3N","^4S","^3P","^3?","^3B","^3F","^3I","^3V"]]],["^1N","goog/debug/formatter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.debug","~$goog.debug.RelativeTimeProvider","^4S","^4O","^4U","^3?","^3I"]]],["^1N","metabase/shared/util/namespaces.cljs"],["00687008abd6eb291bc9d5ff1fff73210e0bbe6e","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","metabase/mbql/util/match/impl.cljc"],["4150e01975339d308f5cfedda77875eda19c030d","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",[]]],["^1N","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3A","^3B"]]],["^1N","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3F","^4A"]]],["^1N","metabase/lib/schema/temporal_bucketing.cljc"],["9cb7bba3e46e1de2fbb37d61df332336da6d9f66","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3;","^13"]]],["^1N","metabase/util.cljc"],["2eb945a6741f1450ecac08a9087b862ce52b9e3a","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$camel-snake-kebab.internals.macros","~$clojure.data","^D","^3;","^33","^4=","~$flatland.ordered.map","^4H","^4M","~$metabase.shared.util.namespaces","~$metabase.util.format","~$metabase.util.log","~$net.cgrand.macrovich","~$weavejester.dependency"]]],["^1N","clojure/test/check/random/longs/bit_count_impl.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","malli/impl/regex.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4>"]]],["^1N","camel_snake_kebab/internals/macros.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$camel-snake-kebab.internals.alter-name","~$camel-snake-kebab.internals.misc"]]],["^1N","metabase/lib/schema/expression/temporal.cljc"],["f1f22c1655e7d335b884a22b010f2b8b08ad1e94","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3;","^48","^4D","^14","^11","^Z","^4E","^4F","^13","^3X","^3Y"]]],["^1N","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3N","^4U","^3I","^36"]]],["^1N","schema/core.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^33","^4?","^4@","~$schema.spec.leaf","~$schema.spec.variant","~$schema.spec.collection"]]],["^1N","metabase/mbql/schema.cljc"],["c51bf2a180ecbc12d6a1cd42a4049323f46a0085","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3X","^3Y","^@","^3;","~$metabase.mbql.schema.helpers","~$metabase.mbql.schema.macros","^52"]]],["^1N","metabase/mbql/util/match.cljs"],["d65aaa9fbcb7960b90ba7ca97258b1dc8a40be2b","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^F","~$metabase.mbql.util.match.impl"]]],["^1N","malli/core.cljc"],["514c6f7d69d7e40b56fa75bfd1a49a683ca15982","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^@","~$malli.impl.regex","^4>","^49","~$malli.sci"]]],["^1N","metabase/lib/schema.cljc"],["122fe4013d55087fc7287141eb7dc6f630436424","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^1?","^14","^11","^1<","^X","^1;","^R","^1@","^16","^U","^Z","^1:","^[","^Q","^S","^V","^13"]]],["^1N","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^3;"]]],["^1N","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^36","^3:"]]],["^1N","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3A","~$goog.debug.errorcontext"]]],["^1N","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","schema/spec/core.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4?"]]],["^3W","ttag"],["^35","shadow.js.shim.module$ttag.js","require","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.math"]]],["^1N","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.flags"]]],["^1N","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3L","^3M"]]],["^1N","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^4S","^4K","^4T","^3P","^4O","^3H","^3I","^36"]]],["^1N","goog/debug/debugwindow.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^5?","^3N","^4S","^3P","^3?","^3I","~$goog.structs.CircularBuffer","^3V"]]],["^1N","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12"]]],["^1N","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.math.Long","~$goog.math.Integer","^3F","^3B","^3A","^3>","^4A"]]],["^1N","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3I","^3J","^4L","^3E"]]],["^1N","clojure/test/check/random/longs.cljs"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","~$clojure.test.check.random.longs.bit-count-impl","^5[","^@"]]],["^1N","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^5C"]]],["^1N","camel_snake_kebab/internals/alter_name.cljc"],["5ae08f83ceb8959971e6334596bff0214bf6fdf2","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3I","^4T","^3J","^3B","^3E","^36"]]],["^1N","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3U"]]],["^1N","goog/debug/console.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","~$goog.debug.TextFormatter","^3?"]]],["^1N","lambdaisland/glogi/print.cljs"],["76286836d4172602aa08006b2a754dda736ffe09","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^4W","^3B"]]],["^1N","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3V"]]],["^1N","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^3F"]]],["^1N","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3E","^3J"]]],["^1N","metabase/lib/schema/id.cljc"],["7cdfc70702a9a9e04b75ca7c9dc898ddf546f99d","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^14","^4B","^13"]]],["^1N","goog/dom/vendor.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^3F","^3V"]]],["^1N","metabase/lib/schema/literal.cljc"],["f8f31bfaef820ab25b896b49fd404b937d0df64e","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^48","^14","^11","^4E","^13"]]],["^1N","metabase/lib/hierarchy.cljc"],["c9d228603522de5c85546fb645c59736d4eb94d2","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","clojure/test/check/results.cljc"],["f33d988fd57bc9c11af1952db81c10f319c91416","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@"]]],["^1N","metabase/lib/schema/join.cljc"],["924e0ca4abbab776fa05357d6d22bafb8a596648","^2Z",["^ ","^2[",null,"^30",["^I",[]],"^31",["^12","^@","^14","^11","^4M","^13"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/line_col.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/viz.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/parse.cljc",1689946139000,"jar:file:/root/.m2/repository/weavejester/dependency/0.2.1/dependency-0.2.1.jar!/weavejester/dependency.cljc",1689946093000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/transform.clj",1689946146000,"jar:file:/root/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar!/ring/util/codec.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/hierarchy.cljc",1690286812000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/mbql/util/match.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/mbql/schema/helpers.cljc",1692013156305,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/core.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/i18n.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/macros.clj",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/plural.clj",1690286813000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/core.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util.cljc",1690286813000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/core.cljc",1689946171000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/dispatch.cljc",1690286812000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/schema/common.cljc",1690286812000,"file:/home/gmrworkspace/dashboard/src/metabase/plugins/classloader.clj",1692013156125,"jar:file:/root/.m2/repository/medley/medley/1.4.0/medley-1.4.0.jar!/medley/core.cljc",1689946185000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/random.clj",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"file:/home/gmrworkspace/dashboard/src/metabase/util/format.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/walk.clj",1689946160000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/reduction.clj",1689946146000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/util.clj",1689946174000,"jar:file:/root/.m2/repository/camel-snake-kebab/camel-snake-kebab/0.4.3/camel-snake-kebab-0.4.3.jar!/camel_snake_kebab/internals/macros.cljc",1689946178000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/mbql/util/match/impl.cljc",1690286812000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/auto_flatten_seq.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/core.clj",1689946146000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/generator.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar!/clojure/core/cache.clj",1689946183000,"file:/home/gmrworkspace/dashboard/src/metabase/lib/schema/expression.cljc",1690286812000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/sci.cljc",1689946170000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin/types.clj",1689946176000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/properties.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/math.numeric-tower/0.0.5/math.numeric-tower-0.0.5.jar!/clojure/math/numeric_tower.clj",1689946148000,"jar:file:/root/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1689946165000,"jar:file:/root/.m2/repository/colorize/colorize/0.1.1/colorize-0.1.1.jar!/colorize/core.clj",1689946104000,"jar:file:/root/.m2/repository/borkdude/dynaload/0.3.5/dynaload-0.3.5.jar!/borkdude/dynaload.cljc",1689946165000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/potemkin/potemkin/0.4.6/potemkin-0.4.6.jar!/potemkin.clj",1689946176000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/failure.clj",1689946146000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/variant.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n/impl.clj",1692013156125,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/dependency.cljc",1689946139000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/leaf.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check.cljc",1689946177000,"jar:file:/root/.m2/repository/riddley/riddley/0.2.0/riddley-0.2.0.jar!/riddley/compiler.clj",1689946160000,"jar:file:/root/.m2/repository/org/clojure/core.memoize/1.0.257/core.memoize-1.0.257.jar!/clojure/core/memoize.clj",1689946178000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/destructure.cljc",1689946170000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/print.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/track.cljc",1689946139000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar!/clojure/java/classpath.clj",1689946162000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/impl/regex.cljc",1689946170000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/factory.clj",1689946173000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689946174000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/experimental.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1689946174000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/core.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/generators.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/experimental/time.cljc",1689946170000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/parse.clj",1689946173000,"file:/home/gmrworkspace/dashboard/src/metabase/util/i18n.clj",1692013156125,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/cfg.clj",1689946146000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/core.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/impl/util.cljc",1689946170000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/registry.cljc",1689946170000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/gll.clj",1689946146000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/instrument.clj",1689946170000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/nano-id/nano-id/1.0.0/nano-id-1.0.0.jar!/nano_id/random.cljc",1689946171000,"jar:file:/root/.m2/repository/environ/environ/1.2.0/environ-1.2.0.jar!/environ/core.cljc",1689946163000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/spec/collection.cljc",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/repeat.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/results.cljc",1689946177000,"jar:file:/root/.m2/repository/com/lambdaisland/glogi/1.2.164/glogi-1.2.164.jar!/lambdaisland/glogi.clj",1689947043000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/shared/util/namespaces.clj",1690286812000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/file.clj",1689946139000,"jar:file:/root/.m2/repository/org/clojure/core.match/1.0.1/core.match-1.0.1.jar!/cljs/core/match.clj",1689946174000,"jar:file:/root/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1689946117000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/error.cljc",1689946170000,"file:/home/gmrworkspace/dashboard/shared/src/metabase/mbql/schema/macros.clj",1690286812000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/utils.cljc",1689946172000,"file:/home/gmrworkspace/dashboard/src/metabase/util/malli/registry.cljc",1690286813000,"file:/home/gmrworkspace/dashboard/src/metabase/config.clj",1692013154929,"file:/home/gmrworkspace/dashboard/src/metabase/util/log.clj",1690286813000,"file:/home/gmrworkspace/dashboard/src/metabase/util/malli.cljc",1690286813000,"jar:file:/root/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar!/clojure/test/check/rose_tree.cljc",1689946177000,"jar:file:/root/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689946174000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/combinators_source.clj",1689946146000,"jar:file:/root/.m2/repository/instaparse/instaparse/1.4.12/instaparse-1.4.12.jar!/instaparse/abnf.clj",1689946146000,"jar:file:/root/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar!/clojure/tools/namespace/find.clj",1689946139000,"jar:file:/root/.m2/repository/org/tcrawley/dynapath/1.1.0/dynapath-1.1.0.jar!/dynapath/dynamic_classpath.clj",1689946174000,"jar:file:/root/.m2/repository/cheshire/cheshire/5.11.0/cheshire-5.11.0.jar!/cheshire/generate_seq.clj",1689946173000,"jar:file:/root/.m2/repository/metosin/malli/0.10.2/malli-0.10.2.jar!/malli/util.cljc",1689946170000,"file:/home/gmrworkspace/dashboard/src/metabase/util/jvm.clj",1692013156125],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Malli schema for the pMBQL query type, the version of MBQL produced and manipulated by the new Cljc\n  Dashboard lib. Currently this is a little different from the version of MBQL consumed by the QP, specified\n  in [[metabase.mbql.schema]]. Hopefully these versions will converge in the future.\n\n  Some primitives below are duplicated from [[metabase.util.malli.schema]] since that's not `.cljc`. Other stuff is\n  copied from [[metabase.mbql.schema]] so this can exist completely independently; hopefully at some point in the\n  future we can deprecate that namespace and eventually do away with it entirely.","^7","metabase/lib/schema.cljc","^8",1,"^9",5,"^:",1,"^;",24],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^L",["^ "],"^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^U","^V","^V","^W","^S","^X","^X","^Y","^V","^Z","^Z","^[","^[","^@","^@","^10","^11","^12","^12","^13","^13","^14","^14","^15","^[","^11","^11","^16","^16","^17","^13","^18","^Q","^19","^14","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^16","^U","^U","^1>","^1:","^1?","^1?","^1@","^1@","^1A","^1?"],"^1B",["^I",["^1C"]],"~:shadow/js-access-global",["^I",["Error"]],"^1D",null,"~:defs",["^ ","~$expression-ref-error-for-stage",["^ ","~:protocol-inline",null,"^5",["^ ","^7","metabase/lib/schema.cljc","^8",63,"^9",8,"^:",63,"^;",38,"~:private",true,"~:arglists",["^1G",["~$quote",["^1G",[["~$stage"]]]]]],"^97",true,"^J","^2R","^7","metabase/lib/schema.cljc","^;",38,"~:method-params",["^1G",[["^9:"]]],"~:protocol-impl",null,"~:arglists-meta",["^1G",[null,null]],"^9",1,"~:variadic?",false,"^8",63,"~:ret-tag",["^I",["~$any","~$clj-nil"]],"^:",63,"~:max-fixed-arity",1,"~:fn-var",true,"^98",["^1G",["^99",["^1G",[["^9:"]]]]]],"~$aggregation-ref-error-for-stage",["^ ","^96",null,"^5",["^ ","^7","metabase/lib/schema.cljc","^8",69,"^9",8,"^:",69,"^;",39,"^97",true,"^98",["^1G",["^99",["^1G",[["^9:"]]]]]],"^97",true,"^J","^2:","^7","metabase/lib/schema.cljc","^;",39,"^9;",["^1G",[["^9:"]]],"^9<",null,"^9=",["^1G",[null,null]],"^9",1,"^9>",false,"^8",69,"^9?",["^I",["^9@","^9A"]],"^:",69,"^9B",1,"^9C",true,"^98",["^1G",["^99",["^1G",[["^9:"]]]]]],"~$ref-error-for-stage",["^ ","^5",["^ ","^7","metabase/lib/schema.cljc","^8",75,"^9",40,"^:",75,"^;",59,"^98",["^1G",["^99",["^1G",[["^9:"]]]]],"^97",true],"^97",true,"^J","^2J","^7","metabase/lib/schema.cljc","^;",59,"^9",1,"^8",75,"^:",75,"~:tag","~$function","^98",["^1G",["^99",["^1G",[["^9:"]]]]],"^6","Validate references in the context of a single `stage`, independent of any previous stages. If there is an error with\n  a reference, return a string describing the error."],"~$visible-join-alias?-fn",["^ ","^96",null,"^5",["^ ","^7","metabase/lib/schema.cljc","^8",158,"^9",8,"^:",158,"^;",30,"^97",true,"^98",["^1G",["^99",["^1G",[["^9:"]]]]],"^6","Apparently you're allowed to use a join alias for a join that appeared in any previous stage or the current stage, or\n  *inside* any join in any previous stage or the current stage. Why? Who knows, but this is a real thing.\n  See [[metabase.driver.sql.query-processor-test/join-source-queries-with-joins-test]] for example.\n\n  This doesn't really make sense IMO (you should use string field refs to refer to things from a previous\n  stage...right?) but for now we'll have to allow it until we can figure out how to go fix all of the old broken queries.\n\n  Also, it's apparently legal to use a join alias to refer to a column that comes from a join in a source Card, and\n  there is no way for us to know what joins exist in the source Card without a metadata provider, so we're just going\n  to have to go ahead and skip validation in that case. Icky! But it's better than being overly strict and rejecting\n  queries that the QP could have fixed.\n\n  Anyways, this function returns a function with the signature:\n\n    (visible-join-alias? <join-alias>) => boolean"],"^97",true,"^J","^2C","^7","metabase/lib/schema.cljc","^;",30,"^9;",["^1G",[["^9:"]]],"^9<",null,"^9=",["^1G",[null,null]],"^9",1,"^9>",false,"^8",158,"^9?",["^I",[null,"^9G"]],"^:",158,"^9B",1,"^9C",true,"^98",["^1G",["^99",["^1G",[["^9:"]]]]],"^6","Apparently you're allowed to use a join alias for a join that appeared in any previous stage or the current stage, or\n  *inside* any join in any previous stage or the current stage. Why? Who knows, but this is a real thing.\n  See [[metabase.driver.sql.query-processor-test/join-source-queries-with-joins-test]] for example.\n\n  This doesn't really make sense IMO (you should use string field refs to refer to things from a previous\n  stage...right?) but for now we'll have to allow it until we can figure out how to go fix all of the old broken queries.\n\n  Also, it's apparently legal to use a join alias to refer to a column that comes from a join in a source Card, and\n  there is no way for us to know what joins exist in the source Card without a metadata provider, so we're just going\n  to have to go ahead and skip validation in that case. Icky! But it's better than being overly strict and rejecting\n  queries that the QP could have fixed.\n\n  Anyways, this function returns a function with the signature:\n\n    (visible-join-alias? <join-alias>) => boolean"],"~$join-ref-error-for-stages",["^ ","^96",null,"^5",["^ ","^7","metabase/lib/schema.cljc","^8",185,"^9",8,"^:",185,"^;",33,"^97",true,"^98",["^1G",["^99",["^1G",[["~$stages"]]]]]],"^97",true,"^J","^2E","^7","metabase/lib/schema.cljc","^;",33,"^9;",["^1G",[["^9J"]]],"^9<",null,"^9=",["^1G",[null,null]],"^9",1,"^9>",false,"^8",185,"^9?",["^I",["^9@","^9A"]],"^:",185,"^9B",1,"^9C",true,"^98",["^1G",["^99",["^1G",[["^9J"]]]]]],"~$ref-error-for-stages",["^ ","^5",["^ ","^7","metabase/lib/schema.cljc","^8",195,"^9",41,"^:",195,"^;",61,"^98",["^1G",["^99",["^1G",[["^9J"]]]]],"^97",true],"^97",true,"^J","^2L","^7","metabase/lib/schema.cljc","^;",61,"^9",1,"^8",195,"^:",195,"^98",["^1G",["^99",["^1G",[["^9J"]]]]],"^6","Like [[ref-error-for-stage]], but validate references in the context of a sequence of several stages; for validations\n  that can't be done on the basis of just a single stage. For example join alias validation needs to take into account\n  previous stages."]],"^1E",["^ ","^@","^@","^V","^V","^Y","^V","^10","^11","^13","^13","^11","^11","^17","^13"],"~:cljs.analyzer/constants",["^ ","^1B",["^I",["~:metabase.lib.schema.expression/boolean","~:args","~:metabase.lib.schema/stage.mbql.with-source","~:metabase.lib.schema/stage.native","~:enum","~:lib/uuid","~:metabase.lib.schema.id/database","~:cat","~:metabase.lib.schema.join/joins","~:schema","~:lib/type","~:min","~:lib/expression-name","~:metabase.lib.schema/stages","~:*","~:fn","~:expression","~:metabase.lib.schema.id/saved-questions-virtual-database","~:stages","~:template-tags","~:metabase.lib.schema/stage.additional","~:metabase.lib.schema.common/non-blank-string","~:else","~:source-query","~:metabase.lib.schema/stage","~:ref","~:filters","~:metabase.lib.schema.order-by/order-bys","~:metabase.lib.schema/stage.valid-refs","~:metabase.lib.schema/stage.mbql.with-source-table","~:sequential","~:metabase.lib.schema/stage.mbql.with-source-card","~:metabase.lib.schema/breakouts","~:value","~:or","~:fields","~:mbql/query","~:join-alias","~:lib/stage-metadata","~:joins","~:metabase.lib.schema/fields","~:field","~:metabase.lib.schema.aggregation/aggregations","~:metabase.lib.schema.ref/ref","~:merge","~:dispatch","~:metabase.lib.schema.expression/expressions","~:alias","~:mbql.stage/native","~:native","~:metabase.lib.schema.template-tag/template-tag-map","~:multi","~:clojure.core.match/not-found","~:source-table","~:optional","~:expressions","~:breakout","~:error/message","~:order-by","~:metabase.lib.schema/stage.mbql.without-source","~:mbql.stage/mbql","~:and","~:metabase.lib.schema.id/card","~:database","~:aggregation","~:metabase.lib.schema/filters","~:source-card","~:metabase.lib.schema.id/table","~:stage/metadata","~:metabase.lib.schema/stages.valid-refs","~:metabase.lib.schema/stage.mbql","~:collection","~:error/fn","~:=","~:metabase.lib.schema/query","~:metabase.lib.schema/stage.initial","~:map","~:metabase.lib.schema/stage.type"]],"~:order",["^9P","^;?","^9W","~:=","^:P","^:Q","^9N","^:V","^:>","^;;","^:5","^:3","^:9","^:R","^:@","^9X","^:K","^:H","^;5","^9M","^9Y","^:W","^:6","^:0","^:G","^:F","^9R","^;4","^:<","^9[","^:Y","^;<","^:A","^;:","^;1","^;0","^9U","^:N","^:X","^:J","^:C","^::","^:Z","^:;","^:U","^;7","^;6","^;2","^:7","^:=","^:L","^:?","^9O","^:B","^:[","^;@","^9Q","^:8","^:S","^:M","^;>","^:4","^:O","^:2","^:I","^:E","^:T","^;8","^;9","^9Z","^9T","^9V","~:*","^;=","^:D","^;3","^9S","^:1"]],"^1J",["^ ","^1C",["^I",[]]],"^1K",["^ "],"^1L",["^12","^@","^1?","^14","^11","^1<","^X","^1;","^R","^1@","^16","^U","^Z","^1:","^[","^Q","^S","^V","^13"]],"^N","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^2Y",[["^;D","~:static-fns"],true,["^;D","~:shadow-tweaks"],null,["^;D","~:source-map-inline"],null,["^;D","~:elide-asserts"],true,["^;D","~:optimize-constants"],null,["^;D","^1Q"],null,["^;D","~:external-config"],null,["^;D","~:tooling-config"],null,["^;D","~:emit-constants"],null,["^;D","~:load-tests"],false,["^;D","~:form-size-threshold"],null,["^;D","~:global-goog-object&array"],null,["^;D","~:data-readers"],null,["^;D","~:infer-externs"],"~:auto",["^;D","^1S"],["^I",["^1T"]],["~:js-options","~:js-provider"],"^1C",["~:mode"],"~:release",["^;D","~:fn-invoke-direct"],null,["^;D","~:source-map"],null]]]