["^ ","~:output",["^ ","~:js","goog.provide('schema.spec.core');\n\n/**\n * Specs are a common language for Schemas to express their structure.\n * These two use-cases aren't privileged, just the two that are considered core\n * to being a Spec.\n * @interface\n */\nschema.spec.core.CoreSpec = function(){};\n\nvar schema$spec$core$CoreSpec$subschemas$dyn_44254 = (function (this$){\nvar x__5393__auto__ = (((this$ == null))?null:this$);\nvar m__5394__auto__ = (schema.spec.core.subschemas[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ == null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ = (schema.spec.core.subschemas[\"_\"]);\nif((!((m__5392__auto__ == null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"CoreSpec.subschemas\",this$);\n}\n}\n});\n/**\n * List all subschemas\n */\nschema.spec.core.subschemas = (function schema$spec$core$subschemas(this$){\nif((((!((this$ == null)))) && ((!((this$.schema$spec$core$CoreSpec$subschemas$arity$1 == null)))))){\nreturn this$.schema$spec$core$CoreSpec$subschemas$arity$1(this$);\n} else {\nreturn schema$spec$core$CoreSpec$subschemas$dyn_44254(this$);\n}\n});\n\nvar schema$spec$core$CoreSpec$checker$dyn_44255 = (function (this$,params){\nvar x__5393__auto__ = (((this$ == null))?null:this$);\nvar m__5394__auto__ = (schema.spec.core.checker[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ == null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,params) : m__5394__auto__.call(null,this$,params));\n} else {\nvar m__5392__auto__ = (schema.spec.core.checker[\"_\"]);\nif((!((m__5392__auto__ == null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,params) : m__5392__auto__.call(null,this$,params));\n} else {\nthrow cljs.core.missing_protocol(\"CoreSpec.checker\",this$);\n}\n}\n});\n/**\n * Create a function that takes [data], and either returns a walked version of data\n *   (by default, usually just data), or a utils/ErrorContainer containing value that looks\n *   like the 'bad' parts of data with ValidationErrors at the leaves describing the failures.\n * \n *   params is a map specifying:\n *    - :subschema-checker - a function for checking subschemas\n *    - :returned-walked? - a boolean specifying whether to return a walked version of the data\n *      (otherwise, nil is returned which increases performance)\n *    - :cache - a map structure from schema to checker, which speeds up checker creation\n *      when the same subschema appears multiple times, and also facilitates handling\n *      recursive schemas.\n */\nschema.spec.core.checker = (function schema$spec$core$checker(this$,params){\nif((((!((this$ == null)))) && ((!((this$.schema$spec$core$CoreSpec$checker$arity$2 == null)))))){\nreturn this$.schema$spec$core$CoreSpec$checker$arity$2(this$,params);\n} else {\nreturn schema$spec$core$CoreSpec$checker$dyn_44255(this$,params);\n}\n});\n\nschema.spec.core._PLUS_no_precondition_PLUS_ = (function schema$spec$core$_PLUS_no_precondition_PLUS_(_){\nreturn null;\n});\n/**\n * Helper for making preconditions.\n * Takes a schema, predicate p, and error function err-f.\n * If the datum passes the predicate, returns nil.\n * Otherwise, returns a validation error with description (err-f datum-description),\n * where datum-description is a (short) printable stand-in for the datum.\n */\nschema.spec.core.precondition = (function schema$spec$core$precondition(s,p,err_f){\nreturn (function (x){\nvar temp__5804__auto__ = (function (){try{if(cljs.core.truth_((p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x)))){\nreturn null;\n} else {\nreturn new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null);\n}\n}catch (e44240){if((e44240 instanceof Object)){\nvar e_SHARP_ = e44240;\nreturn new cljs.core.Symbol(null,\"throws?\",\"throws?\",789734533,null);\n} else {\nthrow e44240;\n\n}\n}})();\nif(cljs.core.truth_(temp__5804__auto__)){\nvar reason = temp__5804__auto__;\nreturn schema.utils.error(schema.utils.make_ValidationError(s,x,(new cljs.core.Delay((function (){\nvar G__44241 = schema.utils.value_name(x);\nreturn (err_f.cljs$core$IFn$_invoke$arity$1 ? err_f.cljs$core$IFn$_invoke$arity$1(G__44241) : err_f.call(null,G__44241));\n}),null)),reason));\n} else {\nreturn null;\n}\n});\n});\n/**\n * A helper to start a checking run, by setting the appropriate params.\n * For examples, see schema.core/checker or schema.coerce/coercer.\n */\nschema.spec.core.run_checker = (function schema$spec$core$run_checker(f,return_walked_QMARK_,s){\nvar G__44244 = s;\nvar G__44245 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"subschema-checker\",\"subschema-checker\",1137701360),f,new cljs.core.Keyword(null,\"return-walked?\",\"return-walked?\",-1684646015),return_walked_QMARK_,new cljs.core.Keyword(null,\"cache\",\"cache\",-1237023054),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY)], null);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44244,G__44245) : f.call(null,G__44244,G__44245));\n});\nschema.spec.core.with_cache = (function schema$spec$core$with_cache(cache,cache_key,wrap_recursive_delay,result_fn){\nvar temp__5802__auto__ = (function (){var fexpr__44246 = cljs.core.deref(cache);\nreturn (fexpr__44246.cljs$core$IFn$_invoke$arity$1 ? fexpr__44246.cljs$core$IFn$_invoke$arity$1(cache_key) : fexpr__44246.call(null,cache_key));\n})();\nif(cljs.core.truth_(temp__5802__auto__)){\nvar w = temp__5802__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"schema.spec.core\",\"in-progress\",\"schema.spec.core/in-progress\",-1604867615),w)){\nvar G__44247 = (new cljs.core.Delay((function (){\nvar fexpr__44248 = cljs.core.deref(cache);\nreturn (fexpr__44248.cljs$core$IFn$_invoke$arity$1 ? fexpr__44248.cljs$core$IFn$_invoke$arity$1(cache_key) : fexpr__44248.call(null,cache_key));\n}),null));\nreturn (wrap_recursive_delay.cljs$core$IFn$_invoke$arity$1 ? wrap_recursive_delay.cljs$core$IFn$_invoke$arity$1(G__44247) : wrap_recursive_delay.call(null,G__44247));\n} else {\nreturn w;\n}\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cache,cljs.core.assoc,cache_key,new cljs.core.Keyword(\"schema.spec.core\",\"in-progress\",\"schema.spec.core/in-progress\",-1604867615));\n\nvar res = (result_fn.cljs$core$IFn$_invoke$arity$0 ? result_fn.cljs$core$IFn$_invoke$arity$0() : result_fn.call(null));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cache,cljs.core.assoc,cache_key,res);\n\nreturn res;\n}\n});\n/**\n * Should be called recursively on each subschema in the 'checker' method of a spec.\n * Handles caching and error wrapping behavior.\n */\nschema.spec.core.sub_checker = (function schema$spec$core$sub_checker(p__44249,p__44250){\nvar map__44251 = p__44249;\nvar map__44251__$1 = cljs.core.__destructure_map(map__44251);\nvar schema__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44251__$1,new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791));\nvar error_wrap = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44251__$1,new cljs.core.Keyword(null,\"error-wrap\",\"error-wrap\",-1295833514));\nvar map__44252 = p__44250;\nvar map__44252__$1 = cljs.core.__destructure_map(map__44252);\nvar params = map__44252__$1;\nvar subschema_checker = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44252__$1,new cljs.core.Keyword(null,\"subschema-checker\",\"subschema-checker\",1137701360));\nvar cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44252__$1,new cljs.core.Keyword(null,\"cache\",\"cache\",-1237023054));\nvar sub = schema.spec.core.with_cache(cache,schema__$1,(function (d){\nreturn (function (x){\nvar fexpr__44253 = cljs.core.deref(d);\nreturn (fexpr__44253.cljs$core$IFn$_invoke$arity$1 ? fexpr__44253.cljs$core$IFn$_invoke$arity$1(x) : fexpr__44253.call(null,x));\n});\n}),(function (){\nreturn (subschema_checker.cljs$core$IFn$_invoke$arity$2 ? subschema_checker.cljs$core$IFn$_invoke$arity$2(schema__$1,params) : subschema_checker.call(null,schema__$1,params));\n}));\nif(cljs.core.truth_(error_wrap)){\nreturn (function (x){\nvar res = (sub.cljs$core$IFn$_invoke$arity$1 ? sub.cljs$core$IFn$_invoke$arity$1(x) : sub.call(null,x));\nvar temp__5802__auto__ = schema.utils.error_val(res);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar e = temp__5802__auto__;\nreturn schema.utils.error((error_wrap.cljs$core$IFn$_invoke$arity$1 ? error_wrap.cljs$core$IFn$_invoke$arity$1(res) : error_wrap.call(null,res)));\n} else {\nreturn res;\n}\n});\n} else {\nreturn sub;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Protocol and preliminaries for Schema 'specs', which are a common language\n   for schemas to use to express their structure.","~:file","schema/spec/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.match","~$cljs.core.match"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$schema.spec.core","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$schema.utils","^Q","~$utils","^Q","^@","^@","~$goog","^S"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",null,"^V",["^ ","~$schema.macros","^X","~$macros","^X","^@","^@","^Q","^Q","^R","^Q"],"~:form",["~#list",["~$ns","^K","Protocol and preliminaries for Schema 'specs', which are a common language\n   for schemas to use to express their structure.",["^[",["^U",["^Q","~:as","^R"]]],["^[",["^V",["^X","^11","^Y"]]]]],"~:flags",["^ ","^U",["^I",[]],"^V",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^S","^@","^Q"]],"^N","^K","~:resource-id",["~:shadow.build.classpath/resource","schema/spec/core.cljc"],"~:compiled-at",1692612521367,"^L",["^ ","^Q","^Q","^R","^Q","^@","^@","^S","^S","^X","^X","^Y","^X"],"~:resource-name","schema/spec/core.cljc","~:warnings",[],"~:source","(ns schema.spec.core\n  \"Protocol and preliminaries for Schema 'specs', which are a common language\n   for schemas to use to express their structure.\"\n  (:require\n   #?(:clj [schema.macros :as macros])\n   [schema.utils :as utils])\n  #?(:cljs (:require-macros [schema.macros :as macros])))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Core spec protocol\n\n(defprotocol CoreSpec\n  \"Specs are a common language for Schemas to express their structure.\n   These two use-cases aren't privileged, just the two that are considered core\n   to being a Spec.\"\n  (subschemas [this]\n    \"List all subschemas\")\n  (checker [this params]\n    \"Create a function that takes [data], and either returns a walked version of data\n     (by default, usually just data), or a utils/ErrorContainer containing value that looks\n     like the 'bad' parts of data with ValidationErrors at the leaves describing the failures.\n\n     params is a map specifying:\n      - :subschema-checker - a function for checking subschemas\n      - :returned-walked? - a boolean specifying whether to return a walked version of the data\n        (otherwise, nil is returned which increases performance)\n      - :cache - a map structure from schema to checker, which speeds up checker creation\n        when the same subschema appears multiple times, and also facilitates handling\n        recursive schemas.\"))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Preconditions\n\n;; A Precondition is a function of a value that returns a\n;; ValidationError if the value does not satisfy the precondition,\n;; and otherwise returns nil.\n;; e.g., (s/defschema Precondition (s/=> (s/maybe schema.utils.ValidationError) s/Any))\n;; as such, a precondition is essentially a very simple checker.\n\n(def +no-precondition+ (fn [_] nil))\n\n(defn precondition\n  \"Helper for making preconditions.\n   Takes a schema, predicate p, and error function err-f.\n   If the datum passes the predicate, returns nil.\n   Otherwise, returns a validation error with description (err-f datum-description),\n   where datum-description is a (short) printable stand-in for the datum.\"\n  [s p err-f]\n  (fn [x]\n    (when-let [reason (macros/try-catchall (when-not (p x) 'not) (catch e# 'throws?))]\n      (macros/validation-error s x (err-f (utils/value-name x)) reason))))\n\n#?(:clj\n(defmacro simple-precondition\n  \"A simple precondition where f-sym names a predicate (e.g. (simple-precondition s map?))\"\n  [s f-sym]\n  `(precondition ~s ~f-sym #(list (quote ~f-sym) %))))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Helpers\n\n(defn run-checker\n  \"A helper to start a checking run, by setting the appropriate params.\n   For examples, see schema.core/checker or schema.coerce/coercer.\"\n  [f return-walked? s]\n  (f\n   s\n   {:subschema-checker f\n    :return-walked? return-walked?\n    :cache #?(:clj (java.util.IdentityHashMap.) :cljs (atom {}))}))\n\n(defn with-cache [cache cache-key wrap-recursive-delay result-fn]\n  (if-let [w #?(:clj (.get ^java.util.Map cache cache-key)\n                :cljs (@cache cache-key))]\n    (if (= ::in-progress w) ;; recursive\n      (wrap-recursive-delay (delay #?(:clj (.get ^java.util.Map cache cache-key)\n                                      :cljs (@cache cache-key))))\n      w)\n    (do #?(:clj (.put ^java.util.Map cache cache-key ::in-progress)\n           :cljs (swap! cache assoc cache-key ::in-progress))\n        (let [res (result-fn)]\n          #?(:clj (.put ^java.util.Map cache cache-key res)\n             :cljs (swap! cache assoc cache-key res))\n          res))))\n\n(defn sub-checker\n  \"Should be called recursively on each subschema in the 'checker' method of a spec.\n   Handles caching and error wrapping behavior.\"\n  [{:keys [schema error-wrap]}\n   {:keys [subschema-checker cache] :as params}]\n  (let [sub (with-cache cache schema\n              (fn [d] (fn [x] (@d x)))\n              (fn [] (subschema-checker schema params)))]\n    (if error-wrap\n      (fn [x]\n        (let [res (sub x)]\n          (if-let [e (utils/error-val res)]\n            (utils/error (error-wrap res))\n            res)))\n      sub)))\n","~:reader-features",["^I",["~:cljs-release","~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["schema$spec$core$CoreSpec$subschemas$dyn","x__5393__auto__","m__5394__auto__","schema.spec.core/subschemas","goog/typeOf","m__5392__auto__","cljs.core/missing-protocol","schema$spec$core$CoreSpec$checker$dyn","schema.spec.core/checker","schema.spec.core/CoreSpec","this","params","schema.spec.core/+no-precondition+","_","schema.spec.core/precondition","s","p","err-f","x","temp__5804__auto__","reason","e44240","js/Object","e#","schema.utils/error","schema.utils/make-ValidationError","cljs.core/Delay","G__44241","schema.utils/value-name","schema.spec.core/run-checker","f","return-walked?","G__44244","G__44245","cljs.core.atom","schema.spec.core/with-cache","cache","cache-key","wrap-recursive-delay","result-fn","temp__5802__auto__","w","fexpr__44246","cljs.core/deref","cljs.core._EQ_","G__44247","fexpr__44248","cljs.core.swap_BANG_","cljs.core/assoc","res","p__44249","p__44250","map__44251","cljs.core/--destructure-map","cljs.core.get","map__44252","schema.spec.core/sub-checker","schema","error-wrap","subschema-checker","sub","d","fexpr__44253","e","schema.utils/error-val"]],"~:used-vars",["^I",["~$cljs.core/--destructure-map","~$schema.utils/error","~$schema.spec.core/precondition","~$cljs.core/=","~$schema.spec.core/with-cache","~$cljs.core/deref","~$goog/typeOf","~$cljs.core/Delay","~$cljs.core/atom","~$schema.utils/make-ValidationError","~$schema.utils/value-name","~$schema.spec.core/run-checker","~$schema.spec.core/CoreSpec","~$schema.utils/error-val","~$cljs.core/swap!","~$cljs.core/get","~$schema.spec.core/sub-checker","~$schema.spec.core/checker","~$cljs.core/missing-protocol","~$schema.spec.core/subschemas","~$cljs.core/not","~$schema.spec.core/+no-precondition+","~$cljs.core/assoc","~$js/Object"]]],"~:cache-keys",["~#cmap",[["^16","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^S","~$goog.dom.HtmlElement"]]],["^16","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.string"]]],["^16","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^16","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2:"]]],["^16","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29"]]],["^16","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^27","^2:"]]],["^16","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29"]]],"~:SHADOW-TIMESTAMP",[1689947046000,1689947046000,1689947050000],["^16","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","~$goog.reflect"]]],["^16","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","~$goog.fs.blob","^2=","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2?","^2@"]]],["^16","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2?","~$goog.html.SafeUrl","^2@","^29","^2:"]]],["^16","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2D","~$goog.html.SafeStyle","^2F","^2>","~$goog.html.uncheckedconversions","^2?","^2:"]]],["^16","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.dom.TagName","^29","~$goog.dom.element"]]],["^16","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2?","^2D","^2K","~$goog.html.SafeStyleSheet","^2F","^2M","^2>","^2@","^29","~$goog.labs.userAgent.browser","~$goog.array","~$goog.object","^2:","~$goog.dom.tags","^2E"]]],["^16","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2R"]]],["^16","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2Q","^29","~$goog.collections.maps","^26","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^28"]]],["^16","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","schema/utils.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^@","~$goog.string.format","^2R","^26","~$clojure.string"]]],["^16","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",[]]],["^16","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2Q","^2R"]]],["^16","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^@","^26","~$goog.string.StringBuffer"]]],["^16","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.dom.safe","^2L","^2?","^2:"]]],["^16","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2:","^2<"]]],["^16","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","schema/spec/core.cljc"],["0dacc3066a87f33088c9a332b6c21e8b0560011c","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^@","^Q"]]],["^16","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.flags"]]],["^16","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2U","^2M"]]],["^16","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","^2J","^2D","^2K","^2O","^2F","^2>","^2?","^2:"]]],["^16","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S"]]],["^16","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","~$goog.math.Long","~$goog.math.Integer","^26","^2R","^2Q","~$goog.Uri","^31"]]],["^16","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2?","^2@","^2E","^29"]]],["^16","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2?","^2K","^2@","^2R","^29","^2:"]]],["^16","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^2B"]]],["^16","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","^26"]]],["^16","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^21",["^ ","^22",null,"^23",["^I",[]],"^24",["^S","^29","^2@"]]]]],"~:clj-info",["^ ","jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689947050000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/macros.clj",1689946172000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689947050000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1689946092000,"jar:file:/root/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1689946092000,"jar:file:/root/.m2/repository/prismatic/schema/1.4.1/schema-1.4.1.jar!/schema/utils.cljc",1689946172000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Protocol and preliminaries for Schema 'specs', which are a common language\n   for schemas to use to express their structure.","^7","schema/spec/core.cljc","^8",1,"^9",5,"^:",1,"^;",21],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"~:shadow/protocol-prefixes",["^I",["schema$spec$core$CoreSpec$"]],"^G",null,"^H",["^I",[]],"^J","^K","^L",["^ "],"^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^@","^@","^S","^S"],"^T",["^I",["^U","^V"]],"~:shadow/js-access-global",["^I",["Object"]],"^W",null,"~:defs",["^ ","~$CoreSpec",["^ ","^5",["^ ","~:protocol-symbol",true,"^7","schema/spec/core.cljc","^;",22,"^9",14,"^8",12,"~:protocol-info",["^ ","~:methods",["^ ","~$subschemas",[["~$this"]],"~$checker",[["^44","~$params"]]]],"^:",12,"~:sigs",["^ ","~:subschemas",["^ ","^J","^43","~:arglists",["^[",[["^44"]]],"^6","List all subschemas"],"~:checker",["^ ","^J","^45","^49",["^[",[["^44","^46"]]],"^6","Create a function that takes [data], and either returns a walked version of data\n     (by default, usually just data), or a utils/ErrorContainer containing value that looks\n     like the 'bad' parts of data with ValidationErrors at the leaves describing the failures.\n\n     params is a map specifying:\n      - :subschema-checker - a function for checking subschemas\n      - :returned-walked? - a boolean specifying whether to return a walked version of the data\n        (otherwise, nil is returned which increases performance)\n      - :cache - a map structure from schema to checker, which speeds up checker creation\n        when the same subschema appears multiple times, and also facilitates handling\n        recursive schemas."]],"^6","Specs are a common language for Schemas to express their structure.\n   These two use-cases aren't privileged, just the two that are considered core\n   to being a Spec.","~:jsdoc",["^[",["@interface"]]],"^40",true,"^J","^1O","^7","schema/spec/core.cljc","^;",22,"^9",1,"^8",12,"^41",["^ ","^42",["^ ","^43",[["^44"]],"^45",[["^44","^46"]]]],"~:info",null,"^:",12,"~:tag","~$any","^47",["^ ","^48",["^ ","^J","^43","^49",["^[",[["^44"]]],"^6","List all subschemas"],"^4:",["^ ","^J","^45","^49",["^[",[["^44","^46"]]],"^6","Create a function that takes [data], and either returns a walked version of data\n     (by default, usually just data), or a utils/ErrorContainer containing value that looks\n     like the 'bad' parts of data with ValidationErrors at the leaves describing the failures.\n\n     params is a map specifying:\n      - :subschema-checker - a function for checking subschemas\n      - :returned-walked? - a boolean specifying whether to return a walked version of the data\n        (otherwise, nil is returned which increases performance)\n      - :cache - a map structure from schema to checker, which speeds up checker creation\n        when the same subschema appears multiple times, and also facilitates handling\n        recursive schemas."]],"~:impls",["^I",["~$schema.spec.leaf/LeafSpec"]],"^6","Specs are a common language for Schemas to express their structure.\n   These two use-cases aren't privileged, just the two that are considered core\n   to being a Spec.","^4;",["^[",["@interface"]]],"^43",["^ ","~:protocol-inline",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",16,"^9",4,"^:",16,"^;",14,"~:protocol","^1O","^6","List all subschemas","^49",["^[",["~$quote",["^[",[["^44"]]]]]],"^4B","^1O","^J","^1V","^7","schema/spec/core.cljc","^;",14,"~:method-params",["^[",[["^44"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^9",1,"~:variadic?",false,"^8",12,"~:ret-tag","^4>","^:",16,"~:max-fixed-arity",1,"~:fn-var",true,"^49",["^[",["^4C",["^[",[["^44"]]]]],"^6","List all subschemas"],"^45",["^ ","^4A",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",18,"^9",4,"^:",18,"^;",11,"^4B","^1O","^6","Create a function that takes [data], and either returns a walked version of data\n     (by default, usually just data), or a utils/ErrorContainer containing value that looks\n     like the 'bad' parts of data with ValidationErrors at the leaves describing the failures.\n\n     params is a map specifying:\n      - :subschema-checker - a function for checking subschemas\n      - :returned-walked? - a boolean specifying whether to return a walked version of the data\n        (otherwise, nil is returned which increases performance)\n      - :cache - a map structure from schema to checker, which speeds up checker creation\n        when the same subschema appears multiple times, and also facilitates handling\n        recursive schemas.","^49",["^[",["^4C",["^[",[["^44","^46"]]]]]],"^4B","^1O","^J","^1T","^7","schema/spec/core.cljc","^;",11,"^4D",["^[",[["^44","^46"]]],"^4E",null,"^4F",["^[",[null,null]],"^9",1,"^4G",false,"^8",12,"^4H","^4>","^:",18,"^4I",2,"^4J",true,"^49",["^[",["^4C",["^[",[["^44","^46"]]]]],"^6","Create a function that takes [data], and either returns a walked version of data\n     (by default, usually just data), or a utils/ErrorContainer containing value that looks\n     like the 'bad' parts of data with ValidationErrors at the leaves describing the failures.\n\n     params is a map specifying:\n      - :subschema-checker - a function for checking subschemas\n      - :returned-walked? - a boolean specifying whether to return a walked version of the data\n        (otherwise, nil is returned which increases performance)\n      - :cache - a map structure from schema to checker, which speeds up checker creation\n        when the same subschema appears multiple times, and also facilitates handling\n        recursive schemas."],"~$+no-precondition+",["^ ","^4A",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",41,"^9",6,"^:",41,"^;",23],"^J","^1X","^7","schema/spec/core.cljc","^;",23,"^4D",["^[",[["~$_"]]],"^4E",null,"^4F",["^[",[]],"^9",1,"^4G",false,"^8",41,"^4H","~$clj-nil","^:",41,"^4I",1,"^4J",true,"^49",null],"~$precondition",["^ ","^4A",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",43,"^9",7,"^:",43,"^;",19,"^49",["^[",["^4C",["^[",[["~$s","~$p","~$err-f"]]]]],"^6","Helper for making preconditions.\n   Takes a schema, predicate p, and error function err-f.\n   If the datum passes the predicate, returns nil.\n   Otherwise, returns a validation error with description (err-f datum-description),\n   where datum-description is a (short) printable stand-in for the datum."],"^J","^1E","^7","schema/spec/core.cljc","^;",19,"^4D",["^[",[["~$s","~$p","^4N"]]],"^4E",null,"^4F",["^[",[null,null]],"^9",1,"^4G",false,"^8",43,"^4H","~$function","^:",43,"^4I",3,"^4J",true,"^49",["^[",["^4C",["^[",[["~$s","~$p","^4N"]]]]],"^6","Helper for making preconditions.\n   Takes a schema, predicate p, and error function err-f.\n   If the datum passes the predicate, returns nil.\n   Otherwise, returns a validation error with description (err-f datum-description),\n   where datum-description is a (short) printable stand-in for the datum."],"~$run-checker",["^ ","^4A",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",64,"^9",7,"^:",64,"^;",18,"^49",["^[",["^4C",["^[",[["~$f","~$return-walked?","~$s"]]]]],"^6","A helper to start a checking run, by setting the appropriate params.\n   For examples, see schema.core/checker or schema.coerce/coercer."],"^J","^1N","^7","schema/spec/core.cljc","^;",18,"^4D",["^[",[["~$f","^4Q","~$s"]]],"^4E",null,"^4F",["^[",[null,null]],"^9",1,"^4G",false,"^8",64,"^4H","^4>","^:",64,"^4I",3,"^4J",true,"^49",["^[",["^4C",["^[",[["~$f","^4Q","~$s"]]]]],"^6","A helper to start a checking run, by setting the appropriate params.\n   For examples, see schema.core/checker or schema.coerce/coercer."],"~$with-cache",["^ ","^4A",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",74,"^9",7,"^:",74,"^;",17,"^49",["^[",["^4C",["^[",[["~$cache","~$cache-key","~$wrap-recursive-delay","~$result-fn"]]]]]],"^J","^1G","^7","schema/spec/core.cljc","^;",17,"^4D",["^[",[["^4S","^4T","^4U","^4V"]]],"^4E",null,"^4F",["^[",[null,null]],"^9",1,"^4G",false,"^8",74,"^4H","^4>","^:",74,"^4I",4,"^4J",true,"^49",["^[",["^4C",["^[",[["^4S","^4T","^4U","^4V"]]]]]],"~$sub-checker",["^ ","^4A",null,"^5",["^ ","^7","schema/spec/core.cljc","^8",88,"^9",7,"^:",88,"^;",18,"^49",["^[",["^4C",["^[",[[["^ ","~:keys",["~$schema","~$error-wrap"]],["^ ","^4X",["~$subschema-checker","^4S"],"^11","^46"]]]]]],"^6","Should be called recursively on each subschema in the 'checker' method of a spec.\n   Handles caching and error wrapping behavior."],"^J","^1S","^7","schema/spec/core.cljc","^;",18,"^4D",["^[",[["~$p__44249","~$p__44250"]]],"^4E",null,"^4F",["^[",[null,null]],"^9",1,"^4G",false,"^8",88,"^4H",["^I",["^4>","^4O"]],"^:",88,"^4I",2,"^4J",true,"^49",["^[",["^4C",["^[",[[["^ ","^4X",["^4Y","^4Z"]],["^ ","^4X",["^4[","^4S"],"^11","^46"]]]]]],"^6","Should be called recursively on each subschema in the 'checker' method of a spec.\n   Handles caching and error wrapping behavior."]],"^V",["^ ","^X","^X","^Y","^X","^@","^@","^Q","^Q","^R","^Q"],"~:cljs.analyzer/constants",["^ ","^T",["^I",["~:schema","~:schema.spec.core/in-progress","~:return-walked?","~$throws?","~:else","~:subschema-checker","~:cache","~$not","~:error-wrap"]],"~:order",["^56","^57","^5:","^58","^55","^59","^54","^53","^5;"]],"^12",["^ ","^U",["^I",[]],"^V",["^I",[]]],"^13",["^ "],"^14",["^S","^@","^Q"]],"^N","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^20",[["^5?","~:static-fns"],true,["^5?","~:shadow-tweaks"],null,["^5?","~:source-map-inline"],null,["^5?","~:elide-asserts"],true,["^5?","~:optimize-constants"],null,["^5?","^19"],null,["^5?","~:external-config"],null,["^5?","~:tooling-config"],null,["^5?","~:emit-constants"],null,["^5?","~:load-tests"],false,["^5?","~:form-size-threshold"],null,["^5?","~:global-goog-object&array"],null,["^5?","~:data-readers"],null,["^5?","~:infer-externs"],"~:auto",["^5?","^1;"],["^I",["^1<"]],["~:js-options","~:js-provider"],"^U",["~:mode"],"~:release",["^5?","~:fn-invoke-direct"],null,["^5?","~:source-map"],null]]]