{"version":3,"file":"index.module.js","sources":["../src/base64.ts","../src/payload.ts","../src/logger.ts","../src/contexts.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["/*\n * Copyright (c) 2013 Kevin van Zonneveld (http://kvz.io)\n * and Contributors (http://phpjs.org/authors)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// Deprecated and removed in TypeScript\ndeclare function unescape(s: string): string;\n\n/**\n * Decodes a url safe Base 64 encoded string\n * @remarks See: {@link http://tools.ietf.org/html/rfc4648#page-7}\n * @param data - String to decode\n * @returns The decoded string\n */\nexport function base64urldecode(data: string): string {\n  if (!data) {\n    return data;\n  }\n  const padding = 4 - (data.length % 4);\n  switch (padding) {\n    case 2:\n      data += '==';\n      break;\n    case 3:\n      data += '=';\n      break;\n  }\n  const b64Data = data.replace(/-/g, '+').replace(/_/g, '/');\n  return base64decode(b64Data);\n}\n\n/**\n * Encodes a string into a url safe Base 64 encoded string\n * @remarks See: {@link http://tools.ietf.org/html/rfc4648#page-7}\n * @param data - String to encode\n * @returns The url safe Base 64 string\n */\nexport function base64urlencode(data: string): string {\n  if (!data) {\n    return data;\n  }\n\n  const enc = base64encode(data);\n  return enc.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nconst b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/**\n * Encode string as base64.\n * Any type can be passed, but will be stringified\n *\n * @param data - string to encode\n * @returns base64-encoded string\n */\nexport function base64encode(data: string): string {\n  // discuss at: http://phpjs.org/functions/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Rafał Kukawski (http://kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  // example 1: base64_encode('Kevin van Zonneveld');\n  // returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  // example 2: base64_encode('a');\n  // returns 2: 'YQ=='\n  // example 3: base64_encode('✓ à la mode');\n  // returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  let o1,\n    o2,\n    o3,\n    h1,\n    h2,\n    h3,\n    h4,\n    bits,\n    i = 0,\n    ac = 0;\n  const tmp_arr: Array<string> = [];\n\n  if (!data) {\n    return data;\n  }\n\n  data = unescape(encodeURIComponent(data));\n\n  do {\n    // pack three octets into four hexets\n    o1 = data.charCodeAt(i++);\n    o2 = data.charCodeAt(i++);\n    o3 = data.charCodeAt(i++);\n\n    bits = (o1 << 16) | (o2 << 8) | o3;\n\n    h1 = (bits >> 18) & 0x3f;\n    h2 = (bits >> 12) & 0x3f;\n    h3 = (bits >> 6) & 0x3f;\n    h4 = bits & 0x3f;\n\n    // use hexets to index into b64, and append result to encoded string\n    tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n  } while (i < data.length);\n\n  const enc = tmp_arr.join('');\n\n  const r = data.length % 3;\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n}\n\n/**\n * Decode base64 to string\n *\n * @param data - base64 to string\n * @returns decoded string\n */\nexport function base64decode(encodedData: string): string {\n  //  discuss at: http://locutus.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Indigo744\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  // decodeUTF8string()\n  // Internal function to decode properly UTF8 string\n  // Adapted from Solution #1 at https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n  const decodeUTF8string = function (str: string) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(\n      str\n        .split('')\n        .map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n  };\n\n  let o1,\n    o2,\n    o3,\n    h1,\n    h2,\n    h3,\n    h4,\n    bits,\n    i = 0,\n    ac = 0,\n    dec = '';\n  const tmpArr: Array<string> = [];\n\n  if (!encodedData) {\n    return encodedData;\n  }\n\n  encodedData += '';\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++));\n    h2 = b64.indexOf(encodedData.charAt(i++));\n    h3 = b64.indexOf(encodedData.charAt(i++));\n    h4 = b64.indexOf(encodedData.charAt(i++));\n\n    bits = (h1 << 18) | (h2 << 12) | (h3 << 6) | h4;\n\n    o1 = (bits >> 16) & 0xff;\n    o2 = (bits >> 8) & 0xff;\n    o3 = bits & 0xff;\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1);\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2);\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3);\n    }\n  } while (i < encodedData.length);\n\n  dec = tmpArr.join('');\n\n  return decodeUTF8string(dec.replace(/\\0+$/, ''));\n}\n","/*\n * Copyright (c) 2021 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { base64urlencode } from './base64';\n\n/**\n * Type for a Payload dictionary\n */\nexport type Payload = Record<string, unknown>;\n\n/**\n * A tuple which represents the unprocessed JSON to be added to the Payload\n */\nexport type EventJsonWithKeys = { keyIfEncoded: string; keyIfNotEncoded: string; json: Record<string, unknown> };\n\n/**\n * An array of tuples which represents the unprocessed JSON to be added to the Payload\n */\nexport type EventJson = Array<EventJsonWithKeys>;\n\n/**\n * A function which will processor the Json onto the injected PayloadBuilder\n */\nexport type JsonProcessor = (payloadBuilder: PayloadBuilder, jsonForProcessing: EventJson) => void;\n\n/**\n * Interface for mutable object encapsulating tracker payload\n */\nexport interface PayloadBuilder {\n  /**\n   * Adds an entry to the Payload\n   * @param key - Key for Payload dictionary entry\n   * @param value - Value for Payload dictionaty entry\n   */\n  add: (key: string, value: unknown) => void;\n\n  /**\n   * Merges a payload into the existing payload\n   * @param dict - The payload to merge\n   */\n  addDict: (dict: Payload) => void;\n\n  /**\n   * Caches a JSON object to be added to payload on build\n   * @param keyIfEncoded - key if base64 encoding is enabled\n   * @param keyIfNotEncoded - key if base64 encoding is disabled\n   * @param json - The json to be stringified and added to the payload\n   */\n  addJson: (keyIfEncoded: string, keyIfNotEncoded: string, json: Record<string, unknown>) => void;\n\n  /**\n   * Gets the current payload, before cached JSON is processed\n   */\n  getPayload: () => Payload;\n\n  /**\n   * Gets all JSON objects added to payload\n   */\n  getJson: () => EventJson;\n\n  /**\n   * Adds a function which will be executed when building\n   * the payload to process the JSON which has been added to this payload\n   * @param jsonProcessor - The JsonProcessor function for this builder\n   */\n  withJsonProcessor: (jsonProcessor: JsonProcessor) => void;\n\n  /**\n   * Builds and returns the Payload\n   * @param base64Encode - configures if unprocessed, cached json should be encoded\n   */\n  build: () => Payload;\n}\n\nexport function payloadBuilder(): PayloadBuilder {\n  const dict: Payload = {},\n    allJson: EventJson = [],\n    jsonForProcessing: EventJson = [];\n  let processor: JsonProcessor | undefined;\n\n  const add = (key: string, value: unknown): void => {\n    if (value != null && value !== '') {\n      // null also checks undefined\n      dict[key] = value;\n    }\n  };\n\n  const addDict = (dict: Payload): void => {\n    for (const key in dict) {\n      if (Object.prototype.hasOwnProperty.call(dict, key)) {\n        add(key, dict[key]);\n      }\n    }\n  };\n\n  const addJson = (keyIfEncoded: string, keyIfNotEncoded: string, json?: Record<string, unknown>): void => {\n    if (json && isNonEmptyJson(json)) {\n      const jsonWithKeys = { keyIfEncoded, keyIfNotEncoded, json };\n      jsonForProcessing.push(jsonWithKeys);\n      allJson.push(jsonWithKeys);\n    }\n  };\n\n  return {\n    add,\n    addDict,\n    addJson,\n    getPayload: () => dict,\n    getJson: () => allJson,\n    withJsonProcessor: (jsonProcessor) => {\n      processor = jsonProcessor;\n    },\n    build: function () {\n      processor?.(this, jsonForProcessing);\n      return dict;\n    },\n  };\n}\n\n/**\n * A helper to build a Snowplow request from a set of name-value pairs, provided using the add methods.\n * Will base64 encode JSON, if desired, on build\n *\n * @returns The request builder, with add and build methods\n */\nexport function payloadJsonProcessor(encodeBase64: boolean): JsonProcessor {\n  return (payloadBuilder: PayloadBuilder, jsonForProcessing: EventJson) => {\n    for (const json of jsonForProcessing) {\n      const str = JSON.stringify(json.json);\n      if (encodeBase64) {\n        payloadBuilder.add(json.keyIfEncoded, base64urlencode(str));\n      } else {\n        payloadBuilder.add(json.keyIfNotEncoded, str);\n      }\n    }\n    jsonForProcessing.length = 0;\n  };\n}\n\n/**\n * Is property a non-empty JSON?\n * @param property - Checks if object is non-empty json\n */\nexport function isNonEmptyJson(property?: Record<string, unknown>): boolean {\n  if (!isJson(property)) {\n    return false;\n  }\n  for (const key in property) {\n    if (Object.prototype.hasOwnProperty.call(property, key)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Is property a JSON?\n * @param property - Checks if object is json\n */\nexport function isJson(property?: Record<string, unknown>): boolean {\n  return (\n    typeof property !== 'undefined' &&\n    property !== null &&\n    (property.constructor === {}.constructor || property.constructor === [].constructor)\n  );\n}\n","/*\n * Copyright (c) 2021 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst label = 'Snowplow: ';\n\nexport enum LOG_LEVEL {\n  none = 0,\n  error = 1,\n  warn = 2,\n  debug = 3,\n  info = 4,\n}\n\nexport interface Logger {\n  setLogLevel: (level: LOG_LEVEL) => void;\n  info: (message: string, ...extraParams: unknown[]) => void;\n  debug: (message: string, ...extraParams: unknown[]) => void;\n  warn: (message: string, error?: Error, ...extraParams: unknown[]) => void;\n  error: (message: string, error?: Error, ...extraParams: unknown[]) => void;\n}\n\nexport const LOG = logger();\n\nfunction logger(logLevel: LOG_LEVEL = LOG_LEVEL.warn): Logger {\n  function setLogLevel(level: LOG_LEVEL) {\n    if (LOG_LEVEL[level]) {\n      logLevel = level;\n    } else {\n      logLevel = LOG_LEVEL.warn;\n    }\n  }\n\n  /**\n   * Log errors, with or without error object\n   */\n  function error(message: string, error?: Error, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.error && typeof console !== 'undefined') {\n      const logMsg = label + message + '\\n';\n      if (error) {\n        console.error(logMsg + '\\n', error, ...extraParams);\n      } else {\n        console.error(logMsg, ...extraParams);\n      }\n    }\n  }\n\n  /**\n   * Log warnings, with or without error object\n   */\n  function warn(message: string, error?: Error, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.warn && typeof console !== 'undefined') {\n      const logMsg = label + message;\n      if (error) {\n        console.warn(logMsg + '\\n', error, ...extraParams);\n      } else {\n        console.warn(logMsg, ...extraParams);\n      }\n    }\n  }\n\n  /**\n   * Log debug messages\n   */\n  function debug(message: string, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.debug && typeof console !== 'undefined') {\n      console.debug(label + message, ...extraParams);\n    }\n  }\n\n  /**\n   * Log info messages\n   */\n  function info(message: string, ...extraParams: unknown[]) {\n    if (logLevel >= LOG_LEVEL.info && typeof console !== 'undefined') {\n      console.info(label + message, ...extraParams);\n    }\n  }\n\n  return { setLogLevel, warn, error, debug, info };\n}\n","/*\n * Copyright (c) 2021 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { PayloadBuilder, Payload, isNonEmptyJson } from './payload';\nimport { SelfDescribingJson } from './core';\nimport { CorePlugin } from './plugins';\nimport { LOG } from './logger';\n\n/**\n * Argument for {@link ContextGenerator} and {@link ContextFilter} callback\n */\nexport interface ContextEvent {\n  /** The event payload */\n  event: Payload;\n  /** The event type\n   * @example 'page_view'\n   */\n  eventType: string;\n  /** The event schema where one is available, or empty string\n   * @example 'iglu:com.snowplowanalytics.snowplow/ad_impression/jsonschema/1-0-0'\n   */\n  eventSchema: string;\n}\n\n/**\n * A context generator is a user-supplied callback that is evaluated for each event\n * to allow an additional context to be dynamically attached to the event\n * @param args - - Object which contains the event information to help decide what should be included in the returned Context\n */\nexport type ContextGenerator = (args?: ContextEvent) => SelfDescribingJson;\n\n/**\n * A context filter is a user-supplied callback that is evaluated for each event\n * to determine if the context associated with the filter should be attached to the event\n * @param args - - Object that contains: event, eventType, eventSchema\n */\nexport type ContextFilter = (args?: ContextEvent) => boolean;\n\n/**\n * A context primitive is either a self-describing JSON or a context generator\n */\nexport type ContextPrimitive = SelfDescribingJson | ContextGenerator;\n\n/**\n * A filter provider is a tuple that has two parts: a context filter and the context primitive(s)\n * If the context filter evaluates to true, the tracker will attach the context primitive(s)\n */\nexport type FilterProvider = [ContextFilter, Array<ContextPrimitive> | ContextPrimitive];\n\n/**\n * A ruleset has accept or reject properties that contain rules for matching Iglu schema URIs\n */\nexport interface RuleSet {\n  accept?: Array<string> | string;\n  reject?: Array<string> | string;\n}\n\n/**\n * A ruleset provider is aa tuple that has two parts: a ruleset and the context primitive(s)\n * If the ruleset allows the current event schema URI, the tracker will attach the context primitive(s)\n */\nexport type RuleSetProvider = [RuleSet, Array<ContextPrimitive> | ContextPrimitive];\n\n/**\n * Conditional context providers are two element arrays used to decide when to attach contexts, where:\n * - the first element is some conditional criterion\n * - the second element is any number of context primitives\n */\nexport type ConditionalContextProvider = FilterProvider | RuleSetProvider;\n\n/**\n * A Dynamic context is an array of Self Describing JSON contexts, or an array of callbacks which return Self Describing JSON contexts\n * The array can be a mix of both contexts and callbacks which generate contexts\n */\nexport type DynamicContext = Array<SelfDescribingJson | ((...params: any[]) => SelfDescribingJson | null)>;\n\nexport interface GlobalContexts {\n  /**\n   * Returns all Context Primitives\n   */\n  getGlobalPrimitives(): Array<ContextPrimitive>;\n\n  /**\n   * Returns all Conditional Contexts\n   */\n  getConditionalProviders(): Array<ConditionalContextProvider>;\n\n  /**\n   * Adds conditional or primitive global contexts\n   * @param contexts - An Array of either Conditional Contexts or Primitive Contexts\n   */\n  addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Removes all global contexts\n   */\n  clearGlobalContexts(): void;\n\n  /**\n   * Removes previously added global context, performs a deep comparison of the contexts or conditional contexts\n   * @param contexts - An Array of either Condition Contexts or Primitive Contexts\n   */\n  removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Returns all applicable global contexts for a specified event\n   * @param event - The event to check for applicable global contexts for\n   */\n  getApplicableContexts(event: PayloadBuilder): Array<SelfDescribingJson>;\n}\n\n/**\n * Contains helper functions to aid in the addition and removal of Global Contexts\n */\nexport function globalContexts(): GlobalContexts {\n  let globalPrimitives: Array<ContextPrimitive> = [];\n  let conditionalProviders: Array<ConditionalContextProvider> = [];\n\n  /**\n   * Returns all applicable global contexts for a specified event\n   * @param event - The event to check for applicable global contexts for\n   * @returns An array of contexts\n   */\n  const assembleAllContexts = (event: PayloadBuilder): Array<SelfDescribingJson> => {\n    const eventSchema = getUsefulSchema(event);\n    const eventType = getEventType(event);\n    const contexts: Array<SelfDescribingJson> = [];\n    const generatedPrimitives = generatePrimitives(globalPrimitives, event, eventType, eventSchema);\n    contexts.push(...generatedPrimitives);\n\n    const generatedConditionals = generateConditionals(conditionalProviders, event, eventType, eventSchema);\n    contexts.push(...generatedConditionals);\n\n    return contexts;\n  };\n\n  return {\n    getGlobalPrimitives(): Array<ContextPrimitive> {\n      return globalPrimitives;\n    },\n\n    getConditionalProviders(): Array<ConditionalContextProvider> {\n      return conditionalProviders;\n    },\n\n    addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      const acceptedConditionalContexts: ConditionalContextProvider[] = [];\n      const acceptedContextPrimitives: ContextPrimitive[] = [];\n      for (const context of contexts) {\n        if (isConditionalContextProvider(context)) {\n          acceptedConditionalContexts.push(context);\n        } else if (isContextPrimitive(context)) {\n          acceptedContextPrimitives.push(context);\n        }\n      }\n      globalPrimitives = globalPrimitives.concat(acceptedContextPrimitives);\n      conditionalProviders = conditionalProviders.concat(acceptedConditionalContexts);\n    },\n\n    clearGlobalContexts(): void {\n      conditionalProviders = [];\n      globalPrimitives = [];\n    },\n\n    removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void {\n      for (const context of contexts) {\n        if (isConditionalContextProvider(context)) {\n          conditionalProviders = conditionalProviders.filter(\n            (item) => JSON.stringify(item) !== JSON.stringify(context)\n          );\n        } else if (isContextPrimitive(context)) {\n          globalPrimitives = globalPrimitives.filter((item) => JSON.stringify(item) !== JSON.stringify(context));\n        }\n      }\n    },\n\n    getApplicableContexts(event: PayloadBuilder): Array<SelfDescribingJson> {\n      return assembleAllContexts(event);\n    },\n  };\n}\n\nexport interface PluginContexts {\n  /**\n   * Returns list of contexts from all active plugins\n   */\n  addPluginContexts: (additionalContexts?: SelfDescribingJson[] | null) => SelfDescribingJson[];\n}\n\nexport function pluginContexts(plugins: Array<CorePlugin>): PluginContexts {\n  /**\n   * Add common contexts to every event\n   *\n   * @param array - additionalContexts List of user-defined contexts\n   * @returns userContexts combined with commonContexts\n   */\n  return {\n    addPluginContexts: (additionalContexts?: SelfDescribingJson[] | null): SelfDescribingJson[] => {\n      const combinedContexts: SelfDescribingJson[] = additionalContexts ?? [];\n\n      plugins.forEach((plugin) => {\n        try {\n          if (plugin.contexts) {\n            combinedContexts.push(...plugin.contexts());\n          }\n        } catch (ex) {\n          LOG.error('Error adding plugin contexts', ex);\n        }\n      });\n\n      return combinedContexts;\n    },\n  };\n}\n\n/**\n * Find dynamic context generating functions and return their results to be merged into the static contexts\n * Combine an array of unchanging contexts with the result of a context-creating function\n *\n * @param dynamicOrStaticContexts - Array of custom context Objects or custom context generating functions\n * @param Parameters - to pass to dynamic context callbacks\n * @returns An array of Self Describing JSON context\n */\nexport function resolveDynamicContext(\n  dynamicOrStaticContexts?: DynamicContext | null,\n  ...extraParams: any[]\n): Array<SelfDescribingJson> {\n  return (\n    (dynamicOrStaticContexts\n      ?.map(function (context) {\n        if (typeof context === 'function') {\n          try {\n            return context(...extraParams);\n          } catch (e) {\n            //TODO: provide warning\n            return undefined;\n          }\n        } else {\n          return context;\n        }\n      })\n      .filter(Boolean) as Array<SelfDescribingJson>) ?? []\n  );\n}\n\n/**\n * Slices a schema into its composite parts. Useful for ruleset filtering.\n * @param input - A schema string\n * @returns The vendor, schema name, major, minor and patch information of a schema string\n */\nexport function getSchemaParts(input: string): Array<string> | undefined {\n  const re = new RegExp(\n    '^iglu:([a-zA-Z0-9-_.]+)/([a-zA-Z0-9-_]+)/jsonschema/([1-9][0-9]*)-(0|[1-9][0-9]*)-(0|[1-9][0-9]*)$'\n  );\n  const matches = re.exec(input);\n  if (matches !== null) return matches.slice(1, 6);\n  return undefined;\n}\n\n/**\n * Validates the vendor section of a schema string contains allowed wildcard values\n * @param parts - Array of parts from a schema string\n * @returns Whether the vendor validation parts are a valid combination\n */\nexport function validateVendorParts(parts: Array<string>): boolean {\n  if (parts[0] === '*' || parts[1] === '*') {\n    return false; // no wildcard in first or second part\n  }\n  if (parts.slice(2).length > 0) {\n    let asterisk = false;\n    for (const part of parts.slice(2)) {\n      if (part === '*')\n        // mark when we've found a wildcard\n        asterisk = true;\n      else if (asterisk)\n        // invalid if alpha parts come after wildcard\n        return false;\n    }\n    return true;\n  } else if (parts.length == 2) return true;\n\n  return false;\n}\n\n/**\n * Validates the vendor part of a schema string is valid for a rule set\n * @param input - Vendor part of a schema string\n * @returns Whether the vendor validation string is valid\n */\nexport function validateVendor(input: string): boolean {\n  const parts = input.split('.');\n  if (parts && parts.length > 1) return validateVendorParts(parts);\n  return false;\n}\n\n/**\n * Checks for validity of input and returns all the sections of a schema string that are used to match rules in a ruleset\n * @param input - A Schema string\n * @returns The sections of a schema string that are used to match rules in a ruleset\n */\nexport function getRuleParts(input: string): Array<string> | undefined {\n  const re = new RegExp(\n    '^iglu:((?:(?:[a-zA-Z0-9-_]+|\\\\*).)+(?:[a-zA-Z0-9-_]+|\\\\*))/([a-zA-Z0-9-_.]+|\\\\*)/jsonschema/([1-9][0-9]*|\\\\*)-(0|[1-9][0-9]*|\\\\*)-(0|[1-9][0-9]*|\\\\*)$'\n  );\n  const matches = re.exec(input);\n  if (matches !== null && validateVendor(matches[1])) return matches.slice(1, 6);\n  return undefined;\n}\n\n/**\n * Ensures the rules specified in a schema string of a ruleset are valid\n * @param input - A Schema string\n * @returns if there rule is valid\n */\nexport function isValidRule(input: string): boolean {\n  const ruleParts = getRuleParts(input);\n  if (ruleParts) {\n    const vendor = ruleParts[0];\n    return ruleParts.length === 5 && validateVendor(vendor);\n  }\n  return false;\n}\n\n/**\n * Check if a variable is an Array containing only strings\n * @param input - The variable to validate\n * @returns True if the input is an array containing only strings\n */\nexport function isStringArray(input: unknown): input is Array<string> {\n  return (\n    Array.isArray(input) &&\n    input.every((x) => {\n      return typeof x === 'string';\n    })\n  );\n}\n\n/**\n * Validates whether a rule set is an array of valid ruleset strings\n * @param input - The Array of rule set arguments\n * @returns True is the input is an array of valid rules\n */\nexport function isValidRuleSetArg(input: unknown): boolean {\n  if (isStringArray(input))\n    return input.every((x: string) => {\n      return isValidRule(x);\n    });\n  else if (typeof input === 'string') return isValidRule(input);\n  return false;\n}\n\n/**\n * Check if a variable is a valid, non-empty Self Describing JSON\n * @param input - The variable to validate\n * @returns True if a valid Self Describing JSON\n */\nexport function isSelfDescribingJson(input: unknown): input is SelfDescribingJson {\n  const sdj = input as SelfDescribingJson;\n  if (isNonEmptyJson(sdj))\n    if ('schema' in sdj && 'data' in sdj) return typeof sdj.schema === 'string' && typeof sdj.data === 'object';\n  return false;\n}\n\n/**\n * Validates if the input object contains the expected properties of a ruleset\n * @param input - The object containing a rule set\n * @returns True if a valid rule set\n */\nexport function isRuleSet(input: unknown): input is Record<string, unknown> {\n  const ruleSet = input as Record<string, unknown>;\n  let ruleCount = 0;\n  if (input != null && typeof input === 'object' && !Array.isArray(input)) {\n    if (Object.prototype.hasOwnProperty.call(ruleSet, 'accept')) {\n      if (isValidRuleSetArg(ruleSet['accept'])) {\n        ruleCount += 1;\n      } else {\n        return false;\n      }\n    }\n    if (Object.prototype.hasOwnProperty.call(ruleSet, 'reject')) {\n      if (isValidRuleSetArg(ruleSet['reject'])) {\n        ruleCount += 1;\n      } else {\n        return false;\n      }\n    }\n    // if either 'reject' or 'accept' or both exists,\n    // we have a valid ruleset\n    return ruleCount > 0 && ruleCount <= 2;\n  }\n  return false;\n}\n\n/**\n * Validates if the function can be a valid context generator function\n * @param input - The function to be validated\n */\nexport function isContextCallbackFunction(input: unknown): boolean {\n  return typeof input === 'function' && input.length <= 1;\n}\n\n/**\n * Validates if the function can be a valid context primitive function or self describing json\n * @param input - The function or orbject to be validated\n * @returns True if either a Context Generator or Self Describing JSON\n */\nexport function isContextPrimitive(input: unknown): input is ContextPrimitive {\n  return isContextCallbackFunction(input) || isSelfDescribingJson(input);\n}\n\n/**\n * Validates if an array is a valid shape to be a Filter Provider\n * @param input - The Array of Context filter callbacks\n */\nexport function isFilterProvider(input: unknown): boolean {\n  if (Array.isArray(input)) {\n    if (input.length === 2) {\n      if (Array.isArray(input[1])) {\n        return isContextCallbackFunction(input[0]) && input[1].every(isContextPrimitive);\n      }\n      return isContextCallbackFunction(input[0]) && isContextPrimitive(input[1]);\n    }\n  }\n  return false;\n}\n\n/**\n * Validates if an array is a valid shape to be an array of rule sets\n * @param input - The Array of Rule Sets\n */\nexport function isRuleSetProvider(input: unknown): boolean {\n  if (Array.isArray(input) && input.length === 2) {\n    if (!isRuleSet(input[0])) return false;\n    if (Array.isArray(input[1])) return input[1].every(isContextPrimitive);\n    return isContextPrimitive(input[1]);\n  }\n  return false;\n}\n\n/**\n * Checks if an input array is either a filter provider or a rule set provider\n * @param input - An array of filter providers or rule set providers\n * @returns Whether the array is a valid {@link ConditionalContextProvider}\n */\nexport function isConditionalContextProvider(input: unknown): input is ConditionalContextProvider {\n  return isFilterProvider(input) || isRuleSetProvider(input);\n}\n\n/**\n * Checks if a given schema matches any rules within the provided rule set\n * @param ruleSet - The rule set containing rules to match schema against\n * @param schema - The schema to be matched against the rule set\n */\nexport function matchSchemaAgainstRuleSet(ruleSet: RuleSet, schema: string): boolean {\n  let rejectCount = 0;\n  let acceptCount = 0;\n  const acceptRules = ruleSet['accept'];\n  if (Array.isArray(acceptRules)) {\n    if ((ruleSet.accept as Array<string>).some((rule) => matchSchemaAgainstRule(rule, schema))) {\n      acceptCount++;\n    }\n  } else if (typeof acceptRules === 'string') {\n    if (matchSchemaAgainstRule(acceptRules, schema)) {\n      acceptCount++;\n    }\n  }\n\n  const rejectRules = ruleSet['reject'];\n  if (Array.isArray(rejectRules)) {\n    if ((ruleSet.reject as Array<string>).some((rule) => matchSchemaAgainstRule(rule, schema))) {\n      rejectCount++;\n    }\n  } else if (typeof rejectRules === 'string') {\n    if (matchSchemaAgainstRule(rejectRules, schema)) {\n      rejectCount++;\n    }\n  }\n\n  if (acceptCount > 0 && rejectCount === 0) {\n    return true;\n  } else if (acceptCount === 0 && rejectCount > 0) {\n    return false;\n  }\n\n  return false;\n}\n\n/**\n * Checks if a given schema matches a specific rule from a rule set\n * @param rule - The rule to match schema against\n * @param schema - The schema to be matched against the rule\n */\nexport function matchSchemaAgainstRule(rule: string, schema: string): boolean {\n  if (!isValidRule(rule)) return false;\n  const ruleParts = getRuleParts(rule);\n  const schemaParts = getSchemaParts(schema);\n  if (ruleParts && schemaParts) {\n    if (!matchVendor(ruleParts[0], schemaParts[0])) return false;\n    for (let i = 1; i < 5; i++) {\n      if (!matchPart(ruleParts[i], schemaParts[i])) return false;\n    }\n    return true; // if it hasn't failed, it passes\n  }\n  return false;\n}\n\nfunction matchVendor(rule: string, vendor: string): boolean {\n  // rule and vendor must have same number of elements\n  const vendorParts = vendor.split('.');\n  const ruleParts = rule.split('.');\n  if (vendorParts && ruleParts) {\n    if (vendorParts.length !== ruleParts.length) return false;\n    for (let i = 0; i < ruleParts.length; i++) {\n      if (!matchPart(vendorParts[i], ruleParts[i])) return false;\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction matchPart(rule: string, schema: string): boolean {\n  // parts should be the string nested between slashes in the URI: /example/\n  return (rule && schema && rule === '*') || rule === schema;\n}\n\n// Returns the \"useful\" schema, i.e. what would someone want to use to identify events.\n// For some events this is the 'e' property but for unstructured events, this is the\n// 'schema' from the 'ue_px' field.\nfunction getUsefulSchema(sb: PayloadBuilder): string {\n  let eventJson = sb.getJson();\n  for (const json of eventJson) {\n    if (json.keyIfEncoded === 'ue_px' && typeof json.json['data'] === 'object') {\n      const schema = (json.json['data'] as Record<string, unknown>)['schema'];\n      if (typeof schema == 'string') {\n        return schema;\n      }\n    }\n  }\n  return '';\n}\n\nfunction getEventType(payloadBuilder: PayloadBuilder): string {\n  const eventType = payloadBuilder.getPayload()['e'];\n  return typeof eventType === 'string' ? eventType : '';\n}\n\nfunction buildGenerator(\n  generator: ContextGenerator,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): SelfDescribingJson | Array<SelfDescribingJson> | undefined {\n  let contextGeneratorResult: SelfDescribingJson | Array<SelfDescribingJson> | undefined = undefined;\n  try {\n    // try to evaluate context generator\n    const args = {\n      event: event.getPayload(),\n      eventType: eventType,\n      eventSchema: eventSchema,\n    };\n    contextGeneratorResult = generator(args);\n    // determine if the produced result is a valid SDJ\n    if (Array.isArray(contextGeneratorResult) && contextGeneratorResult.every(isSelfDescribingJson)) {\n      return contextGeneratorResult;\n    } else if (isSelfDescribingJson(contextGeneratorResult)) {\n      return contextGeneratorResult;\n    } else {\n      return undefined;\n    }\n  } catch (error) {\n    contextGeneratorResult = undefined;\n  }\n  return contextGeneratorResult;\n}\n\nfunction normalizeToArray<T>(input: Array<T> | T): Array<T> {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return Array.of(input);\n}\n\nfunction generatePrimitives(\n  contextPrimitives: Array<ContextPrimitive> | ContextPrimitive,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  const normalizedInputs: Array<ContextPrimitive> = normalizeToArray(contextPrimitives);\n  const partialEvaluate = (primitive: ContextPrimitive) => {\n    const result = evaluatePrimitive(primitive, event, eventType, eventSchema);\n    if (result && result.length !== 0) {\n      return result;\n    }\n    return undefined;\n  };\n  const generatedContexts = normalizedInputs.map(partialEvaluate);\n  return ([] as Array<SelfDescribingJson>).concat(\n    ...(generatedContexts.filter((c) => c != null && c.filter(Boolean)) as Array<Array<SelfDescribingJson>>)\n  );\n}\n\nfunction evaluatePrimitive(\n  contextPrimitive: ContextPrimitive,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> | undefined {\n  if (isSelfDescribingJson(contextPrimitive)) {\n    return [contextPrimitive as SelfDescribingJson];\n  } else if (isContextCallbackFunction(contextPrimitive)) {\n    const generatorOutput = buildGenerator(contextPrimitive as ContextGenerator, event, eventType, eventSchema);\n    if (isSelfDescribingJson(generatorOutput)) {\n      return [generatorOutput as SelfDescribingJson];\n    } else if (Array.isArray(generatorOutput)) {\n      return generatorOutput;\n    }\n  }\n  return undefined;\n}\n\nfunction evaluateProvider(\n  provider: ConditionalContextProvider,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  if (isFilterProvider(provider)) {\n    const filter: ContextFilter = (provider as FilterProvider)[0];\n    let filterResult = false;\n    try {\n      const args = {\n        event: event.getPayload(),\n        eventType: eventType,\n        eventSchema: eventSchema,\n      };\n      filterResult = filter(args);\n    } catch (error) {\n      filterResult = false;\n    }\n    if (filterResult === true) {\n      return generatePrimitives((provider as FilterProvider)[1], event, eventType, eventSchema);\n    }\n  } else if (isRuleSetProvider(provider)) {\n    if (matchSchemaAgainstRuleSet((provider as RuleSetProvider)[0], eventSchema)) {\n      return generatePrimitives((provider as RuleSetProvider)[1], event, eventType, eventSchema);\n    }\n  }\n  return [];\n}\n\nfunction generateConditionals(\n  providers: Array<ConditionalContextProvider> | ConditionalContextProvider,\n  event: PayloadBuilder,\n  eventType: string,\n  eventSchema: string\n): Array<SelfDescribingJson> {\n  const normalizedInput: Array<ConditionalContextProvider> = normalizeToArray(providers);\n  const partialEvaluate = (provider: ConditionalContextProvider) => {\n    const result = evaluateProvider(provider, event, eventType, eventSchema);\n    if (result && result.length !== 0) {\n      return result;\n    }\n    return undefined;\n  };\n  const generatedContexts = normalizedInput.map(partialEvaluate);\n  return ([] as Array<SelfDescribingJson>).concat(\n    ...(generatedContexts.filter((c) => c != null && c.filter(Boolean)) as Array<Array<SelfDescribingJson>>)\n  );\n}\n","/*\n * Copyright (c) 2021 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { v4 as uuid } from 'uuid';\nimport { payloadBuilder, PayloadBuilder, Payload, isJson, payloadJsonProcessor } from './payload';\nimport {\n  globalContexts,\n  ConditionalContextProvider,\n  ContextPrimitive,\n  GlobalContexts,\n  PluginContexts,\n  pluginContexts,\n} from './contexts';\nimport { CorePlugin } from './plugins';\nimport { LOG } from './logger';\n\n/**\n * export interface for any Self-Describing JSON such as context or Self Describing events\n * @typeParam T - The type of the data object within a SelfDescribingJson\n */\nexport type SelfDescribingJson<T extends Record<keyof T, unknown> = Record<string, unknown>> = {\n  /**\n   * The schema string\n   * @example 'iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0'\n   */\n  schema: string;\n  /**\n   * The data object which should conform to the supplied schema\n   */\n  data: T;\n};\n\n/**\n * export interface for any Self-Describing JSON which has the data attribute as an array\n * @typeParam T - The type of the data object within the SelfDescribingJson data array\n */\nexport type SelfDescribingJsonArray<T extends Record<keyof T, unknown> = Record<string, unknown>> = {\n  /**\n   * The schema string\n   * @example 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-1'\n   */\n  schema: string;\n  /**\n   * The data array which should conform to the supplied schema\n   */\n  data: Array<T>;\n};\n\n/**\n * Algebraic datatype representing possible timestamp type choice\n */\nexport type Timestamp = TrueTimestamp | DeviceTimestamp | number;\n\n/**\n * A representation of a True Timestamp (ttm)\n */\nexport interface TrueTimestamp {\n  readonly type: 'ttm';\n  readonly value: number;\n}\n\n/**\n * A representation of a Device Timestamp (dtm)\n */\nexport interface DeviceTimestamp {\n  readonly type: 'dtm';\n  readonly value: number;\n}\n\n/**\n * Pair of timestamp type ready to be included to payload\n */\ntype TimestampPayload = TrueTimestamp | DeviceTimestamp;\n\n/**\n * Transform optional/old-behavior number timestamp into`Timestamp` ADT\n *\n * @param timestamp - optional number or timestamp object\n * @returns correct timestamp object\n */\nfunction getTimestamp(timestamp?: Timestamp | null): TimestampPayload {\n  if (timestamp == null) {\n    return { type: 'dtm', value: new Date().getTime() };\n  } else if (typeof timestamp === 'number') {\n    return { type: 'dtm', value: timestamp };\n  } else if (timestamp.type === 'ttm') {\n    // We can return timestamp here, but this is safer fallback\n    return { type: 'ttm', value: timestamp.value };\n  } else {\n    return { type: 'dtm', value: timestamp.value || new Date().getTime() };\n  }\n}\n\n/** Additional data points to set when tracking an event */\nexport interface CommonEventProperties {\n  /** Add context to an event by setting an Array of Self Describing JSON */\n  context?: Array<SelfDescribingJson> | null;\n  /** Set the true timestamp or overwrite the device sent timestamp on an event */\n  timestamp?: Timestamp | null;\n}\n\n/**\n * export interface containing all Core functions\n */\nexport interface TrackerCore {\n  /**\n   * Call with a payload from a buildX function\n   * Adds context and payloadPairs name-value pairs to the payload\n   * Applies the callback to the built payload\n   *\n   * @param pb - Payload\n   * @param context - Custom contexts relating to the event\n   * @param timestamp - Timestamp of the event\n   * @returns Payload after the callback is applied\n   */\n  track: (\n    /** A PayloadBuilder created by one of the `buildX` functions */\n    pb: PayloadBuilder,\n    /** The additional contextual information related to the event */\n    context?: Array<SelfDescribingJson> | null,\n    /** Timestamp override */\n    timestamp?: Timestamp | null\n  ) => Payload;\n\n  /**\n   * Set a persistent key-value pair to be added to every payload\n   *\n   * @param key - Field name\n   * @param value - Field value\n   */\n  addPayloadPair: (key: string, value: string | number) => void;\n\n  /**\n   * Get current base64 encoding state\n   */\n  getBase64Encoding(): boolean;\n\n  /**\n   * Turn base 64 encoding on or off\n   *\n   * @param encode - Whether to encode payload\n   */\n  setBase64Encoding(encode: boolean): void;\n\n  /**\n   * Merges a dictionary into payloadPairs\n   *\n   * @param dict - Adds a new payload dictionary to the existing one\n   */\n  addPayloadDict(dict: Payload): void;\n\n  /**\n   * Replace payloadPairs with a new dictionary\n   *\n   * @param dict - Resets all current payload pairs with a new dictionary of pairs\n   */\n  resetPayloadPairs(dict: Payload): void;\n\n  /**\n   * Set the tracker version\n   *\n   * @param version - The version of the current tracker\n   */\n  setTrackerVersion(version: string): void;\n\n  /**\n   * Set the tracker namespace\n   *\n   * @param name - The trackers namespace\n   */\n  setTrackerNamespace(name: string): void;\n\n  /**\n   * Set the application ID\n   *\n   * @param appId - An application ID which identifies the current application\n   */\n  setAppId(appId: string): void;\n\n  /**\n   * Set the platform\n   *\n   * @param value - A valid Snowplow platform value\n   */\n  setPlatform(value: string): void;\n\n  /**\n   * Set the user ID\n   *\n   * @param userId - The custom user id\n   */\n  setUserId(userId: string): void;\n\n  /**\n   * Set the screen resolution\n   *\n   * @param width - screen resolution width\n   * @param height - screen resolution height\n   */\n  setScreenResolution(width: string, height: string): void;\n\n  /**\n   * Set the viewport dimensions\n   *\n   * @param width - viewport width\n   * @param height - viewport height\n   */\n  setViewport(width: string, height: string): void;\n\n  /**\n   * Set the color depth\n   *\n   * @param depth - A color depth value as string\n   */\n  setColorDepth(depth: string): void;\n\n  /**\n   * Set the timezone\n   *\n   * @param timezone - A timezone string\n   */\n  setTimezone(timezone: string): void;\n\n  /**\n   * Set the language\n   *\n   * @param lang - A language string e.g. 'en-UK'\n   */\n  setLang(lang: string): void;\n\n  /**\n   * Set the IP address\n   *\n   * @param ip - An IP Address string\n   */\n  setIpAddress(ip: string): void;\n\n  /**\n   * Set the Useragent\n   *\n   * @param useragent - A useragent string\n   */\n  setUseragent(useragent: string): void;\n\n  /**\n   * Adds contexts globally, contexts added here will be attached to all applicable events\n   * @param contexts - An array containing either contexts or a conditional contexts\n   */\n  addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Removes all global contexts\n   */\n  clearGlobalContexts(): void;\n\n  /**\n   * Removes previously added global context, performs a deep comparison of the contexts or conditional contexts\n   * @param contexts - An array containing either contexts or a conditional contexts\n   */\n  removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>): void;\n\n  /**\n   * Add a plugin into the plugin collection after Core has already been initialised\n   * @param configuration - The plugin to add\n   */\n  addPlugin(configuration: CorePluginConfiguration): void;\n}\n\n/**\n * The configuration object for the tracker core library\n */\nexport interface CoreConfiguration {\n  /* Should payloads be base64 encoded when built */\n  base64?: boolean;\n  /* A list of all the plugins to include at load */\n  corePlugins?: Array<CorePlugin>;\n  /* The callback which will fire each time `track()` is called */\n  callback?: (PayloadData: PayloadBuilder) => void;\n}\n\n/**\n * The configuration of the plugin to add\n */\nexport interface CorePluginConfiguration {\n  /* The plugin to add */\n  plugin: CorePlugin;\n}\n\n/**\n * Create a tracker core object\n *\n * @param base64 - Whether to base 64 encode contexts and self describing event JSONs\n * @param corePlugins - The core plugins to be processed with each event\n * @param callback - Function applied to every payload dictionary object\n * @returns Tracker core\n */\nexport function trackerCore(configuration: CoreConfiguration = {}): TrackerCore {\n  function newCore(base64: boolean, corePlugins: Array<CorePlugin>, callback?: (PayloadData: PayloadBuilder) => void) {\n    const pluginContextsHelper: PluginContexts = pluginContexts(corePlugins),\n      globalContextsHelper: GlobalContexts = globalContexts();\n\n    let encodeBase64 = base64,\n      payloadPairs: Payload = {}; // Dictionary of key-value pairs which get added to every payload, e.g. tracker version\n\n    /**\n     * Wraps an array of custom contexts in a self-describing JSON\n     *\n     * @param contexts - Array of custom context self-describing JSONs\n     * @returns Outer JSON\n     */\n    function completeContexts(\n      contexts?: Array<SelfDescribingJson>\n    ): SelfDescribingJsonArray<SelfDescribingJson> | undefined {\n      if (contexts && contexts.length) {\n        return {\n          schema: 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0',\n          data: contexts,\n        };\n      }\n      return undefined;\n    }\n\n    /**\n     * Adds all global contexts to a contexts array\n     *\n     * @param pb - PayloadData\n     * @param contexts - Custom contexts relating to the event\n     */\n    function attachGlobalContexts(\n      pb: PayloadBuilder,\n      contexts?: Array<SelfDescribingJson> | null\n    ): Array<SelfDescribingJson> {\n      const applicableContexts: Array<SelfDescribingJson> = globalContextsHelper.getApplicableContexts(pb);\n      const returnedContexts: Array<SelfDescribingJson> = [];\n      if (contexts && contexts.length) {\n        returnedContexts.push(...contexts);\n      }\n      if (applicableContexts && applicableContexts.length) {\n        returnedContexts.push(...applicableContexts);\n      }\n      return returnedContexts;\n    }\n\n    /**\n     * Gets called by every trackXXX method\n     * Adds context and payloadPairs name-value pairs to the payload\n     * Applies the callback to the built payload\n     *\n     * @param pb - Payload\n     * @param context - Custom contexts relating to the event\n     * @param timestamp - Timestamp of the event\n     * @returns Payload after the callback is applied\n     */\n    function track(\n      pb: PayloadBuilder,\n      context?: Array<SelfDescribingJson> | null,\n      timestamp?: Timestamp | null\n    ): Payload {\n      pb.withJsonProcessor(payloadJsonProcessor(encodeBase64));\n      pb.add('eid', uuid());\n      pb.addDict(payloadPairs);\n      const tstamp = getTimestamp(timestamp);\n      pb.add(tstamp.type, tstamp.value.toString());\n      const allContexts = attachGlobalContexts(pb, pluginContextsHelper.addPluginContexts(context));\n      const wrappedContexts = completeContexts(allContexts);\n      if (wrappedContexts !== undefined) {\n        pb.addJson('cx', 'co', wrappedContexts);\n      }\n\n      corePlugins.forEach((plugin) => {\n        try {\n          if (plugin.beforeTrack) {\n            plugin.beforeTrack(pb);\n          }\n        } catch (ex) {\n          LOG.error('Plugin beforeTrack', ex);\n        }\n      });\n\n      if (typeof callback === 'function') {\n        callback(pb);\n      }\n\n      const finalPayload = pb.build();\n\n      corePlugins.forEach((plugin) => {\n        try {\n          if (plugin.afterTrack) {\n            plugin.afterTrack(finalPayload);\n          }\n        } catch (ex) {\n          LOG.error('Plugin afterTrack', ex);\n        }\n      });\n\n      return finalPayload;\n    }\n\n    /**\n     * Set a persistent key-value pair to be added to every payload\n     *\n     * @param key - Field name\n     * @param value - Field value\n     */\n    function addPayloadPair(key: string, value: string | number): void {\n      payloadPairs[key] = value;\n    }\n\n    const core = {\n      track,\n\n      addPayloadPair,\n\n      getBase64Encoding() {\n        return encodeBase64;\n      },\n\n      setBase64Encoding(encode: boolean) {\n        encodeBase64 = encode;\n      },\n\n      addPayloadDict(dict: Payload) {\n        for (const key in dict) {\n          if (Object.prototype.hasOwnProperty.call(dict, key)) {\n            payloadPairs[key] = dict[key];\n          }\n        }\n      },\n\n      resetPayloadPairs(dict: Payload) {\n        payloadPairs = isJson(dict) ? dict : {};\n      },\n\n      setTrackerVersion(version: string) {\n        addPayloadPair('tv', version);\n      },\n\n      setTrackerNamespace(name: string) {\n        addPayloadPair('tna', name);\n      },\n\n      setAppId(appId: string) {\n        addPayloadPair('aid', appId);\n      },\n\n      setPlatform(value: string) {\n        addPayloadPair('p', value);\n      },\n\n      setUserId(userId: string) {\n        addPayloadPair('uid', userId);\n      },\n\n      setScreenResolution(width: string, height: string) {\n        addPayloadPair('res', width + 'x' + height);\n      },\n\n      setViewport(width: string, height: string) {\n        addPayloadPair('vp', width + 'x' + height);\n      },\n\n      setColorDepth(depth: string) {\n        addPayloadPair('cd', depth);\n      },\n\n      setTimezone(timezone: string) {\n        addPayloadPair('tz', timezone);\n      },\n\n      setLang(lang: string) {\n        addPayloadPair('lang', lang);\n      },\n\n      setIpAddress(ip: string) {\n        addPayloadPair('ip', ip);\n      },\n\n      setUseragent(useragent: string) {\n        addPayloadPair('ua', useragent);\n      },\n\n      addGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>) {\n        globalContextsHelper.addGlobalContexts(contexts);\n      },\n\n      clearGlobalContexts(): void {\n        globalContextsHelper.clearGlobalContexts();\n      },\n\n      removeGlobalContexts(contexts: Array<ConditionalContextProvider | ContextPrimitive>) {\n        globalContextsHelper.removeGlobalContexts(contexts);\n      },\n    };\n\n    return core;\n  }\n\n  const { base64, corePlugins, callback } = configuration,\n    plugins = corePlugins ?? [],\n    partialCore = newCore(base64 ?? true, plugins, callback),\n    core = {\n      ...partialCore,\n      addPlugin: (configuration: CorePluginConfiguration) => {\n        const { plugin } = configuration;\n        plugins.push(plugin);\n        plugin.logger?.(LOG);\n        plugin.activateCorePlugin?.(core);\n      },\n    };\n\n  plugins?.forEach((plugin) => {\n    plugin.logger?.(LOG);\n    plugin.activateCorePlugin?.(core);\n  });\n\n  return core;\n}\n\n/**\n * A Self Describing Event\n * A custom event type, allowing for an event to be tracked using your own custom schema\n * and a data object which conforms to the supplied schema\n */\nexport interface SelfDescribingEvent {\n  /** The Self Describing JSON which describes the event */\n  event: SelfDescribingJson;\n}\n\n/**\n * Build a self-describing event\n * A custom event type, allowing for an event to be tracked using your own custom schema\n * and a data object which conforms to the supplied schema\n *\n * @param event - Contains the properties and schema location for the event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildSelfDescribingEvent(event: SelfDescribingEvent): PayloadBuilder {\n  const {\n      event: { schema, data },\n    } = event,\n    pb = payloadBuilder();\n  const ueJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0',\n    data: { schema, data },\n  };\n\n  pb.add('e', 'ue');\n  pb.addJson('ue_px', 'ue_pr', ueJson);\n\n  return pb;\n}\n\n/**\n * A Page View Event\n * Represents a Page View, which is typically fired as soon as possible when a web page\n * is loaded within the users browser. Often also fired on \"virtual page views\" within\n * Single Page Applications (SPA).\n */\nexport interface PageViewEvent {\n  /** The current URL visible in the users browser */\n  pageUrl?: string | null;\n  /** The current page title in the users browser */\n  pageTitle?: string | null;\n  /** The URL of the referring page */\n  referrer?: string | null;\n}\n\n/**\n * Build a Page View Event\n * Represents a Page View, which is typically fired as soon as possible when a web page\n * is loaded within the users browser. Often also fired on \"virtual page views\" within\n * Single Page Applications (SPA).\n *\n * @param event - Contains the properties for the Page View event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildPageView(event: PageViewEvent): PayloadBuilder {\n  const { pageUrl, pageTitle, referrer } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'pv'); // 'pv' for Page View\n  pb.add('url', pageUrl);\n  pb.add('page', pageTitle);\n  pb.add('refr', referrer);\n\n  return pb;\n}\n\n/**\n * A Page Ping Event\n * Fires when activity tracking is enabled in the browser.\n * Tracks same information as the last tracked Page View and includes scroll\n * information from the current page view\n */\nexport interface PagePingEvent extends PageViewEvent {\n  /** The minimum X scroll position for the current page view */\n  minXOffset?: number;\n  /** The maximum X scroll position for the current page view */\n  maxXOffset?: number;\n  /** The minimum Y scroll position for the current page view */\n  minYOffset?: number;\n  /** The maximum Y scroll position for the current page view */\n  maxYOffset?: number;\n}\n\n/**\n * Build a Page Ping Event\n * Fires when activity tracking is enabled in the browser.\n * Tracks same information as the last tracked Page View and includes scroll\n * information from the current page view\n *\n * @param event - Contains the properties for the Page Ping event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildPagePing(event: PagePingEvent): PayloadBuilder {\n  const { pageUrl, pageTitle, referrer, minXOffset, maxXOffset, minYOffset, maxYOffset } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'pp'); // 'pp' for Page Ping\n  pb.add('url', pageUrl);\n  pb.add('page', pageTitle);\n  pb.add('refr', referrer);\n  if (minXOffset && !isNaN(Number(minXOffset))) pb.add('pp_mix', minXOffset.toString());\n  if (maxXOffset && !isNaN(Number(maxXOffset))) pb.add('pp_max', maxXOffset.toString());\n  if (minYOffset && !isNaN(Number(minYOffset))) pb.add('pp_miy', minYOffset.toString());\n  if (maxYOffset && !isNaN(Number(maxYOffset))) pb.add('pp_may', maxYOffset.toString());\n\n  return pb;\n}\n\n/**\n * A Structured Event\n * A classic style of event tracking, allows for easier movement between analytics\n * systems. A loosely typed event, creating a Self Describing event is preferred, but\n * useful for interoperability.\n */\nexport interface StructuredEvent {\n  category: string;\n  action: string;\n  label?: string;\n  property?: string;\n  value?: number;\n}\n\n/**\n * Build a Structured Event\n * A classic style of event tracking, allows for easier movement between analytics\n * systems. A loosely typed event, creating a Self Describing event is preferred, but\n * useful for interoperability.\n *\n * @param event - Contains the properties for the Structured event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildStructEvent(event: StructuredEvent): PayloadBuilder {\n  const { category, action, label, property, value } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'se'); // 'se' for Structured Event\n  pb.add('se_ca', category);\n  pb.add('se_ac', action);\n  pb.add('se_la', label);\n  pb.add('se_pr', property);\n  pb.add('se_va', value == null ? undefined : value.toString());\n\n  return pb;\n}\n\n/**\n * An Ecommerce Transaction Event\n * Allows for tracking common ecommerce events, this event is usually used when\n * a customer completes a transaction.\n */\nexport interface EcommerceTransactionEvent {\n  /** An identifier for the order */\n  orderId: string;\n  /** The total value of the order  */\n  total: number;\n  /** Transaction affiliation (e.g. store where sale took place) */\n  affiliation?: string;\n  /** The amount of tax on the transaction */\n  tax?: number;\n  /** The amount of shipping costs for this transaction */\n  shipping?: number;\n  /** Delivery address, city */\n  city?: string;\n  /** Delivery address, state */\n  state?: string;\n  /** Delivery address, country */\n  country?: string;\n  /** Currency of the transaction */\n  currency?: string;\n}\n\n/**\n * Build an Ecommerce Transaction Event\n * Allows for tracking common ecommerce events, this event is usually used when\n * a consumer completes a transaction.\n *\n * @param event - Contains the properties for the Ecommerce Transactoion event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildEcommerceTransaction(event: EcommerceTransactionEvent): PayloadBuilder {\n  const { orderId, total, affiliation, tax, shipping, city, state, country, currency } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'tr'); // 'tr' for Transaction\n  pb.add('tr_id', orderId);\n  pb.add('tr_af', affiliation);\n  pb.add('tr_tt', total);\n  pb.add('tr_tx', tax);\n  pb.add('tr_sh', shipping);\n  pb.add('tr_ci', city);\n  pb.add('tr_st', state);\n  pb.add('tr_co', country);\n  pb.add('tr_cu', currency);\n\n  return pb;\n}\n\n/**\n * An Ecommerce Transaction Item\n * Related to the {@link EcommerceTransactionEvent}\n * Each Ecommerce Transaction may contain one or more EcommerceTransactionItem events\n */\nexport interface EcommerceTransactionItemEvent {\n  /** An identifier for the order */\n  orderId: string;\n  /** A Product Stock Keeping Unit (SKU) */\n  sku: string;\n  /** The price of the product */\n  price: number;\n  /** The name of the product */\n  name?: string;\n  /** The category the product belongs to */\n  category?: string;\n  /** The quanity of this product within the transaction */\n  quantity?: number;\n  /** The currency of the product for the transaction */\n  currency?: string;\n}\n\n/**\n * Build an Ecommerce Transaction Item Event\n * Related to the {@link buildEcommerceTransaction}\n * Each Ecommerce Transaction may contain one or more EcommerceTransactionItem events\n *\n * @param event - Contains the properties for the Ecommerce Transaction Item event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildEcommerceTransactionItem(event: EcommerceTransactionItemEvent): PayloadBuilder {\n  const { orderId, sku, price, name, category, quantity, currency } = event,\n    pb = payloadBuilder();\n  pb.add('e', 'ti'); // 'tr' for Transaction Item\n  pb.add('ti_id', orderId);\n  pb.add('ti_sk', sku);\n  pb.add('ti_nm', name);\n  pb.add('ti_ca', category);\n  pb.add('ti_pr', price);\n  pb.add('ti_qu', quantity);\n  pb.add('ti_cu', currency);\n\n  return pb;\n}\n\n/**\n * A Screen View Event\n * Similar to a Page View but less focused on typical web properties\n * Often used for mobile applications as the user is presented with\n * new views as they performance navigation events\n */\nexport interface ScreenViewEvent {\n  /** The name of the screen */\n  name?: string;\n  /** The identifier of the screen */\n  id?: string;\n}\n\n/**\n * Build a Scren View Event\n * Similar to a Page View but less focused on typical web properties\n * Often used for mobile applications as the user is presented with\n * new views as they performance navigation events\n *\n * @param event - Contains the properties for the Screen View event. One or more properties must be included.\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildScreenView(event: ScreenViewEvent): PayloadBuilder {\n  const { name, id } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/screen_view/jsonschema/1-0-0',\n      data: removeEmptyProperties({ name, id }),\n    },\n  });\n}\n\n/**\n * A Link Click Event\n * Used when a user clicks on a link on a webpage, typically an anchor tag <a>\n */\nexport interface LinkClickEvent {\n  /** The target URL of the link */\n  targetUrl: string;\n  /** The ID of the element clicked if present */\n  elementId?: string;\n  /** An array of class names from the element clicked */\n  elementClasses?: Array<string>;\n  /** The target value of the element if present */\n  elementTarget?: string;\n  /** The content of the element if present and enabled */\n  elementContent?: string;\n}\n\n/**\n * Build a Link Click Event\n * Used when a user clicks on a link on a webpage, typically an anchor tag <a>\n *\n * @param event - Contains the properties for the Link Click event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildLinkClick(event: LinkClickEvent): PayloadBuilder {\n  const { targetUrl, elementId, elementClasses, elementTarget, elementContent } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/link_click/jsonschema/1-0-1',\n    data: removeEmptyProperties({ targetUrl, elementId, elementClasses, elementTarget, elementContent }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Ad Impression Event\n * Used to track an advertisement impression\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n */\nexport interface AdImpressionEvent {\n  /** Identifier for the particular impression instance */\n  impressionId?: string;\n  /** The cost model for the campaign */\n  costModel?: 'cpa' | 'cpc' | 'cpm';\n  /** Advertisement cost */\n  cost?: number;\n  /** The destination URL of the advertisement */\n  targetUrl?: string;\n  /** Identifier for the ad banner being displayed */\n  bannerId?: string;\n  /** Identifier for the zone where the ad banner is located */\n  zoneId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  advertiserId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  campaignId?: string;\n}\n\n/**\n * Build a Ad Impression Event\n * Used to track an advertisement impression\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n *\n * @param event - Contains the properties for the Ad Impression event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAdImpression(event: AdImpressionEvent): PayloadBuilder {\n  const { impressionId, costModel, cost, targetUrl, bannerId, zoneId, advertiserId, campaignId } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/ad_impression/jsonschema/1-0-0',\n    data: removeEmptyProperties({\n      impressionId,\n      costModel,\n      cost,\n      targetUrl,\n      bannerId,\n      zoneId,\n      advertiserId,\n      campaignId,\n    }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Ad Click Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n */\nexport interface AdClickEvent {\n  /** The destination URL of the advertisement */\n  targetUrl: string;\n  /**\tIdentifier for the particular click instance */\n  clickId?: string;\n  /** The cost model for the campaign */\n  costModel?: 'cpa' | 'cpc' | 'cpm';\n  /** Advertisement cost */\n  cost?: number;\n  /** Identifier for the ad banner being displayed */\n  bannerId?: string;\n  /** Identifier for the zone where the ad banner is located */\n  zoneId?: string;\n  /** Identifier for the particular impression instance */\n  impressionId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  advertiserId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  campaignId?: string;\n}\n\n/**\n * Build a Ad Click Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n *\n * @param event - Contains the properties for the Ad Click event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAdClick(event: AdClickEvent): PayloadBuilder {\n  const { targetUrl, clickId, costModel, cost, bannerId, zoneId, impressionId, advertiserId, campaignId } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/ad_click/jsonschema/1-0-0',\n    data: removeEmptyProperties({\n      targetUrl,\n      clickId,\n      costModel,\n      cost,\n      bannerId,\n      zoneId,\n      impressionId,\n      advertiserId,\n      campaignId,\n    }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Ad Conversion Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n */\nexport interface AdConversionEvent {\n  /** Identifier for the particular conversion instance */\n  conversionId?: string;\n  /** The cost model for the campaign */\n  costModel?: 'cpa' | 'cpc' | 'cpm';\n  /** Advertisement cost */\n  cost?: number;\n  /**\tConversion category */\n  category?: string;\n  /** The type of user interaction e.g. 'purchase' */\n  action?: string;\n  /** Describes the object of the conversion */\n  property?: string;\n  /** How much the conversion is initially worth */\n  initialValue?: number;\n  /** Identifier for the advertiser which the campaign belongs to */\n  advertiserId?: string;\n  /** Identifier for the advertiser which the campaign belongs to */\n  campaignId?: string;\n}\n\n/**\n * Build a Ad Conversion Event\n * Used to track an advertisement click\n *\n * @remarks\n * If you provide the cost field, you must also provide one of 'cpa', 'cpc', and 'cpm' for the costModel field.\n *\n * @param event - Contains the properties for the Ad Conversion event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAdConversion(event: AdConversionEvent): PayloadBuilder {\n  const { conversionId, costModel, cost, category, action, property, initialValue, advertiserId, campaignId } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/ad_conversion/jsonschema/1-0-0',\n    data: removeEmptyProperties({\n      conversionId,\n      costModel,\n      cost,\n      category,\n      action,\n      property,\n      initialValue,\n      advertiserId,\n      campaignId,\n    }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * A Social Interaction Event\n * Social tracking will be used to track the way users interact\n * with Facebook, Twitter and Google + widgets\n * e.g. to capture “like this” or “tweet this” events.\n */\nexport interface SocialInteractionEvent {\n  /** Social action performed */\n  action: string;\n  /** Social network */\n  network: string;\n  /** Object social action is performed on */\n  target?: string;\n}\n\n/**\n * Build a Social Interaction Event\n * Social tracking will be used to track the way users interact\n * with Facebook, Twitter and Google + widgets\n * e.g. to capture “like this” or “tweet this” events.\n *\n * @param event - Contains the properties for the Social Interaction event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildSocialInteraction(event: SocialInteractionEvent): PayloadBuilder {\n  const { action, network, target } = event;\n  const eventJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/social_interaction/jsonschema/1-0-0',\n    data: removeEmptyProperties({ action, network, target }),\n  };\n\n  return buildSelfDescribingEvent({ event: eventJson });\n}\n\n/**\n * An Add To Cart Event\n * For tracking users adding items from a cart\n * on an ecommerce site.\n */\nexport interface AddToCartEvent {\n  /** A Product Stock Keeping Unit (SKU) */\n  sku: string;\n  /** The number added to the cart */\n  quantity: number;\n  /** The name of the product */\n  name?: string;\n  /** The category of the product */\n  category?: string;\n  /** The price of the product */\n  unitPrice?: number;\n  /** The currency of the product */\n  currency?: string;\n}\n\n/**\n * Build a Add To Cart Event\n * For tracking users adding items from a cart\n * on an ecommerce site.\n *\n * @param event - Contains the properties for the Add To Cart event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildAddToCart(event: AddToCartEvent): PayloadBuilder {\n  const { sku, quantity, name, category, unitPrice, currency } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/add_to_cart/jsonschema/1-0-0',\n      data: removeEmptyProperties({\n        sku,\n        quantity,\n        name,\n        category,\n        unitPrice,\n        currency,\n      }),\n    },\n  });\n}\n\n/**\n * An Remove To Cart Event\n * For tracking users removing items from a cart\n * on an ecommerce site.\n */\nexport interface RemoveFromCartEvent {\n  /** A Product Stock Keeping Unit (SKU) */\n  sku: string;\n  /** The number removed from the cart */\n  quantity: number;\n  /** The name of the product */\n  name?: string;\n  /** The category of the product */\n  category?: string;\n  /** The price of the product */\n  unitPrice?: number;\n  /** The currency of the product */\n  currency?: string;\n}\n\n/**\n * Build a Remove From Cart Event\n * For tracking users removing items from a cart\n * on an ecommerce site.\n *\n * @param event - Contains the properties for the Remove From Cart event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildRemoveFromCart(event: RemoveFromCartEvent): PayloadBuilder {\n  const { sku, quantity, name, category, unitPrice, currency } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/remove_from_cart/jsonschema/1-0-0',\n      data: removeEmptyProperties({\n        sku,\n        quantity,\n        name,\n        category,\n        unitPrice,\n        currency,\n      }),\n    },\n  });\n}\n\n/**\n * Represents either a Form Focus or Form Change event\n * When a user focuses on a form element or when a user makes a\n * change to a form element.\n */\nexport interface FormFocusOrChangeEvent {\n  /** The schema which will be used for the event */\n  schema: 'change_form' | 'focus_form';\n  /** The ID of the form which the element belongs to */\n  formId: string;\n  /** The element ID which the user is interacting with */\n  elementId: string;\n  /** The name of the node (\"INPUT\", \"TEXTAREA\", \"SELECT\") */\n  nodeName: string;\n  /** The value of the element at the time of the event firing */\n  value: string | null;\n  /** The type of element (e.g. \"datetime\", \"text\", \"radio\", etc.) */\n  type?: string | null;\n  /** The class names on the element */\n  elementClasses?: Array<string> | null;\n}\n\n/**\n * Build a Form Focus or Change Form Event based on schema property\n * When a user focuses on a form element or when a user makes a\n * change to a form element.\n *\n * @param event - Contains the properties for the Form Focus or Change Form event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildFormFocusOrChange(event: FormFocusOrChangeEvent): PayloadBuilder {\n  let event_schema = '';\n  const { schema, formId, elementId, nodeName, elementClasses, value, type } = event;\n  const event_data: Record<string, unknown> = { formId, elementId, nodeName, elementClasses, value };\n  if (schema === 'change_form') {\n    event_schema = 'iglu:com.snowplowanalytics.snowplow/change_form/jsonschema/1-0-0';\n    event_data.type = type;\n  } else if (schema === 'focus_form') {\n    event_schema = 'iglu:com.snowplowanalytics.snowplow/focus_form/jsonschema/1-0-0';\n    event_data.elementType = type;\n  }\n  return buildSelfDescribingEvent({\n    event: {\n      schema: event_schema,\n      data: removeEmptyProperties(event_data, { value: true }),\n    },\n  });\n}\n\n/**\n * A representation of an element within a form\n */\nexport type FormElement = {\n  /** The name of the element */\n  name: string;\n  /** The current value of the element */\n  value: string | null;\n  /** The name of the node (\"INPUT\", \"TEXTAREA\", \"SELECT\") */\n  nodeName: string;\n  /** The type of element (e.g. \"datetime\", \"text\", \"radio\", etc.) */\n  type?: string | null;\n};\n\n/**\n * A Form Submission Event\n * Used to track when a user submits a form\n */\nexport interface FormSubmissionEvent {\n  /** The ID of the form */\n  formId: string;\n  /** The class names on the form */\n  formClasses?: Array<string>;\n  /** The elements contained within the form */\n  elements?: Array<FormElement>;\n}\n\n/**\n * Build a Form Submission Event\n * Used to track when a user submits a form\n *\n * @param event - Contains the properties for the Form Submission event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildFormSubmission(event: FormSubmissionEvent): PayloadBuilder {\n  const { formId, formClasses, elements } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/submit_form/jsonschema/1-0-0',\n      data: removeEmptyProperties({ formId, formClasses, elements }),\n    },\n  });\n}\n\n/**\n * A Site Search Event\n * Used when a user performs a search action on a page\n */\nexport interface SiteSearchEvent {\n  /** The terms of the search */\n  terms: Array<string>;\n  /** Any filters which have been applied to the search */\n  filters?: Record<string, string | boolean>;\n  /** The total number of results for this search */\n  totalResults?: number;\n  /** The number of visible results on the page */\n  pageResults?: number;\n}\n\n/**\n * Build a Site Search Event\n * Used when a user performs a search action on a page\n *\n * @param event - Contains the properties for the Site Search event\n * @returns PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track}\n */\nexport function buildSiteSearch(event: SiteSearchEvent): PayloadBuilder {\n  const { terms, filters, totalResults, pageResults } = event;\n  return buildSelfDescribingEvent({\n    event: {\n      schema: 'iglu:com.snowplowanalytics.snowplow/site_search/jsonschema/1-0-0',\n      data: removeEmptyProperties({ terms, filters, totalResults, pageResults }),\n    },\n  });\n}\n\n/**\n * A Consent Withdrawn Event\n * Used for tracking when a user withdraws their consent\n */\nexport interface ConsentWithdrawnEvent {\n  /** Specifies whether all consent should be withdrawn */\n  all: boolean;\n  /** Identifier for the document withdrawing consent */\n  id?: string;\n  /** Version of the document withdrawing consent */\n  version?: string;\n  /** Name of the document withdrawing consent */\n  name?: string;\n  /** Description of the document withdrawing consent */\n  description?: string;\n}\n\n/**\n * Build a Consent Withdrawn Event\n * Used for tracking when a user withdraws their consent\n *\n * @param event - Contains the properties for the Consent Withdrawn event\n * @returns An object containing the PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track} and a 'consent_document' context\n */\nexport function buildConsentWithdrawn(event: ConsentWithdrawnEvent) {\n  const { all, id, version, name, description } = event;\n  const documentJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/consent_document/jsonschema/1-0-0',\n    data: removeEmptyProperties({ id, version, name, description }),\n  };\n\n  return {\n    event: buildSelfDescribingEvent({\n      event: {\n        schema: 'iglu:com.snowplowanalytics.snowplow/consent_withdrawn/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          all: all,\n        }),\n      },\n    }),\n    context: [documentJson],\n  };\n}\n\n/**\n * A Consent Granted Event\n * Used for tracking when a user grants their consent\n */\nexport interface ConsentGrantedEvent {\n  /** Identifier for the document granting consent */\n  id: string;\n  /** Version of the document granting consent */\n  version: string;\n  /** Name of the document granting consent */\n  name?: string;\n  /** Description of the document granting consent */\n  description?: string;\n  /** When the consent expires */\n  expiry?: string;\n}\n\n/**\n * Build a Consent Granted Event\n * Used for tracking when a user grants their consent\n *\n * @param event - Contains the properties for the Consent Granted event\n * @returns An object containing the PayloadBuilder to be sent to {@link @snowplow/tracker-core#TrackerCore.track} and a 'consent_document' context\n */\nexport function buildConsentGranted(event: ConsentGrantedEvent) {\n  const { expiry, id, version, name, description } = event;\n  const documentJson = {\n    schema: 'iglu:com.snowplowanalytics.snowplow/consent_document/jsonschema/1-0-0',\n    data: removeEmptyProperties({ id, version, name, description }),\n  };\n\n  return {\n    event: buildSelfDescribingEvent({\n      event: {\n        schema: 'iglu:com.snowplowanalytics.snowplow/consent_granted/jsonschema/1-0-0',\n        data: removeEmptyProperties({\n          expiry: expiry,\n        }),\n      },\n    }),\n    context: [documentJson],\n  };\n}\n\n/**\n * Returns a copy of a JSON with undefined and null properties removed\n *\n * @param event - JSON object to clean\n * @param exemptFields - Set of fields which should not be removed even if empty\n * @returns A cleaned copy of eventJson\n */\nfunction removeEmptyProperties(\n  event: Record<string, unknown>,\n  exemptFields: Record<string, boolean> = {}\n): Record<string, unknown> {\n  const ret: Record<string, unknown> = {};\n  for (const k in event) {\n    if (exemptFields[k] || (event[k] !== null && typeof event[k] !== 'undefined')) {\n      ret[k] = event[k];\n    }\n  }\n  return ret;\n}\n","/*\n * Copyright (c) 2021 Snowplow Analytics Ltd, 2010 Anthon Pang\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * A library of helpful methods for Snowplow JavaScript Trackers\n * Contains Context Generation, Event Payload Builders, and Core Plugins.\n *\n * @packageDocumentation\n */\n\nimport { version as v } from '../package.json';\nexport const version = v;\n\nexport * from './contexts';\nexport * from './plugins';\nexport * from './payload';\nexport * from './core';\nexport * from './logger';\n"],"names":["uuid","v"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAiDA;;;;;;SAMgB,eAAe,CAAC,IAAY;IAC1C,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;IAED,IAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACvE,CAAC;AAED,IAAM,GAAG,GAAG,mEAAmE,CAAC;AAEhF;;;;;;;SAOgB,YAAY,CAAC,IAAY;;;;;;;;;;;;;;;IAgBvC,IAAI,EAAE,EACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,IAAI,EACJ,CAAC,GAAG,CAAC,EACL,EAAE,GAAG,CAAC,CAAC;IACT,IAAM,OAAO,GAAkB,EAAE,CAAC;IAElC,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;IAED,IAAI,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAE1C,GAAG;;QAED,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1B,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1B,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;QAE1B,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QAEnC,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC;QACzB,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC;QACzB,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;QACxB,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;;QAGjB,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KACnF,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;IAE1B,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAE7B,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAE1B,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D;;ACjIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAqGgB,cAAc;IAC5B,IAAM,IAAI,GAAY,EAAE,EACtB,OAAO,GAAc,EAAE,EACvB,iBAAiB,GAAc,EAAE,CAAC;IACpC,IAAI,SAAoC,CAAC;IAEzC,IAAM,GAAG,GAAG,UAAC,GAAW,EAAE,KAAc;QACtC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE,EAAE;;YAEjC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SACnB;KACF,CAAC;IAEF,IAAM,OAAO,GAAG,UAAC,IAAa;QAC5B,KAAK,IAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBACnD,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACrB;SACF;KACF,CAAC;IAEF,IAAM,OAAO,GAAG,UAAC,YAAoB,EAAE,eAAuB,EAAE,IAA8B;QAC5F,IAAI,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE;YAChC,IAAM,YAAY,GAAG,EAAE,YAAY,cAAA,EAAE,eAAe,iBAAA,EAAE,IAAI,MAAA,EAAE,CAAC;YAC7D,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5B;KACF,CAAC;IAEF,OAAO;QACL,GAAG,KAAA;QACH,OAAO,SAAA;QACP,OAAO,SAAA;QACP,UAAU,EAAE,cAAM,OAAA,IAAI,GAAA;QACtB,OAAO,EAAE,cAAM,OAAA,OAAO,GAAA;QACtB,iBAAiB,EAAE,UAAC,aAAa;YAC/B,SAAS,GAAG,aAAa,CAAC;SAC3B;QACD,KAAK,EAAE;YACL,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,IAAI,EAAE,iBAAiB,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACb;KACF,CAAC;AACJ,CAAC;AAED;;;;;;SAMgB,oBAAoB,CAAC,YAAqB;IACxD,OAAO,UAAC,cAA8B,EAAE,iBAA4B;QAClE,KAAmB,UAAiB,EAAjB,uCAAiB,EAAjB,+BAAiB,EAAjB,IAAiB,EAAE;YAAjC,IAAM,IAAI,0BAAA;YACb,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,YAAY,EAAE;gBAChB,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7D;iBAAM;gBACL,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;aAC/C;SACF;QACD,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;KAC9B,CAAC;AACJ,CAAC;AAED;;;;SAIgB,cAAc,CAAC,QAAkC;IAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;QACrB,OAAO,KAAK,CAAC;KACd;IACD,KAAK,IAAM,GAAG,IAAI,QAAQ,EAAE;QAC1B,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;YACvD,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;SAIgB,MAAM,CAAC,QAAkC;IACvD,QACE,OAAO,QAAQ,KAAK,WAAW;QAC/B,QAAQ,KAAK,IAAI;SAChB,QAAQ,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW,IAAI,QAAQ,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW,CAAC,EACpF;AACJ;;AChMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAM,KAAK,GAAG,YAAY,CAAC;IAEf;AAAZ,WAAY,SAAS;IACnB,yCAAQ,CAAA;IACR,2CAAS,CAAA;IACT,yCAAQ,CAAA;IACR,2CAAS,CAAA;IACT,yCAAQ,CAAA;AACV,CAAC,EANW,SAAS,KAAT,SAAS,QAMpB;IAUY,GAAG,GAAG,MAAM,GAAG;AAE5B,SAAS,MAAM,CAAC,QAAoC;IAApC,yBAAA,EAAA,WAAsB,SAAS,CAAC,IAAI;IAClD,SAAS,WAAW,CAAC,KAAgB;QACnC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YACpB,QAAQ,GAAG,KAAK,CAAC;SAClB;aAAM;YACL,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;SAC3B;KACF;;;;IAKD,SAAS,KAAK,CAAC,OAAe,EAAE,KAAa;QAAE,qBAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,oCAAyB;;QACtE,IAAI,QAAQ,IAAI,SAAS,CAAC,KAAK,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YACjE,IAAM,MAAM,GAAG,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC;YACtC,IAAI,KAAK,EAAE;gBACT,OAAO,CAAC,KAAK,OAAb,OAAO,iBAAO,MAAM,GAAG,IAAI,EAAE,KAAK,GAAK,WAAW,GAAE;aACrD;iBAAM;gBACL,OAAO,CAAC,KAAK,OAAb,OAAO,iBAAO,MAAM,GAAK,WAAW,GAAE;aACvC;SACF;KACF;;;;IAKD,SAAS,IAAI,CAAC,OAAe,EAAE,KAAa;QAAE,qBAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,oCAAyB;;QACrE,IAAI,QAAQ,IAAI,SAAS,CAAC,IAAI,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChE,IAAM,MAAM,GAAG,KAAK,GAAG,OAAO,CAAC;YAC/B,IAAI,KAAK,EAAE;gBACT,OAAO,CAAC,IAAI,OAAZ,OAAO,iBAAM,MAAM,GAAG,IAAI,EAAE,KAAK,GAAK,WAAW,GAAE;aACpD;iBAAM;gBACL,OAAO,CAAC,IAAI,OAAZ,OAAO,iBAAM,MAAM,GAAK,WAAW,GAAE;aACtC;SACF;KACF;;;;IAKD,SAAS,KAAK,CAAC,OAAe;QAAE,qBAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,oCAAyB;;QACvD,IAAI,QAAQ,IAAI,SAAS,CAAC,KAAK,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YACjE,OAAO,CAAC,KAAK,OAAb,OAAO,iBAAO,KAAK,GAAG,OAAO,GAAK,WAAW,GAAE;SAChD;KACF;;;;IAKD,SAAS,IAAI,CAAC,OAAe;QAAE,qBAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,oCAAyB;;QACtD,IAAI,QAAQ,IAAI,SAAS,CAAC,IAAI,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChE,OAAO,CAAC,IAAI,OAAZ,OAAO,iBAAM,KAAK,GAAG,OAAO,GAAK,WAAW,GAAE;SAC/C;KACF;IAED,OAAO,EAAE,WAAW,aAAA,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,KAAK,OAAA,EAAE,IAAI,MAAA,EAAE,CAAC;AACnD;;AC1GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;;;SAGgB,cAAc;IAC5B,IAAI,gBAAgB,GAA4B,EAAE,CAAC;IACnD,IAAI,oBAAoB,GAAsC,EAAE,CAAC;;;;;;IAOjE,IAAM,mBAAmB,GAAG,UAAC,KAAqB;QAChD,IAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QACtC,IAAM,QAAQ,GAA8B,EAAE,CAAC;QAC/C,IAAM,mBAAmB,GAAG,kBAAkB,CAAC,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAChG,QAAQ,CAAC,IAAI,OAAb,QAAQ,EAAS,mBAAmB,EAAE;QAEtC,IAAM,qBAAqB,GAAG,oBAAoB,CAAC,oBAAoB,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QACxG,QAAQ,CAAC,IAAI,OAAb,QAAQ,EAAS,qBAAqB,EAAE;QAExC,OAAO,QAAQ,CAAC;KACjB,CAAC;IAEF,OAAO;QACL,mBAAmB,EAAnB;YACE,OAAO,gBAAgB,CAAC;SACzB;QAED,uBAAuB,EAAvB;YACE,OAAO,oBAAoB,CAAC;SAC7B;QAED,iBAAiB,EAAjB,UAAkB,QAA8D;YAC9E,IAAM,2BAA2B,GAAiC,EAAE,CAAC;YACrE,IAAM,yBAAyB,GAAuB,EAAE,CAAC;YACzD,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;gBAA3B,IAAM,OAAO,iBAAA;gBAChB,IAAI,4BAA4B,CAAC,OAAO,CAAC,EAAE;oBACzC,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC3C;qBAAM,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;oBACtC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACzC;aACF;YACD,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;YACtE,oBAAoB,GAAG,oBAAoB,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;SACjF;QAED,mBAAmB,EAAnB;YACE,oBAAoB,GAAG,EAAE,CAAC;YAC1B,gBAAgB,GAAG,EAAE,CAAC;SACvB;QAED,oBAAoB,EAApB,UAAqB,QAA8D;oCACtE,OAAO;gBAChB,IAAI,4BAA4B,CAAC,OAAO,CAAC,EAAE;oBACzC,oBAAoB,GAAG,oBAAoB,CAAC,MAAM,CAChD,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAA,CAC3D,CAAC;iBACH;qBAAM,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;oBACtC,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC;iBACxG;;YAPH,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;gBAAzB,IAAM,OAAO,iBAAA;wBAAP,OAAO;aAQjB;SACF;QAED,qBAAqB,EAArB,UAAsB,KAAqB;YACzC,OAAO,mBAAmB,CAAC,KAAK,CAAC,CAAC;SACnC;KACF,CAAC;AACJ,CAAC;SASe,cAAc,CAAC,OAA0B;;;;;;;IAOvD,OAAO;QACL,iBAAiB,EAAE,UAAC,kBAAgD;YAClE,IAAM,gBAAgB,GAAyB,kBAAkB,aAAlB,kBAAkB,cAAlB,kBAAkB,GAAI,EAAE,CAAC;YAExE,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;gBACrB,IAAI;oBACF,IAAI,MAAM,CAAC,QAAQ,EAAE;wBACnB,gBAAgB,CAAC,IAAI,OAArB,gBAAgB,EAAS,MAAM,CAAC,QAAQ,EAAE,EAAE;qBAC7C;iBACF;gBAAC,OAAO,EAAE,EAAE;oBACX,GAAG,CAAC,KAAK,CAAC,8BAA8B,EAAE,EAAE,CAAC,CAAC;iBAC/C;aACF,CAAC,CAAC;YAEH,OAAO,gBAAgB,CAAC;SACzB;KACF,CAAC;AACJ,CAAC;AAED;;;;;;;;SAQgB,qBAAqB,CACnC,uBAA+C;;IAC/C,qBAAqB;SAArB,UAAqB,EAArB,qBAAqB,EAArB,IAAqB;QAArB,oCAAqB;;IAErB,QACE,MAAC,uBAAuB,aAAvB,uBAAuB,uBAAvB,uBAAuB,CACpB,GAAG,CAAC,UAAU,OAAO;QACrB,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;YACjC,IAAI;gBACF,OAAO,OAAO,eAAI,WAAW,EAAE;aAChC;YAAC,OAAO,CAAC,EAAE;;gBAEV,OAAO,SAAS,CAAC;aAClB;SACF;aAAM;YACL,OAAO,OAAO,CAAC;SAChB;KACF,EACA,MAAM,CAAC,OAAO,CAA+B,mCAAI,EAAE,EACtD;AACJ,CAAC;AAED;;;;;SAKgB,cAAc,CAAC,KAAa;IAC1C,IAAM,EAAE,GAAG,IAAI,MAAM,CACnB,oGAAoG,CACrG,CAAC;IACF,IAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,OAAO,KAAK,IAAI;QAAE,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;;SAKgB,mBAAmB,CAAC,KAAoB;IACtD,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACxC,OAAO,KAAK,CAAC;KACd;IACD,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,KAAmB,UAAc,EAAd,KAAA,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAd,cAAc,EAAd,IAAc,EAAE;YAA9B,IAAM,IAAI,SAAA;YACb,IAAI,IAAI,KAAK,GAAG;;gBAEd,QAAQ,GAAG,IAAI,CAAC;iBACb,IAAI,QAAQ;;gBAEf,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;KACb;SAAM,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;QAAE,OAAO,IAAI,CAAC;IAE1C,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,cAAc,CAAC,KAAa;IAC1C,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;QAAE,OAAO,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACjE,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,YAAY,CAAC,KAAa;IACxC,IAAM,EAAE,GAAG,IAAI,MAAM,CACnB,wJAAwJ,CACzJ,CAAC;IACF,IAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,OAAO,KAAK,IAAI,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAAE,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/E,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;;SAKgB,WAAW,CAAC,KAAa;IACvC,IAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IACtC,IAAI,SAAS,EAAE;QACb,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5B,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC;KACzD;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,aAAa,CAAC,KAAc;IAC1C,QACE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QACpB,KAAK,CAAC,KAAK,CAAC,UAAC,CAAC;YACZ,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC;SAC9B,CAAC,EACF;AACJ,CAAC;AAED;;;;;SAKgB,iBAAiB,CAAC,KAAc;IAC9C,IAAI,aAAa,CAAC,KAAK,CAAC;QACtB,OAAO,KAAK,CAAC,KAAK,CAAC,UAAC,CAAS;YAC3B,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC;SACvB,CAAC,CAAC;SACA,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;IAC9D,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,oBAAoB,CAAC,KAAc;IACjD,IAAM,GAAG,GAAG,KAA2B,CAAC;IACxC,IAAI,cAAc,CAAC,GAAG,CAAC;QACrB,IAAI,QAAQ,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG;YAAE,OAAO,OAAO,GAAG,CAAC,MAAM,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC;IAC9G,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,SAAS,CAAC,KAAc;IACtC,IAAM,OAAO,GAAG,KAAgC,CAAC;IACjD,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACvE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YAC3D,IAAI,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBACxC,SAAS,IAAI,CAAC,CAAC;aAChB;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;SACF;QACD,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YAC3D,IAAI,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBACxC,SAAS,IAAI,CAAC,CAAC;aAChB;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;SACF;;;QAGD,OAAO,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC;KACxC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;SAIgB,yBAAyB,CAAC,KAAc;IACtD,OAAO,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;AAC1D,CAAC;AAED;;;;;SAKgB,kBAAkB,CAAC,KAAc;IAC/C,OAAO,yBAAyB,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;AACzE,CAAC;AAED;;;;SAIgB,gBAAgB,CAAC,KAAc;IAC7C,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC3B,OAAO,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;aAClF;YACD,OAAO,yBAAyB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5E;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;SAIgB,iBAAiB,CAAC,KAAc;IAC9C,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QACvC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACvE,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,4BAA4B,CAAC,KAAc;IACzD,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC7D,CAAC;AAED;;;;;SAKgB,yBAAyB,CAAC,OAAgB,EAAE,MAAc;IACxE,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;QAC9B,IAAK,OAAO,CAAC,MAAwB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,GAAA,CAAC,EAAE;YAC1F,WAAW,EAAE,CAAC;SACf;KACF;SAAM,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;QAC1C,IAAI,sBAAsB,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE;YAC/C,WAAW,EAAE,CAAC;SACf;KACF;IAED,IAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;QAC9B,IAAK,OAAO,CAAC,MAAwB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,GAAA,CAAC,EAAE;YAC1F,WAAW,EAAE,CAAC;SACf;KACF;SAAM,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;QAC1C,IAAI,sBAAsB,CAAC,WAAW,EAAE,MAAM,CAAC,EAAE;YAC/C,WAAW,EAAE,CAAC;SACf;KACF;IAED,IAAI,WAAW,GAAG,CAAC,IAAI,WAAW,KAAK,CAAC,EAAE;QACxC,OAAO,IAAI,CAAC;KACb;SAAM,IAAI,WAAW,KAAK,CAAC,IAAI,WAAW,GAAG,CAAC,EAAE;QAC/C,OAAO,KAAK,CAAC;KACd;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;SAKgB,sBAAsB,CAAC,IAAY,EAAE,MAAc;IACjE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAAE,OAAO,KAAK,CAAC;IACrC,IAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,IAAM,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,SAAS,IAAI,WAAW,EAAE;QAC5B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;SAC5D;QACD,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,WAAW,CAAC,IAAY,EAAE,MAAc;;IAE/C,IAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,WAAW,IAAI,SAAS,EAAE;QAC5B,IAAI,WAAW,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC;QAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAC;SAC5D;QACD,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,SAAS,CAAC,IAAY,EAAE,MAAc;;IAE7C,OAAO,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,MAAM,CAAC;AAC7D,CAAC;AAED;AACA;AACA;AACA,SAAS,eAAe,CAAC,EAAkB;IACzC,IAAI,SAAS,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;IAC7B,KAAmB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;QAAzB,IAAM,IAAI,kBAAA;QACb,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;YAC1E,IAAM,MAAM,GAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAA6B,CAAC,QAAQ,CAAC,CAAC;YACxE,IAAI,OAAO,MAAM,IAAI,QAAQ,EAAE;gBAC7B,OAAO,MAAM,CAAC;aACf;SACF;KACF;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,YAAY,CAAC,cAA8B;IAClD,IAAM,SAAS,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC;IACnD,OAAO,OAAO,SAAS,KAAK,QAAQ,GAAG,SAAS,GAAG,EAAE,CAAC;AACxD,CAAC;AAED,SAAS,cAAc,CACrB,SAA2B,EAC3B,KAAqB,EACrB,SAAiB,EACjB,WAAmB;IAEnB,IAAI,sBAAsB,GAA+D,SAAS,CAAC;IACnG,IAAI;;QAEF,IAAM,IAAI,GAAG;YACX,KAAK,EAAE,KAAK,CAAC,UAAU,EAAE;YACzB,SAAS,EAAE,SAAS;YACpB,WAAW,EAAE,WAAW;SACzB,CAAC;QACF,sBAAsB,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;;QAEzC,IAAI,KAAK,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,sBAAsB,CAAC,KAAK,CAAC,oBAAoB,CAAC,EAAE;YAC/F,OAAO,sBAAsB,CAAC;SAC/B;aAAM,IAAI,oBAAoB,CAAC,sBAAsB,CAAC,EAAE;YACvD,OAAO,sBAAsB,CAAC;SAC/B;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;KACF;IAAC,OAAO,KAAK,EAAE;QACd,sBAAsB,GAAG,SAAS,CAAC;KACpC;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC;AAED,SAAS,gBAAgB,CAAI,KAAmB;IAC9C,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AAED,SAAS,kBAAkB,CACzB,iBAA6D,EAC7D,KAAqB,EACrB,SAAiB,EACjB,WAAmB;;IAEnB,IAAM,gBAAgB,GAA4B,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;IACtF,IAAM,eAAe,GAAG,UAAC,SAA2B;QAClD,IAAM,MAAM,GAAG,iBAAiB,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAC3E,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,MAAM,CAAC;SACf;QACD,OAAO,SAAS,CAAC;KAClB,CAAC;IACF,IAAM,iBAAiB,GAAG,gBAAgB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAChE,OAAO,CAAA,KAAC,EAAgC,EAAC,MAAM,WACzC,iBAAiB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAA,CAAsC,EACxG;AACJ,CAAC;AAED,SAAS,iBAAiB,CACxB,gBAAkC,EAClC,KAAqB,EACrB,SAAiB,EACjB,WAAmB;IAEnB,IAAI,oBAAoB,CAAC,gBAAgB,CAAC,EAAE;QAC1C,OAAO,CAAC,gBAAsC,CAAC,CAAC;KACjD;SAAM,IAAI,yBAAyB,CAAC,gBAAgB,CAAC,EAAE;QACtD,IAAM,eAAe,GAAG,cAAc,CAAC,gBAAoC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAC5G,IAAI,oBAAoB,CAAC,eAAe,CAAC,EAAE;YACzC,OAAO,CAAC,eAAqC,CAAC,CAAC;SAChD;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YACzC,OAAO,eAAe,CAAC;SACxB;KACF;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,gBAAgB,CACvB,QAAoC,EACpC,KAAqB,EACrB,SAAiB,EACjB,WAAmB;IAEnB,IAAI,gBAAgB,CAAC,QAAQ,CAAC,EAAE;QAC9B,IAAM,MAAM,GAAmB,QAA2B,CAAC,CAAC,CAAC,CAAC;QAC9D,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI;YACF,IAAM,IAAI,GAAG;gBACX,KAAK,EAAE,KAAK,CAAC,UAAU,EAAE;gBACzB,SAAS,EAAE,SAAS;gBACpB,WAAW,EAAE,WAAW;aACzB,CAAC;YACF,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SAC7B;QAAC,OAAO,KAAK,EAAE;YACd,YAAY,GAAG,KAAK,CAAC;SACtB;QACD,IAAI,YAAY,KAAK,IAAI,EAAE;YACzB,OAAO,kBAAkB,CAAE,QAA2B,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;SAC3F;KACF;SAAM,IAAI,iBAAiB,CAAC,QAAQ,CAAC,EAAE;QACtC,IAAI,yBAAyB,CAAE,QAA4B,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE;YAC5E,OAAO,kBAAkB,CAAE,QAA4B,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;SAC5F;KACF;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,oBAAoB,CAC3B,SAAyE,EACzE,KAAqB,EACrB,SAAiB,EACjB,WAAmB;;IAEnB,IAAM,eAAe,GAAsC,gBAAgB,CAAC,SAAS,CAAC,CAAC;IACvF,IAAM,eAAe,GAAG,UAAC,QAAoC;QAC3D,IAAM,MAAM,GAAG,gBAAgB,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QACzE,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,MAAM,CAAC;SACf;QACD,OAAO,SAAS,CAAC;KAClB,CAAC;IACF,IAAM,iBAAiB,GAAG,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC/D,OAAO,CAAA,KAAC,EAAgC,EAAC,MAAM,WACzC,iBAAiB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAA,CAAsC,EACxG;AACJ;;ACxrBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;;;;;;AAMA,SAAS,YAAY,CAAC,SAA4B;IAChD,IAAI,SAAS,IAAI,IAAI,EAAE;QACrB,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;KACrD;SAAM,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;QACxC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;KAC1C;SAAM,IAAI,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE;;QAEnC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC;KAChD;SAAM;QACL,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;KACxE;AACH,CAAC;AAqMD;;;;;;;;SAQgB,WAAW,CAAC,aAAqC;IAArC,8BAAA,EAAA,kBAAqC;IAC/D,SAAS,OAAO,CAAC,MAAe,EAAE,WAA8B,EAAE,QAAgD;QAChH,IAAM,oBAAoB,GAAmB,cAAc,CAAC,WAAW,CAAC,EACtE,oBAAoB,GAAmB,cAAc,EAAE,CAAC;QAE1D,IAAI,YAAY,GAAG,MAAM,EACvB,YAAY,GAAY,EAAE,CAAC;;;;;;;QAQ7B,SAAS,gBAAgB,CACvB,QAAoC;YAEpC,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;gBAC/B,OAAO;oBACL,MAAM,EAAE,+DAA+D;oBACvE,IAAI,EAAE,QAAQ;iBACf,CAAC;aACH;YACD,OAAO,SAAS,CAAC;SAClB;;;;;;;QAQD,SAAS,oBAAoB,CAC3B,EAAkB,EAClB,QAA2C;YAE3C,IAAM,kBAAkB,GAA8B,oBAAoB,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YACrG,IAAM,gBAAgB,GAA8B,EAAE,CAAC;YACvD,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;gBAC/B,gBAAgB,CAAC,IAAI,OAArB,gBAAgB,EAAS,QAAQ,EAAE;aACpC;YACD,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE;gBACnD,gBAAgB,CAAC,IAAI,OAArB,gBAAgB,EAAS,kBAAkB,EAAE;aAC9C;YACD,OAAO,gBAAgB,CAAC;SACzB;;;;;;;;;;;QAYD,SAAS,KAAK,CACZ,EAAkB,EAClB,OAA0C,EAC1C,SAA4B;YAE5B,EAAE,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC;YACzD,EAAE,CAAC,GAAG,CAAC,KAAK,EAAEA,EAAI,EAAE,CAAC,CAAC;YACtB,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACzB,IAAM,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YACvC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7C,IAAM,WAAW,GAAG,oBAAoB,CAAC,EAAE,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9F,IAAM,eAAe,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,eAAe,KAAK,SAAS,EAAE;gBACjC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;aACzC;YAED,WAAW,CAAC,OAAO,CAAC,UAAC,MAAM;gBACzB,IAAI;oBACF,IAAI,MAAM,CAAC,WAAW,EAAE;wBACtB,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;qBACxB;iBACF;gBAAC,OAAO,EAAE,EAAE;oBACX,GAAG,CAAC,KAAK,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;iBACrC;aACF,CAAC,CAAC;YAEH,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;gBAClC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACd;YAED,IAAM,YAAY,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;YAEhC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAM;gBACzB,IAAI;oBACF,IAAI,MAAM,CAAC,UAAU,EAAE;wBACrB,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;qBACjC;iBACF;gBAAC,OAAO,EAAE,EAAE;oBACX,GAAG,CAAC,KAAK,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;iBACpC;aACF,CAAC,CAAC;YAEH,OAAO,YAAY,CAAC;SACrB;;;;;;;QAQD,SAAS,cAAc,CAAC,GAAW,EAAE,KAAsB;YACzD,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAC3B;QAED,IAAM,IAAI,GAAG;YACX,KAAK,OAAA;YAEL,cAAc,gBAAA;YAEd,iBAAiB;gBACf,OAAO,YAAY,CAAC;aACrB;YAED,iBAAiB,EAAjB,UAAkB,MAAe;gBAC/B,YAAY,GAAG,MAAM,CAAC;aACvB;YAED,cAAc,EAAd,UAAe,IAAa;gBAC1B,KAAK,IAAM,GAAG,IAAI,IAAI,EAAE;oBACtB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;wBACnD,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC/B;iBACF;aACF;YAED,iBAAiB,EAAjB,UAAkB,IAAa;gBAC7B,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;aACzC;YAED,iBAAiB,EAAjB,UAAkB,OAAe;gBAC/B,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aAC/B;YAED,mBAAmB,EAAnB,UAAoB,IAAY;gBAC9B,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAC7B;YAED,QAAQ,EAAR,UAAS,KAAa;gBACpB,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC9B;YAED,WAAW,EAAX,UAAY,KAAa;gBACvB,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC5B;YAED,SAAS,EAAT,UAAU,MAAc;gBACtB,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAC/B;YAED,mBAAmB,EAAnB,UAAoB,KAAa,EAAE,MAAc;gBAC/C,cAAc,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;aAC7C;YAED,WAAW,EAAX,UAAY,KAAa,EAAE,MAAc;gBACvC,cAAc,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;aAC5C;YAED,aAAa,EAAb,UAAc,KAAa;gBACzB,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7B;YAED,WAAW,EAAX,UAAY,QAAgB;gBAC1B,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAChC;YAED,OAAO,EAAP,UAAQ,IAAY;gBAClB,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC9B;YAED,YAAY,EAAZ,UAAa,EAAU;gBACrB,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aAC1B;YAED,YAAY,EAAZ,UAAa,SAAiB;gBAC5B,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aACjC;YAED,iBAAiB,EAAjB,UAAkB,QAA8D;gBAC9E,oBAAoB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;aAClD;YAED,mBAAmB,EAAnB;gBACE,oBAAoB,CAAC,mBAAmB,EAAE,CAAC;aAC5C;YAED,oBAAoB,EAApB,UAAqB,QAA8D;gBACjF,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;aACrD;SACF,CAAC;QAEF,OAAO,IAAI,CAAC;KACb;IAEO,IAAA,MAAM,GAA4B,aAAa,OAAzC,EAAE,WAAW,GAAe,aAAa,YAA5B,EAAE,QAAQ,GAAK,aAAa,SAAlB,EACnC,OAAO,GAAG,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,EAC3B,WAAW,GAAG,OAAO,CAAC,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,EACxD,IAAI,yBACC,WAAW,KACd,SAAS,EAAE,UAAC,aAAsC;;YACxC,IAAA,MAAM,GAAK,aAAa,OAAlB,CAAmB;YACjC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,MAAA,MAAM,CAAC,MAAM,+CAAb,MAAM,EAAU,GAAG,CAAC,CAAC;YACrB,MAAA,MAAM,CAAC,kBAAkB,+CAAzB,MAAM,EAAsB,IAAI,CAAC,CAAC;SACnC,GACF,CAAC;IAEJ,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC,UAAC,MAAM;;QACtB,MAAA,MAAM,CAAC,MAAM,+CAAb,MAAM,EAAU,GAAG,CAAC,CAAC;QACrB,MAAA,MAAM,CAAC,kBAAkB,+CAAzB,MAAM,EAAsB,IAAI,CAAC,CAAC;KACnC,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC;AAYD;;;;;;;;SAQgB,wBAAwB,CAAC,KAA0B;IAE7D,IAAA,KACE,KAAK,MADgB,EAAd,MAAM,YAAA,EAAE,IAAI,UAAA,EAEvB,EAAE,GAAG,cAAc,EAAE,CAAC;IACxB,IAAM,MAAM,GAAG;QACb,MAAM,EAAE,qEAAqE;QAC7E,IAAI,EAAE,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE;KACvB,CAAC;IAEF,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClB,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAErC,OAAO,EAAE,CAAC;AACZ,CAAC;AAiBD;;;;;;;;;SASgB,aAAa,CAAC,KAAoB;IACxC,IAAA,OAAO,GAA0B,KAAK,QAA/B,EAAE,SAAS,GAAe,KAAK,UAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,EAClC,EAAE,GAAG,cAAc,EAAE,CAAC;IACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACvB,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAEzB,OAAO,EAAE,CAAC;AACZ,CAAC;AAmBD;;;;;;;;;SASgB,aAAa,CAAC,KAAoB;IACxC,IAAA,OAAO,GAA0E,KAAK,QAA/E,EAAE,SAAS,GAA+D,KAAK,UAApE,EAAE,QAAQ,GAAqD,KAAK,SAA1D,EAAE,UAAU,GAAyC,KAAK,WAA9C,EAAE,UAAU,GAA6B,KAAK,WAAlC,EAAE,UAAU,GAAiB,KAAK,WAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,EAClF,EAAE,GAAG,cAAc,EAAE,CAAC;IACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACvB,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACzB,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtF,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtF,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtF,IAAI,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEtF,OAAO,EAAE,CAAC;AACZ,CAAC;AAgBD;;;;;;;;;SASgB,gBAAgB,CAAC,KAAsB;IAC7C,IAAA,QAAQ,GAAqC,KAAK,SAA1C,EAAE,MAAM,GAA6B,KAAK,OAAlC,EAAE,KAAK,GAAsB,KAAK,MAA3B,EAAE,QAAQ,GAAY,KAAK,SAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,EAC9C,EAAE,GAAG,cAAc,EAAE,CAAC;IACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACxB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAE9D,OAAO,EAAE,CAAC;AACZ,CAAC;AA4BD;;;;;;;;SAQgB,yBAAyB,CAAC,KAAgC;IAChE,IAAA,OAAO,GAAwE,KAAK,QAA7E,EAAE,KAAK,GAAiE,KAAK,MAAtE,EAAE,WAAW,GAAoD,KAAK,YAAzD,EAAE,GAAG,GAA+C,KAAK,IAApD,EAAE,QAAQ,GAAqC,KAAK,SAA1C,EAAE,IAAI,GAA+B,KAAK,KAApC,EAAE,KAAK,GAAwB,KAAK,MAA7B,EAAE,OAAO,GAAe,KAAK,QAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,EAChF,EAAE,GAAG,cAAc,EAAE,CAAC;IACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC7B,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACrB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACtB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAE1B,OAAO,EAAE,CAAC;AACZ,CAAC;AAwBD;;;;;;;;SAQgB,6BAA6B,CAAC,KAAoC;IACxE,IAAA,OAAO,GAAqD,KAAK,QAA1D,EAAE,GAAG,GAAgD,KAAK,IAArD,EAAE,KAAK,GAAyC,KAAK,MAA9C,EAAE,IAAI,GAAmC,KAAK,KAAxC,EAAE,QAAQ,GAAyB,KAAK,SAA9B,EAAE,QAAQ,GAAe,KAAK,SAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,EAC7D,EAAE,GAAG,cAAc,EAAE,CAAC;IACxB,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACrB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACtB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvB,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC1B,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAE1B,OAAO,EAAE,CAAC;AACZ,CAAC;AAeD;;;;;;;;;SASgB,eAAe,CAAC,KAAsB;IAC5C,IAAA,IAAI,GAAS,KAAK,KAAd,EAAE,EAAE,GAAK,KAAK,GAAV,CAAW;IAC3B,OAAO,wBAAwB,CAAC;QAC9B,KAAK,EAAE;YACL,MAAM,EAAE,kEAAkE;YAC1E,IAAI,EAAE,qBAAqB,CAAC,EAAE,IAAI,MAAA,EAAE,EAAE,IAAA,EAAE,CAAC;SAC1C;KACF,CAAC,CAAC;AACL,CAAC;AAmBD;;;;;;;SAOgB,cAAc,CAAC,KAAqB;IAC1C,IAAA,SAAS,GAA+D,KAAK,UAApE,EAAE,SAAS,GAAoD,KAAK,UAAzD,EAAE,cAAc,GAAoC,KAAK,eAAzC,EAAE,aAAa,GAAqB,KAAK,cAA1B,EAAE,cAAc,GAAK,KAAK,eAAV,CAAW;IACtF,IAAM,SAAS,GAAG;QAChB,MAAM,EAAE,iEAAiE;QACzE,IAAI,EAAE,qBAAqB,CAAC,EAAE,SAAS,WAAA,EAAE,SAAS,WAAA,EAAE,cAAc,gBAAA,EAAE,aAAa,eAAA,EAAE,cAAc,gBAAA,EAAE,CAAC;KACrG,CAAC;IAEF,OAAO,wBAAwB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AACxD,CAAC;AA4BD;;;;;;;;;;SAUgB,iBAAiB,CAAC,KAAwB;IAChD,IAAA,YAAY,GAA6E,KAAK,aAAlF,EAAE,SAAS,GAAkE,KAAK,UAAvE,EAAE,IAAI,GAA4D,KAAK,KAAjE,EAAE,SAAS,GAAiD,KAAK,UAAtD,EAAE,QAAQ,GAAuC,KAAK,SAA5C,EAAE,MAAM,GAA+B,KAAK,OAApC,EAAE,YAAY,GAAiB,KAAK,aAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;IACvG,IAAM,SAAS,GAAG;QAChB,MAAM,EAAE,oEAAoE;QAC5E,IAAI,EAAE,qBAAqB,CAAC;YAC1B,YAAY,cAAA;YACZ,SAAS,WAAA;YACT,IAAI,MAAA;YACJ,SAAS,WAAA;YACT,QAAQ,UAAA;YACR,MAAM,QAAA;YACN,YAAY,cAAA;YACZ,UAAU,YAAA;SACX,CAAC;KACH,CAAC;IAEF,OAAO,wBAAwB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AACxD,CAAC;AA8BD;;;;;;;;;;SAUgB,YAAY,CAAC,KAAmB;IACtC,IAAA,SAAS,GAAyF,KAAK,UAA9F,EAAE,OAAO,GAAgF,KAAK,QAArF,EAAE,SAAS,GAAqE,KAAK,UAA1E,EAAE,IAAI,GAA+D,KAAK,KAApE,EAAE,QAAQ,GAAqD,KAAK,SAA1D,EAAE,MAAM,GAA6C,KAAK,OAAlD,EAAE,YAAY,GAA+B,KAAK,aAApC,EAAE,YAAY,GAAiB,KAAK,aAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;IAChH,IAAM,SAAS,GAAG;QAChB,MAAM,EAAE,+DAA+D;QACvE,IAAI,EAAE,qBAAqB,CAAC;YAC1B,SAAS,WAAA;YACT,OAAO,SAAA;YACP,SAAS,WAAA;YACT,IAAI,MAAA;YACJ,QAAQ,UAAA;YACR,MAAM,QAAA;YACN,YAAY,cAAA;YACZ,YAAY,cAAA;YACZ,UAAU,YAAA;SACX,CAAC;KACH,CAAC;IAEF,OAAO,wBAAwB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AACxD,CAAC;AA8BD;;;;;;;;;;SAUgB,iBAAiB,CAAC,KAAwB;IAChD,IAAA,YAAY,GAA0F,KAAK,aAA/F,EAAE,SAAS,GAA+E,KAAK,UAApF,EAAE,IAAI,GAAyE,KAAK,KAA9E,EAAE,QAAQ,GAA+D,KAAK,SAApE,EAAE,MAAM,GAAuD,KAAK,OAA5D,EAAE,QAAQ,GAA6C,KAAK,SAAlD,EAAE,YAAY,GAA+B,KAAK,aAApC,EAAE,YAAY,GAAiB,KAAK,aAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;IACpH,IAAM,SAAS,GAAG;QAChB,MAAM,EAAE,oEAAoE;QAC5E,IAAI,EAAE,qBAAqB,CAAC;YAC1B,YAAY,cAAA;YACZ,SAAS,WAAA;YACT,IAAI,MAAA;YACJ,QAAQ,UAAA;YACR,MAAM,QAAA;YACN,QAAQ,UAAA;YACR,YAAY,cAAA;YACZ,YAAY,cAAA;YACZ,UAAU,YAAA;SACX,CAAC;KACH,CAAC;IAEF,OAAO,wBAAwB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AACxD,CAAC;AAiBD;;;;;;;;;SASgB,sBAAsB,CAAC,KAA6B;IAC1D,IAAA,MAAM,GAAsB,KAAK,OAA3B,EAAE,OAAO,GAAa,KAAK,QAAlB,EAAE,MAAM,GAAK,KAAK,OAAV,CAAW;IAC1C,IAAM,SAAS,GAAG;QAChB,MAAM,EAAE,yEAAyE;QACjF,IAAI,EAAE,qBAAqB,CAAC,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC;KACzD,CAAC;IAEF,OAAO,wBAAwB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AACxD,CAAC;AAsBD;;;;;;;;SAQgB,cAAc,CAAC,KAAqB;IAC1C,IAAA,GAAG,GAAoD,KAAK,IAAzD,EAAE,QAAQ,GAA0C,KAAK,SAA/C,EAAE,IAAI,GAAoC,KAAK,KAAzC,EAAE,QAAQ,GAA0B,KAAK,SAA/B,EAAE,SAAS,GAAe,KAAK,UAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IACrE,OAAO,wBAAwB,CAAC;QAC9B,KAAK,EAAE;YACL,MAAM,EAAE,kEAAkE;YAC1E,IAAI,EAAE,qBAAqB,CAAC;gBAC1B,GAAG,KAAA;gBACH,QAAQ,UAAA;gBACR,IAAI,MAAA;gBACJ,QAAQ,UAAA;gBACR,SAAS,WAAA;gBACT,QAAQ,UAAA;aACT,CAAC;SACH;KACF,CAAC,CAAC;AACL,CAAC;AAsBD;;;;;;;;SAQgB,mBAAmB,CAAC,KAA0B;IACpD,IAAA,GAAG,GAAoD,KAAK,IAAzD,EAAE,QAAQ,GAA0C,KAAK,SAA/C,EAAE,IAAI,GAAoC,KAAK,KAAzC,EAAE,QAAQ,GAA0B,KAAK,SAA/B,EAAE,SAAS,GAAe,KAAK,UAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IACrE,OAAO,wBAAwB,CAAC;QAC9B,KAAK,EAAE;YACL,MAAM,EAAE,uEAAuE;YAC/E,IAAI,EAAE,qBAAqB,CAAC;gBAC1B,GAAG,KAAA;gBACH,QAAQ,UAAA;gBACR,IAAI,MAAA;gBACJ,QAAQ,UAAA;gBACR,SAAS,WAAA;gBACT,QAAQ,UAAA;aACT,CAAC;SACH;KACF,CAAC,CAAC;AACL,CAAC;AAwBD;;;;;;;;SAQgB,sBAAsB,CAAC,KAA6B;IAClE,IAAI,YAAY,GAAG,EAAE,CAAC;IACd,IAAA,MAAM,GAA+D,KAAK,OAApE,EAAE,MAAM,GAAuD,KAAK,OAA5D,EAAE,SAAS,GAA4C,KAAK,UAAjD,EAAE,QAAQ,GAAkC,KAAK,SAAvC,EAAE,cAAc,GAAkB,KAAK,eAAvB,EAAE,KAAK,GAAW,KAAK,MAAhB,EAAE,IAAI,GAAK,KAAK,KAAV,CAAW;IACnF,IAAM,UAAU,GAA4B,EAAE,MAAM,QAAA,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA,EAAE,cAAc,gBAAA,EAAE,KAAK,OAAA,EAAE,CAAC;IACnG,IAAI,MAAM,KAAK,aAAa,EAAE;QAC5B,YAAY,GAAG,kEAAkE,CAAC;QAClF,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;KACxB;SAAM,IAAI,MAAM,KAAK,YAAY,EAAE;QAClC,YAAY,GAAG,iEAAiE,CAAC;QACjF,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;KAC/B;IACD,OAAO,wBAAwB,CAAC;QAC9B,KAAK,EAAE;YACL,MAAM,EAAE,YAAY;YACpB,IAAI,EAAE,qBAAqB,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACzD;KACF,CAAC,CAAC;AACL,CAAC;AA6BD;;;;;;;SAOgB,mBAAmB,CAAC,KAA0B;IACpD,IAAA,MAAM,GAA4B,KAAK,OAAjC,EAAE,WAAW,GAAe,KAAK,YAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IAChD,OAAO,wBAAwB,CAAC;QAC9B,KAAK,EAAE;YACL,MAAM,EAAE,kEAAkE;YAC1E,IAAI,EAAE,qBAAqB,CAAC,EAAE,MAAM,QAAA,EAAE,WAAW,aAAA,EAAE,QAAQ,UAAA,EAAE,CAAC;SAC/D;KACF,CAAC,CAAC;AACL,CAAC;AAiBD;;;;;;;SAOgB,eAAe,CAAC,KAAsB;IAC5C,IAAA,KAAK,GAAyC,KAAK,MAA9C,EAAE,OAAO,GAAgC,KAAK,QAArC,EAAE,YAAY,GAAkB,KAAK,aAAvB,EAAE,WAAW,GAAK,KAAK,YAAV,CAAW;IAC5D,OAAO,wBAAwB,CAAC;QAC9B,KAAK,EAAE;YACL,MAAM,EAAE,kEAAkE;YAC1E,IAAI,EAAE,qBAAqB,CAAC,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,YAAY,cAAA,EAAE,WAAW,aAAA,EAAE,CAAC;SAC3E;KACF,CAAC,CAAC;AACL,CAAC;AAmBD;;;;;;;SAOgB,qBAAqB,CAAC,KAA4B;IACxD,IAAA,GAAG,GAAqC,KAAK,IAA1C,EAAE,EAAE,GAAiC,KAAK,GAAtC,EAAE,OAAO,GAAwB,KAAK,QAA7B,EAAE,IAAI,GAAkB,KAAK,KAAvB,EAAE,WAAW,GAAK,KAAK,YAAV,CAAW;IACtD,IAAM,YAAY,GAAG;QACnB,MAAM,EAAE,uEAAuE;QAC/E,IAAI,EAAE,qBAAqB,CAAC,EAAE,EAAE,IAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE,WAAW,aAAA,EAAE,CAAC;KAChE,CAAC;IAEF,OAAO;QACL,KAAK,EAAE,wBAAwB,CAAC;YAC9B,KAAK,EAAE;gBACL,MAAM,EAAE,wEAAwE;gBAChF,IAAI,EAAE,qBAAqB,CAAC;oBAC1B,GAAG,EAAE,GAAG;iBACT,CAAC;aACH;SACF,CAAC;QACF,OAAO,EAAE,CAAC,YAAY,CAAC;KACxB,CAAC;AACJ,CAAC;AAmBD;;;;;;;SAOgB,mBAAmB,CAAC,KAA0B;IACpD,IAAA,MAAM,GAAqC,KAAK,OAA1C,EAAE,EAAE,GAAiC,KAAK,GAAtC,EAAE,OAAO,GAAwB,KAAK,QAA7B,EAAE,IAAI,GAAkB,KAAK,KAAvB,EAAE,WAAW,GAAK,KAAK,YAAV,CAAW;IACzD,IAAM,YAAY,GAAG;QACnB,MAAM,EAAE,uEAAuE;QAC/E,IAAI,EAAE,qBAAqB,CAAC,EAAE,EAAE,IAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE,WAAW,aAAA,EAAE,CAAC;KAChE,CAAC;IAEF,OAAO;QACL,KAAK,EAAE,wBAAwB,CAAC;YAC9B,KAAK,EAAE;gBACL,MAAM,EAAE,sEAAsE;gBAC9E,IAAI,EAAE,qBAAqB,CAAC;oBAC1B,MAAM,EAAE,MAAM;iBACf,CAAC;aACH;SACF,CAAC;QACF,OAAO,EAAE,CAAC,YAAY,CAAC;KACxB,CAAC;AACJ,CAAC;AAED;;;;;;;AAOA,SAAS,qBAAqB,CAC5B,KAA8B,EAC9B,YAA0C;IAA1C,6BAAA,EAAA,iBAA0C;IAE1C,IAAM,GAAG,GAA4B,EAAE,CAAC;IACxC,KAAK,IAAM,CAAC,IAAI,KAAK,EAAE;QACrB,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,EAAE;YAC7E,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACnB;KACF;IACD,OAAO,GAAG,CAAC;AACb;;ACn2CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCa,OAAO,GAAGC;;"}