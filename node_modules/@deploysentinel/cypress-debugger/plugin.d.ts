import { Protocol } from 'devtools-protocol/types/protocol';

type DSNetworkEvent = {
    /** @deprecated use request.url instead */
    url?: string;
    /** @deprecated use request.method instead */
    method?: string;
    /** @deprecated use request.headers instead */
    headers?: {
        [key: string]: string;
    };
    request: {
        url: string;
        method: string;
        headers: {
            [key: string]: string;
        };
    };
    response?: {
        headers: {
            [key: string]: string;
        };
        statusCode: number;
        statusMessage: string;
        bodySize: number;
        body: string;
    };
};
declare enum NetworkMockMode {
    Record = "record",
    Intercept = "intercept"
}
type DebuggerOptions = {
    networkMock?: {
        clearMocks?: boolean;
        excludeUrls?: string[];
        includeUrls?: string[];
        methods?: ('GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'HEAD')[];
        mode: NetworkMockMode;
        resourceTypes?: Protocol.Network.ResourceType[];
    };
    beforeNetworkSend?: (event: DSNetworkEvent) => DSNetworkEvent | null | undefined;
};

declare const _default: (_on: Cypress.PluginEvents, _config: Cypress.PluginConfigOptions, debuggerOptions?: DebuggerOptions) => [Cypress.PluginEvents, Cypress.PluginConfigOptions];

export { _default as default };
